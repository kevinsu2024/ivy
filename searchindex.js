Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/floor_divide","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/floor_divide","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/floor_divide","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/floor_divide.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/floor_divide.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/floor_divide.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[826,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[385,0,0,"-"],creation_functions:[386,0,0,"-"],data_type_functions:[389,0,0,"-"],data_types:[393,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[387,2,1,""],zeros:[388,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[389,1,1,""],finfo:[391,2,1,""],iinfo:[392,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[389,3,1,""],bits:[389,3,1,""],eps:[389,3,1,""],max:[389,3,1,""],min:[389,3,1,""],smallest_normal:[389,3,1,""]},"ivy.functional.backends.numpy.core":{device:[430,0,0,"-"],general:[432,0,0,"-"],gradients:[466,0,0,"-"],image:[471,0,0,"-"],linear_algebra:[475,0,0,"-"],logic:[479,0,0,"-"],math:[480,0,0,"-"],random:[482,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[431,1,1,""],clear_mem_on_dev:[430,2,1,""],dev:[430,2,1,""],dev_from_str:[430,2,1,""],dev_to_str:[430,2,1,""],gpu_is_available:[430,2,1,""],num_gpus:[430,2,1,""],to_dev:[430,2,1,""],tpu_is_available:[430,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[431,3,1,""],start:[431,3,1,""],stop:[431,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[432,2,1,""],arange:[433,2,1,""],argmax:[434,2,1,""],argmin:[435,2,1,""],array:[436,2,1,""],asarray:[432,2,1,""],astype:[432,2,1,""],cast:[437,2,1,""],ceil:[432,2,1,""],clip:[432,2,1,""],compile:[438,2,1,""],concatenate:[439,2,1,""],constant_pad:[432,2,1,""],container_types:[432,2,1,""],copy_array:[432,2,1,""],cumprod:[440,2,1,""],current_framework_str:[432,2,1,""],dtype:[441,2,1,""],dtype_bits:[442,2,1,""],dtype_from_str:[443,2,1,""],dtype_to_str:[444,2,1,""],equal:[432,2,1,""],floor:[432,2,1,""],floormod:[432,2,1,""],full:[445,2,1,""],gather:[446,2,1,""],gather_nd:[447,2,1,""],get_num_dims:[432,2,1,""],identity:[448,2,1,""],indices_where:[449,2,1,""],inplace_arrays_supported:[432,2,1,""],inplace_decrement:[450,2,1,""],inplace_increment:[451,2,1,""],inplace_update:[452,2,1,""],inplace_variables_supported:[432,2,1,""],is_array:[453,2,1,""],linear_resample:[454,2,1,""],linspace:[455,2,1,""],logspace:[456,2,1,""],matmul:[432,2,1,""],meshgrid:[432,2,1,""],multiprocessing:[432,2,1,""],one_hot:[457,2,1,""],ones_like:[458,2,1,""],round:[432,2,1,""],scatter_flat:[459,2,1,""],scatter_nd:[460,2,1,""],shape:[432,2,1,""],split:[461,2,1,""],squeeze:[462,2,1,""],to_list:[432,2,1,""],to_numpy:[432,2,1,""],to_scalar:[432,2,1,""],transpose:[463,2,1,""],unstack:[464,2,1,""],where:[432,2,1,""],zero_pad:[432,2,1,""],zeros_like:[465,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[467,2,1,""],is_variable:[468,2,1,""],stop_gradient:[469,2,1,""],variable:[470,2,1,""],variable_data:[466,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[472,2,1,""],gradient_image:[473,2,1,""],stack_images:[474,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[476,2,1,""],qr:[477,2,1,""],vector_to_skew_symmetric_matrix:[478,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[481,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[483,2,1,""],randint:[482,2,1,""],random_normal:[482,2,1,""],random_uniform:[482,2,1,""],seed:[482,2,1,""],shuffle:[482,2,1,""]},"ivy.functional.ivy":{array_api:[827,0,0,"-"],core:[862,0,0,"-"],nn:[1203,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[828,0,0,"-"],creation_functions:[829,0,0,"-"],data_type_functions:[832,0,0,"-"],data_types:[835,0,0,"-"],elementwise_functions:[836,0,0,"-"],function_and_method_signatures:[848,0,0,"-"],linear_algebra:[849,0,0,"-"],manipulation_functions:[852,0,0,"-"],searching_functions:[854,0,0,"-"],set_functions:[855,0,0,"-"],sorting_functions:[856,0,0,"-"],statistical_functions:[858,0,0,"-"],utility_functions:[859,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[828,4,1,""],nan:[828,4,1,""],pi:[828,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[830,2,1,""],zeros:[831,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[833,2,1,""],iinfo:[834,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[837,2,1,""],bitwise_and:[838,2,1,""],cos:[839,2,1,""],cosh:[840,2,1,""],floor_divide:[841,2,1,""],isfinite:[842,2,1,""],isnan:[843,2,1,""],less:[844,2,1,""],log2:[845,2,1,""],logical_not:[846,2,1,""],sqrt:[847,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[850,2,1,""],vector_norm:[851,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[853,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[857,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[860,2,1,""],any:[861,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[863,0,0,"-"],compilation:[902,0,0,"-"],device:[904,0,0,"-"],dtype:[954,0,0,"-"],general:[978,0,0,"-"],gradients:[1077,0,0,"-"],image:[1093,0,0,"-"],linalg:[1100,0,0,"-"],logic:[1108,0,0,"-"],math:[1111,0,0,"-"],meta:[1127,0,0,"-"],multi_node:[1131,0,0,"-"],nest:[1175,0,0,"-"],random:[1187,0,0,"-"],reductions:[1194,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[864,2,1,""],builtin_add:[865,2,1,""],builtin_and:[866,2,1,""],builtin_bool:[867,2,1,""],builtin_contains:[868,2,1,""],builtin_deepcopy:[869,2,1,""],builtin_dir:[870,2,1,""],builtin_eq:[871,2,1,""],builtin_float:[872,2,1,""],builtin_floordiv:[873,2,1,""],builtin_ge:[874,2,1,""],builtin_getattr:[875,2,1,""],builtin_getattribute:[876,2,1,""],builtin_getitem:[877,2,1,""],builtin_gt:[878,2,1,""],builtin_int:[879,2,1,""],builtin_invert:[880,2,1,""],builtin_le:[881,2,1,""],builtin_lt:[882,2,1,""],builtin_mul:[883,2,1,""],builtin_ne:[884,2,1,""],builtin_neg:[885,2,1,""],builtin_or:[886,2,1,""],builtin_pos:[887,2,1,""],builtin_pow:[888,2,1,""],builtin_radd:[889,2,1,""],builtin_rand:[890,2,1,""],builtin_rfloordiv:[891,2,1,""],builtin_rmul:[892,2,1,""],builtin_ror:[893,2,1,""],builtin_rpow:[894,2,1,""],builtin_rsub:[895,2,1,""],builtin_rtruediv:[896,2,1,""],builtin_rxor:[897,2,1,""],builtin_setitem:[898,2,1,""],builtin_sub:[899,2,1,""],builtin_truediv:[900,2,1,""],builtin_xor:[901,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[903,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[904,1,1,""],DevClonedItem:[906,1,1,""],DevClonedIter:[907,1,1,""],DevClonedNest:[908,1,1,""],DevDistItem:[909,1,1,""],DevDistIter:[910,1,1,""],DevDistNest:[911,1,1,""],DevManager:[904,1,1,""],DevMapper:[913,1,1,""],DevMapperMultiProc:[914,1,1,""],MultiDev:[904,1,1,""],MultiDevItem:[916,1,1,""],MultiDevIter:[917,1,1,""],MultiDevNest:[918,1,1,""],Profiler:[919,1,1,""],clear_mem_on_dev:[920,2,1,""],default_device:[921,2,1,""],dev:[922,2,1,""],dev_clone:[923,2,1,""],dev_clone_array:[924,2,1,""],dev_clone_iter:[925,2,1,""],dev_clone_nest:[926,2,1,""],dev_dist:[927,2,1,""],dev_dist_array:[928,2,1,""],dev_dist_iter:[929,2,1,""],dev_dist_nest:[930,2,1,""],dev_from_str:[931,2,1,""],dev_to_str:[932,2,1,""],dev_unify:[933,2,1,""],dev_unify_array:[934,2,1,""],dev_unify_iter:[935,2,1,""],dev_unify_nest:[936,2,1,""],dev_util:[937,2,1,""],get_all_arrays_on_dev:[938,2,1,""],gpu_is_available:[939,2,1,""],num_arrays_on_dev:[940,2,1,""],num_cpu_cores:[941,2,1,""],num_gpus:[942,2,1,""],percent_used_mem_on_dev:[943,2,1,""],print_all_arrays_on_dev:[944,2,1,""],set_default_device:[945,2,1,""],set_split_factor:[946,2,1,""],split_factor:[947,2,1,""],split_func_call:[948,2,1,""],to_dev:[949,2,1,""],total_mem_on_dev:[950,2,1,""],tpu_is_available:[951,2,1,""],unset_default_device:[952,2,1,""],used_mem_on_dev:[953,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[904,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[904,3,1,""],da_tune_step:[904,3,1,""],dim_size:[904,3,1,""],ds_tune_step:[904,3,1,""],map:[904,3,1,""],repeated_config_check:[904,3,1,""],tune_step:[904,3,1,""],tuned:[904,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[913,3,1,""],map:[913,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[914,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[904,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[916,3,1,""],items:[916,3,1,""],keys:[916,3,1,""],shape:[916,3,1,""],values:[916,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[917,3,1,""],at_dev:[917,3,1,""],at_devs:[917,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[918,3,1,""],at_dev:[918,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[919,3,1,""],start:[919,3,1,""],stop:[919,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[954,1,1,""],DefaultFloatDtype:[954,1,1,""],DefaultIntDtype:[954,1,1,""],astype:[954,2,1,""],cast:[958,2,1,""],closest_valid_dtype:[959,2,1,""],convert_dtype:[960,2,1,""],default_dtype:[961,2,1,""],default_float_dtype:[962,2,1,""],default_int_dtype:[963,2,1,""],dtype:[964,2,1,""],dtype_bits:[965,2,1,""],dtype_from_str:[966,2,1,""],dtype_to_str:[967,2,1,""],invalid_dtype:[968,2,1,""],is_float_dtype:[969,2,1,""],is_int_dtype:[970,2,1,""],set_default_dtype:[971,2,1,""],set_default_float_dtype:[972,2,1,""],set_default_int_dtype:[973,2,1,""],unset_default_dtype:[974,2,1,""],unset_default_float_dtype:[975,2,1,""],unset_default_int_dtype:[976,2,1,""],valid_dtype:[977,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[954,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[954,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[954,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1003,2,1,""],abs:[979,2,1,""],all_equal:[980,2,1,""],arange:[981,2,1,""],arg_names:[982,2,1,""],argmax:[983,2,1,""],argmin:[984,2,1,""],array:[985,2,1,""],array_equal:[986,2,1,""],arrays_equal:[987,2,1,""],asarray:[978,2,1,""],assert_supports_inplace:[988,2,1,""],broadcast_to:[989,2,1,""],cache_fn:[990,2,1,""],ceil:[991,2,1,""],clip:[992,2,1,""],clip_matrix_norm:[993,2,1,""],clip_vector_norm:[994,2,1,""],concatenate:[995,2,1,""],constant_pad:[996,2,1,""],container_types:[997,2,1,""],copy_array:[998,2,1,""],cross:[999,2,1,""],cumprod:[1000,2,1,""],cumsum:[1001,2,1,""],current_framework_str:[1002,2,1,""],einops_rearrange:[1004,2,1,""],einops_reduce:[1005,2,1,""],einops_repeat:[1006,2,1,""],equal:[1007,2,1,""],exists:[1008,2,1,""],expand_dims:[1009,2,1,""],flip:[1010,2,1,""],floor:[1011,2,1,""],floormod:[1012,2,1,""],fourier_encode:[1013,2,1,""],full:[1014,2,1,""],gather:[1015,2,1,""],gather_nd:[1016,2,1,""],get_all_arrays_in_memory:[1017,2,1,""],get_min_base:[1018,2,1,""],get_min_denominator:[1019,2,1,""],get_num_dims:[1020,2,1,""],get_referrers_recursive:[1021,2,1,""],has_nans:[1022,2,1,""],identity:[1023,2,1,""],indices_where:[1024,2,1,""],inplace_arrays_supported:[1025,2,1,""],inplace_decrement:[1026,2,1,""],inplace_increment:[1027,2,1,""],inplace_update:[1028,2,1,""],inplace_variables_supported:[1029,2,1,""],is_array:[1030,2,1,""],isinf:[1031,2,1,""],linear_resample:[1032,2,1,""],linspace:[1033,2,1,""],logspace:[1034,2,1,""],match_kwargs:[1035,2,1,""],matmul:[1036,2,1,""],maximum:[1037,2,1,""],meshgrid:[1038,2,1,""],minimum:[1039,2,1,""],multiprocessing:[1040,2,1,""],num_arrays_in_memory:[1041,2,1,""],one_hot:[1042,2,1,""],ones:[1043,2,1,""],ones_like:[1044,2,1,""],print_all_arrays_in_memory:[1045,2,1,""],queue_timeout:[1046,2,1,""],repeat:[1047,2,1,""],reshape:[1048,2,1,""],round:[1049,2,1,""],scatter_flat:[1050,2,1,""],scatter_nd:[1051,2,1,""],set_min_base:[1052,2,1,""],set_min_denominator:[1053,2,1,""],set_queue_timeout:[1054,2,1,""],set_tmp_dir:[1055,2,1,""],shape:[1056,2,1,""],shape_to_tuple:[1057,2,1,""],split:[1058,2,1,""],squeeze:[1059,2,1,""],stable_divide:[1060,2,1,""],stable_pow:[1061,2,1,""],stack:[1062,2,1,""],supports_inplace:[1063,2,1,""],swapaxes:[1064,2,1,""],tile:[1065,2,1,""],tmp_dir:[1066,2,1,""],to_list:[1067,2,1,""],to_numpy:[1068,2,1,""],to_scalar:[1069,2,1,""],transpose:[1070,2,1,""],try_else_none:[1071,2,1,""],unstack:[1072,2,1,""],value_is_nan:[1073,2,1,""],where:[1074,2,1,""],zero_pad:[1075,2,1,""],zeros_like:[1076,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1077,1,1,""],adam_step:[1079,2,1,""],adam_update:[1080,2,1,""],execute_with_gradients:[1081,2,1,""],gradient_descent_update:[1082,2,1,""],is_variable:[1083,2,1,""],lamb_update:[1084,2,1,""],lars_update:[1085,2,1,""],optimizer_update:[1086,2,1,""],set_with_grads:[1087,2,1,""],stop_gradient:[1088,2,1,""],unset_with_grads:[1089,2,1,""],variable:[1090,2,1,""],variable_data:[1091,2,1,""],with_grads:[1092,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1077,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1094,2,1,""],float_img_to_uint8_img:[1095,2,1,""],gradient_image:[1096,2,1,""],random_crop:[1097,2,1,""],stack_images:[1098,2,1,""],uint8_img_to_float_img:[1099,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1101,2,1,""],inv:[1102,2,1,""],matrix_norm:[1103,2,1,""],pinv:[1104,2,1,""],qr:[1105,2,1,""],svd:[1106,2,1,""],vector_to_skew_symmetric_matrix:[1107,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1109,2,1,""],logical_or:[1110,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1112,2,1,""],acosh:[1113,2,1,""],asin:[1114,2,1,""],atan2:[1116,2,1,""],atan:[1115,2,1,""],atanh:[1117,2,1,""],cosh:[1118,2,1,""],divide:[1119,2,1,""],erf:[1120,2,1,""],exp:[1121,2,1,""],log:[1122,2,1,""],sin:[1123,2,1,""],sinh:[1124,2,1,""],tan:[1125,2,1,""],tanh:[1126,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1128,2,1,""],maml_step:[1129,2,1,""],reptile_step:[1130,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1131,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1176,2,1,""],copy_nest:[1177,2,1,""],index_nest:[1178,2,1,""],map:[1179,2,1,""],map_nest_at_index:[1180,2,1,""],map_nest_at_indices:[1181,2,1,""],multi_index_nest:[1182,2,1,""],nested_indices_where:[1183,2,1,""],nested_map:[1184,2,1,""],set_nest_at_index:[1185,2,1,""],set_nest_at_indices:[1186,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1188,2,1,""],randint:[1189,2,1,""],random_normal:[1190,2,1,""],random_uniform:[1191,2,1,""],seed:[1192,2,1,""],shuffle:[1193,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1195,2,1,""],reduce_max:[1196,2,1,""],reduce_mean:[1197,2,1,""],reduce_min:[1198,2,1,""],reduce_prod:[1199,2,1,""],reduce_std:[1200,2,1,""],reduce_sum:[1201,2,1,""],reduce_var:[1202,2,1,""]},"ivy.functional.ivy.nn":{activations:[1204,0,0,"-"],layers:[1212,0,0,"-"],losses:[1225,0,0,"-"],norms:[1229,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1205,2,1,""],leaky_relu:[1206,2,1,""],relu:[1207,2,1,""],sigmoid:[1208,2,1,""],softmax:[1209,2,1,""],softplus:[1210,2,1,""],tanh:[1211,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1213,2,1,""],conv1d_transpose:[1214,2,1,""],conv2d:[1215,2,1,""],conv2d_transpose:[1216,2,1,""],conv3d:[1217,2,1,""],conv3d_transpose:[1218,2,1,""],depthwise_conv2d:[1219,2,1,""],dropout:[1220,2,1,""],linear:[1221,2,1,""],lstm_update:[1222,2,1,""],multi_head_attention:[1223,2,1,""],scaled_dot_product_attention:[1224,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1226,2,1,""],cross_entropy:[1227,2,1,""],sparse_cross_entropy:[1228,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1230,2,1,""]},"ivy.graph_compiler":{compiler:[1231,0,0,"-"],globals:[1234,0,0,"-"],graph:[1237,0,0,"-"],helpers:[1239,0,0,"-"],op_logging:[1240,0,0,"-"],param:[1241,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1232,2,1,""],show_graph:[1233,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1235,2,1,""],log_global_inference_rel_times:[1236,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1237,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1237,3,1,""],add_fn_to_dict:[1237,3,1,""],add_param:[1237,3,1,""],compiled:[1237,3,1,""],connect:[1237,3,1,""],debug_info:[1237,3,1,""],get_param:[1237,3,1,""],get_param_recursive:[1237,3,1,""],include_generators:[1237,3,1,""],increment_param_count:[1237,3,1,""],log_all_ops:[1237,3,1,""],params_all_empty:[1237,3,1,""],save_debug_info:[1237,3,1,""],set_param:[1237,3,1,""],show:[1237,3,1,""],show_debug_info:[1237,3,1,""],update_inference_times:[1237,3,1,""],with_array_caching:[1237,3,1,""]},"ivy.graph_compiler.param":{Param:[1241,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1241,3,1,""],count:[1241,3,1,""],depth:[1241,3,1,""],get:[1241,3,1,""],is_var:[1241,3,1,""],ptype:[1241,3,1,""],set:[1241,3,1,""],set_count:[1241,3,1,""],shape:[1241,3,1,""]},"ivy.stateful":{activations:[1246,0,0,"-"],converters:[1249,0,0,"-"],initializers:[1251,0,0,"-"],layers:[1260,0,0,"-"],module:[1272,0,0,"-"],norms:[1274,0,0,"-"],optimizers:[1276,0,0,"-"],sequential:[1282,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1247,1,1,""],GELU:[1248,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1247,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1248,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1250,2,1,""]},"ivy.stateful.initializers":{Constant:[1251,1,1,""],FirstLayerSiren:[1253,1,1,""],GlorotUniform:[1254,1,1,""],KaimingNormal:[1251,1,1,""],Ones:[1256,1,1,""],Siren:[1257,1,1,""],Uniform:[1251,1,1,""],Zeros:[1259,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1259,3,1,""]},"ivy.stateful.layers":{Conv1D:[1261,1,1,""],Conv1DTranspose:[1262,1,1,""],Conv2D:[1263,1,1,""],Conv2DTranspose:[1264,1,1,""],Conv3D:[1265,1,1,""],Conv3DTranspose:[1266,1,1,""],DepthwiseConv2D:[1267,1,1,""],Dropout:[1268,1,1,""],LSTM:[1269,1,1,""],Linear:[1270,1,1,""],MultiHeadAttention:[1271,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1268,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1269,3,1,""],get_initial_state:[1269,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1270,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1271,3,1,""]},"ivy.stateful.module":{Module:[1273,1,1,""]},"ivy.stateful.module.Module":{__init__:[1273,3,1,""],build:[1273,3,1,""],build_mode:[1273,3,1,""],built:[1273,3,1,""],check_submod_rets:[1273,3,1,""],compile_graph:[1273,3,1,""],compile_on_next_step:[1273,3,1,""],get_mod_key:[1273,3,1,""],mod_depth:[1273,3,1,""],mod_height:[1273,3,1,""],mod_with_top_mod_key_chain:[1273,3,1,""],save_weights:[1273,3,1,""],show_graph:[1273,3,1,""],show_mod_in_top_mod:[1273,3,1,""],show_structure:[1273,3,1,""],show_v_in_top_v:[1273,3,1,""],sub_mods:[1273,3,1,""],track_submod_call_order:[1273,3,1,""],track_submod_rets:[1273,3,1,""],v_with_top_v_key_chains:[1273,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1275,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1275,3,1,""]},"ivy.stateful.optimizers":{Adam:[1277,1,1,""],LAMB:[1278,1,1,""],LARS:[1279,1,1,""],Optimizer:[1280,1,1,""],SGD:[1281,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1280,3,1,""],compile_graph:[1280,3,1,""],compile_on_next_step:[1280,3,1,""],set_state:[1280,3,1,""],show_graph:[1280,3,1,""],step:[1280,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.sequential":{Sequential:[1283,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1283,3,1,""]},"ivy.verbosity":{cprint:[1288,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1287,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1276,1277,1278],"02886":1243,"100":[1131,1243,1285],"141592653589793":828,"2021":1243,"2102":1243,"360":[836,839,1111,1123,1125],"718281828459045":828,"754":[828,832,833,836,847],"999":[1077,1079,1080,1084,1276,1277,1278],"abstract":[904,919,1243,1276,1280],"boolean":[40,41,836,838,843,846,904,939,951,954,968,977,978,980,986,987,1022,1024,1025,1029,1030,1031,1063,1073,1077,1083,1108,1109,1110,1127,1128,1129,1131],"break":43,"case":[15,18,19,40,41,42,43,836,837,904,943,950,953,978,981,1048,1050,1051,1100,1103,1105,1131,1175,1178,1182,1243,1260,1271,1272,1273,1276,1280,1289],"catch":[978,1003],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,389,430,431,832,834,904,906,907,908,909,910,911,913,914,916,917,918,919,931,932,954,978,982,1035,1077,1091,1131,1175,1177,1184,1225,1227,1228,1237,1241,1243,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],"default":[15,18,19,40,41,42,43,829,830,831,849,850,851,852,853,856,857,859,860,861,902,903,904,913,914,921,922,926,927,928,929,930,933,934,935,936,943,946,947,948,953,954,961,962,963,964,978,980,981,983,984,993,994,995,996,999,1000,1001,1010,1013,1014,1015,1020,1022,1023,1032,1034,1035,1038,1040,1043,1046,1047,1050,1051,1054,1056,1058,1060,1061,1070,1072,1073,1077,1080,1082,1083,1084,1085,1086,1088,1092,1100,1103,1105,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1187,1188,1190,1191,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1209,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],"final":[40,41,43,978,1013,1033,1034,1131,1260,1271,1286],"float":[40,41,42,43,828,829,830,831,832,833,836,837,847,849,851,863,882,888,904,913,914,937,943,946,950,953,954,962,969,978,981,993,994,996,1013,1014,1018,1019,1034,1052,1053,1054,1060,1061,1077,1079,1080,1082,1084,1085,1086,1093,1095,1099,1111,1119,1127,1128,1129,1130,1131,1187,1190,1191,1204,1206,1212,1220,1223,1224,1225,1226,1227,1228,1229,1230,1260,1268,1271,1274,1275,1276,1277,1278,1279,1280,1281],"function":[15,40,41,43,387,388,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,828,830,831,833,834,837,838,839,840,841,842,843,844,845,846,847,849,850,851,853,857,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,907,908,909,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1243,1246,1247,1248,1276,1279,1280,1281,1285,1286,1289],"import":[43,1243,1286,1289],"int":[40,41,42,43,386,387,388,482,829,830,831,832,833,834,849,850,851,852,853,856,857,859,860,861,863,882,888,902,903,904,926,927,928,929,930,933,934,935,936,941,942,948,954,963,965,970,978,983,984,989,995,996,1000,1001,1004,1005,1006,1009,1010,1013,1014,1015,1020,1023,1032,1033,1034,1042,1043,1047,1048,1050,1051,1056,1057,1058,1059,1062,1064,1065,1070,1072,1075,1077,1079,1080,1084,1093,1097,1098,1100,1103,1127,1128,1129,1130,1131,1175,1184,1187,1188,1189,1191,1192,1194,1196,1197,1198,1199,1200,1201,1202,1204,1209,1212,1213,1214,1215,1216,1217,1218,1219,1223,1225,1227,1228,1229,1230,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1274,1275],"long":[1212,1222],"new":[40,41,43,482,829,830,831,836,840,845,954,958,978,979,989,1004,1005,1006,1009,1013,1014,1015,1016,1043,1048,1050,1051,1052,1053,1060,1061,1062,1077,1080,1082,1084,1085,1086,1093,1095,1097,1099,1111,1113,1117,1118,1124,1126,1131,1175,1185,1186,1187,1188,1229,1230,1243,1249,1250,1260,1270,1274,1275,1276,1277,1278,1279,1280,1281,1286,1289],"public":[978,997],"return":[15,16,17,18,19,40,41,42,43,482,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861,863,882,888,902,903,904,913,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,939,940,942,943,947,948,949,950,951,953,954,958,959,960,961,962,963,964,965,966,967,968,969,970,977,978,979,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1047,1048,1049,1050,1051,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1243,1249,1250,1260,1269,1270,1276,1280,1285,1286,1289],"short":[1212,1222,1243,1289],"static":[40,41,902,903],"super":1131,"true":[40,41,42,432,438,466,469,482,483,836,842,849,851,856,857,859,860,861,902,903,904,978,980,988,990,1008,1013,1022,1024,1073,1074,1077,1080,1082,1083,1084,1085,1086,1088,1100,1103,1127,1128,1129,1130,1131,1175,1176,1183,1187,1188,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1212,1220,1225,1226,1227,1228,1231,1232,1233,1237,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],"try":[40,41,978,1071,1131],"var":[40,41,1127,1128,1129,1289],"while":[40,41,42,1131],AND:[836,838,859,860,1108,1109],But:1289,For:[43,836,837,978,981,992,1062,1077,1083,1091,1100,1105,1111,1112,1243,1249,1250,1286,1289],Its:[1111,1115],NOT:[836,846],Not:828,One:[40,41,43,978,1005,1048,1187,1189,1289],Ones:[1243,1251],PRs:43,Such:[978,997],That:1286,The:[15,16,17,18,19,40,41,42,43,836,837,838,839,841,842,844,847,849,851,852,853,856,857,859,860,861,863,882,888,902,903,904,913,914,920,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,943,946,947,948,949,950,953,954,958,959,960,965,966,967,968,977,978,981,985,986,989,990,993,994,995,996,998,999,1002,1003,1007,1010,1013,1015,1016,1023,1026,1027,1028,1030,1032,1034,1036,1038,1040,1043,1044,1047,1048,1050,1051,1052,1053,1054,1057,1058,1059,1060,1061,1062,1065,1073,1076,1077,1079,1080,1082,1084,1085,1086,1088,1091,1093,1095,1097,1099,1100,1103,1105,1106,1111,1112,1114,1115,1119,1120,1121,1122,1123,1125,1127,1128,1129,1130,1131,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1286,1289],There:[43,1243,1286],These:[43,1243],Used:[1175,1176,1183,1272,1273],Using:[1243,1244,1289],With:[40,41,1100,1103,1194,1196,1197,1198,1199,1200,1201,1202,1243,1285,1289],__array__:[978,985],__call__:[1260,1271,1272,1273],__del__:1131,__dict__:[1131,1286],__enter__:1131,__exit__:1131,__getitem__:1131,__getstate__:1131,__init__:[40,41,42,43,59,60,81,209,389,390,430,431,511,638,904,905,912,913,914,915,916,917,918,919,954,955,956,957,1077,1078,1131,1135,1142,1237,1238,1241,1242,1243,1246,1247,1248,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],__iter__:1131,__len__:1131,__next__:1131,__pow__:43,__repr__:1131,_assign_vari:1285,_axi:1131,_base:[1175,1176,1183],_compute_node_da_ratio:1131,_compute_node_strs_da:1131,_concat_unify_arrai:1131,_counter:1131,_cur_framework:[43,1131],_da_direct:1131,_da_directions_flip:1131,_da_step_tim:1131,_da_tim:1131,_da_tune_count:1131,_data:1131,_delta_da_dim_s:1131,_delta_sf:1131,_dict:1131,_dim_siz:1131,_first_da_tune_step:1131,_first_ns_tune_step:1131,_fn:1131,_forward:[1243,1285],_get_kalman_param:1289,_get_prior:1289,_get_some_model:1289,_handle_flat_arrays_in_out:43,_index:[1175,1176,1183],_input_queu:1131,_length:1131,_max_depth:1131,_max_node_dim_step_ratio:1131,_max_node_dim_step_s:1131,_max_split_factor_step_s:1131,_mean_unify_arrai:1131,_min_bas:[978,1061,1229,1230,1274,1275],_min_denomin:[978,1060],_min_node_dim_s:1131,_min_sf_tune_step:1131,_min_unit_node_tune_step:1131,_model:1289,_native_wrapp:43,_node_mapp:1131,_node_percent_mem:1131,_node_str:1131,_node_str_da_ratio:1131,_node_strs_da:1131,_node_strs_kei:1131,_node_strs_n:1131,_node_util:1131,_ns_step_tim:1131,_ns_time:1131,_ns_tune_count:1131,_num_nod:1131,_num_work:1131,_observed_config:1131,_output_queu:1131,_paramet:1285,_percent_mem_inc_per_sf:1131,_percent_mem_inc_per_unit_da_dim:1131,_percent_util_inc_per_unit_da_dim:1131,_ret_fn:1131,_safety_factor:1131,_save_dir:1131,_shift_da_split:1131,_shift_n:1131,_slice:1131,_step:[1276,1280],_sum_unify_arrai:1131,_timeout:1131,_tune:1131,_tune_da:1131,_tune_n:1131,_tune_step:1131,_unit_da_tune_count:1131,_unroll_step:1289,_with_node_mappig:1131,_worker:1131,_worker_class:1131,_worker_fn:1131,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,904,913,919,1131,1272,1273,1276,1280],abil:1243,abl:[40,41],about:[832,833,834],abov:[43,1187,1189],above_height:[40,41],abs:[289,432,558,687,849,851,978,1131],absolut:[40,41,978,979],abstractmethod:1131,accept:[15,43,1243],access:[40,41,43,1286],accord:[40,41,832,833,978,996,1015,1050,1051,1070,1075],accordingli:[849,851,859,860,861],accur:[59,389,430,431,904,916,917,918,919,954,1077,1237,1241,1251,1253,1254,1256,1257,1259],aco:[776,1111],acosh:[776,1111],across:[40,41,904,913,914,923,924,926,927,928,929,930,936,946,947,978,983,984,986,987,1131,1175,1179],activ:[1205,1206,1207,1208,1209,1210,1211,1243,1247,1248],actual:1286,adam:[1077,1079,1080,1084,1243,1276,1278,1285],adam_step:1077,adam_upd:1077,adapt:[1077,1085,1276,1279],add:[40,41,43,1131,1225,1226,1227,1228,1229,1230,1243,1274,1275,1286],add_fn_to_dict:1237,add_param:1237,added:[43,978,1060,1061,1282,1283],adding:[978,989],addit:[40,41,43,978,1004,1005,1006,1229,1230,1260,1270],adher:43,adjac:[978,981],adopt:[978,997],affect:[978,981],affin:[1274,1275],after:[836,847,978,1032,1077,1080,1081,1082,1084,1085,1086,1093,1094,1229,1230,1276,1277,1278,1279,1280,1281,1289],after_1:[978,996,1075],after_n:[978,996,1075],again:43,against:[40,41,1100,1103,1194,1196,1197,1198,1199,1200,1201,1202],agnost:[43,1243,1285,1286],aim:1289,algebra:1100,algorithm:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267,1289],align:[40,41,43,978,989],aliv:[904,938,940,944,978,1017,1041,1045],all:[15,16,17,18,19,40,41,43,107,231,417,537,665,849,851,852,853,859,902,903,904,913,938,944,978,979,980,986,987,997,1010,1017,1023,1045,1059,1100,1105,1127,1128,1129,1130,1131,1175,1176,1177,1183,1184,1187,1188,1191,1194,1196,1197,1198,1199,1200,1201,1202,1212,1222,1243,1286,1289],all_depth:[40,41],all_equ:978,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1175,all_tru:[40,41],alloc:[904,1131],allow:[978,1033,1034,1035,1272,1273],allow_dupl:[978,1035],alon:[904,943,953,1131,1243],along:[40,41,43,482,849,850,851,852,853,856,857,859,860,861,904,927,928,929,930,933,934,935,936,948,978,995,1000,1001,1010,1015,1032,1033,1034,1047,1058,1062,1065,1072,1100,1103,1127,1128,1129,1130,1131,1187,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202],alongsid:[1285,1286],alpha:[1204,1206],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,904,1131],also:[40,41,43,978,981,1077,1080,1127,1128,1129,1130,1175,1176,1177,1183,1184,1212,1221,1260,1270,1285],altern:1285,alwai:[40,41,43,1077,1083,1088],among:[40,41],amount:[904,950,1131,1243],angl:[1111,1112,1116],ani:[15,16,17,18,19,40,41,43,107,231,417,537,665,859,902,903,904,906,909,913,914,916,925,926,929,930,935,978,980,981,985,1003,1004,1005,1006,1007,1008,1022,1030,1035,1060,1061,1077,1081,1131,1175,1176,1179,1183,1184,1185,1186,1187,1191,1243,1249,1250,1272,1273,1285,1286,1289],anoth:[40,41,43,954,960,1243],another_backend:43,anyth:[43,1289],anywai:43,apart:43,api:[1243,1244],appear:[978,1009],append:[40,41,1131],appli:[15,18,19,40,41,836,846,978,1004,1005,1006,1077,1084,1085,1100,1106,1108,1109,1110,1127,1128,1129,1175,1179,1182,1184,1204,1205,1206,1207,1208,1209,1210,1211,1212,1221,1223,1224,1229,1230,1243,1246,1247,1248,1274,1275],applic:[1175,1179,1184,1212,1223,1224,1243,1289],approxim:[43,836,837,845,863,888,1204,1205],arang:[127,289,432,482,558,687,978,1033,1034],arbitrari:[40,41,904,933,934,936,1131],arc:[1111,1116],arcco:[1111,1112],arctan:[1111,1115],area:[836,837,1243],arg:[15,16,17,40,41,43,59,63,904,913,926,930,936,948,978,1004,1005,1006,1051,1131,1231,1232,1233,1237,1249,1250,1272,1273],arg_nam:978,arg_stateful_idx:[1231,1232,1233,1237,1272,1273],argmax:[127,432,558,687,978],argmin:[127,432,558,687,978],args_clon:1131,args_dist:1131,args_to_ivi:[15,1243],args_to_n:[15,1243],args_uni:1131,argsort:[104,228,414,534,662,856],argument:[15,16,17,18,19,40,41,42,43,59,63,902,903,904,913,914,926,930,936,978,981,982,990,1003,1035,1051,1111,1112,1131,1175,1179,1249,1250,1272,1273],aris:[1243,1289],arithmet:[43,1194,1197,1200,1202],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:482,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,127,289,432,482,558,687,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861,882,888,904,922,923,924,927,928,929,930,933,934,935,936,938,940,944,948,949,954,958,964,969,970,978,979,980,981,983,984,986,987,988,989,991,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1020,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1036,1037,1038,1039,1041,1042,1043,1044,1045,1047,1048,1049,1050,1051,1056,1058,1059,1062,1063,1064,1065,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1079,1080,1083,1084,1088,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1131,1175,1177,1184,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1243,1244,1260,1268,1269,1271,1276,1280,1285,1286],arrang:[978,1004],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,386,387,388,389,391,392,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861],array_api_methods_to_test:43,array_builtin:[43,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901],array_equ:[289,687,978],array_lik:[482,978,985],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,978],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1243],arraywithgener:[22,1243],arraywithgradi:[24,1243],arraywithimag:[26,1243],arraywithlinalg:[28,1243],arraywithlog:[30,1243],arraywithmath:[32,1243],arraywithmeta:[34,1243],arraywithrandom:[36,1243],arraywithreduct:[38,1243],arriv:[40,41,42],articl:1243,arxiv:1243,as_arrai:[40,41,978,1020,1056],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[430,432,441,904,922,954,961,962,963,964],as_tensor:432,as_vari:[40,41],as_zero:[40,41],asarrai:[432,978],asin:[776,1111],asinh:[85,394,515,642,836],aspect:[1093,1098],assert:[40,41,978,988,1131],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:978,associ:[43,1100,1107],assum:[1286,1289],astyp:[432,954],asynchron:[40,41,42],at_dev:[40,42,904,917,918],at_kei:[40,41],at_key_chain:[40,41],at_nod:1131,atan2:[776,1111],atan:[776,1111],atanh:[776,1111],attent:[43,1212,1223,1224,1260,1271],attribut:[0,6,40,41,832,833,834,978,1044,1076],audienc:[1243,1286],author:1243,avail:[40,41,43,904,939,941,942,951,978,1005,1131],averag:[1077,1079,1080,1084,1127,1128,1129,1194,1197],average_across_step:[1127,1128,1129],avoid:[904,1131,1286],axes:[40,41,43,432,463,475,476,849,851,852,853,859,860,861,904,948,978,983,984,996,1009,1010,1064,1070,1075,1100,1103,1131,1194,1196,1197,1198,1199,1200,1201,1202],axes_length:[40,41,978,1004,1005,1006],axi:[40,41,432,434,435,439,440,446,454,455,456,461,462,464,849,850,851,852,853,856,857,859,860,861,904,906,909,916,927,928,929,930,933,934,935,936,948,978,983,984,995,996,999,1000,1001,1009,1010,1015,1032,1033,1034,1047,1058,1059,1062,1064,1065,1072,1075,1131,1187,1193,1194,1196,1197,1198,1199,1200,1201,1202,1204,1209,1225,1227,1228],axis0:[40,41,978,1064],axis1:[40,41,849,850,978,1064],axis2:[849,850],back:[43,1272,1273,1276,1280],backend:[15,17,19,40,41,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,904,939,942,951,954,960,968,977,978,1025,1029,1077,1080,1082,1084,1085,1086,1091,1131,1243,1244,1249,1250,1276,1277,1278,1279,1280,1281,1285,1286,1289],backend_nam:43,background:[1243,1286],backprop:1289,backward:[859,860,861,1285],band:[978,1013],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,389,430,431,432,456,836,845,863,888,904,906,907,908,909,910,911,913,914,916,917,918,919,954,978,1018,1034,1052,1061,1077,1131,1194,1195,1237,1241,1243,1246,1247,1248,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1289],batch:[40,41,849,851,904,946,947,978,1010,1013,1023,1093,1097,1100,1106,1127,1128,1129,1130,1131,1212,1221,1229,1230,1274,1275],batch_shap:[432,448,978,1010,1023,1042,1093,1094,1095,1096,1097,1098,1099,1100,1107,1187,1188,1212,1222,1223,1224,1260,1269],batch_siz:[482,483,1131,1187,1188,1212,1213,1214,1215,1216,1217,1218,1219],bayesian:1289,becaus:[43,978,981],becom:[978,992,1111,1116,1289],been:[978,1004,1005,1006,1187,1188],befor:[40,41,43,904,948,1127,1128,1129,1131,1175,1184,1194,1196,1197,1198,1199,1200,1201,1202,1212,1223,1224,1289],before_1:[978,996,1075],before_n:[978,996,1075],begin:[1175,1176,1183,1286],behaviour:[43,1289],behind:[1077,1080,1082,1084,1085,1086,1243],being:[40,41,43,978,981,1046,1054,1131],belong:[40,41],below:[43,1243,1286,1289],below_depth:[40,41],benefit:1243,bernoul:[1212,1220,1260,1268],best:[43,978,1035,1243],beta1:[1077,1079,1080,1084,1276,1277,1278],beta2:[1077,1079,1080,1084,1276,1277,1278],beta:[1229,1230],between:[40,41,42,832,833,978,981,1100,1105,1175,1179,1187,1189,1225,1227,1228,1276,1278],bia:[1212,1221,1222,1260,1261,1262,1263,1264,1265,1266,1267,1270],bias_initi:[1260,1261,1262,1263,1264,1265,1266,1267,1270],bilinear:[1093,1094],bilinear_resampl:[163,344,471,601,761,1093],bilinearli:[1093,1094],binari:[836,838,1225,1226],binary_cross_entropi:1225,bit:[389,832,833,834,954,965,1093,1095,1099,1243],bitwis:[836,838],bitwise_and:[85,213,394,515,642,836],bitwise_oper:[0,7,8],block:[1243,1286],bool:[15,18,19,40,41,42,43,836,841,842,844,849,851,856,857,859,860,861,863,882,902,903,904,922,935,939,943,948,951,953,954,964,978,980,986,987,1000,1003,1007,1008,1013,1020,1022,1030,1035,1056,1058,1072,1073,1074,1077,1080,1081,1082,1083,1084,1085,1086,1088,1100,1103,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1187,1188,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1212,1220,1249,1250,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],both:[43,978,999],bottom:1243,boundari:[40,41,1187,1191],branch:[43,902,903],brittl:43,broadcast:[40,41,43,836,838,849,851,859,860,861,863,882,888,978,989,1007,1037,1038,1039,1047,1100,1103,1111,1116,1119,1194,1196,1197,1198,1199,1200,1201,1202],broadcast_to:[289,687,978],build:[1131,1243,1260,1271,1272,1273],build_mod:[1260,1271,1272,1273],builder:1243,built:[904,978,981,1131,1260,1271,1272,1273],builtin:43,builtin_ab:[244,863],builtin_add:[244,863],builtin_and:[244,863],builtin_bool:[244,863],builtin_contain:[244,863],builtin_deepcopi:[244,863],builtin_dir:[244,863],builtin_eq:[244,863],builtin_float:[244,863],builtin_floordiv:[244,863],builtin_g:[244,863],builtin_getattr:[244,863],builtin_getattribut:[244,863],builtin_getitem:[244,863],builtin_gt:[244,863],builtin_int:[244,863],builtin_invert:[244,863],builtin_l:[244,863],builtin_lt:[244,546,674,863],builtin_mul:[244,863],builtin_n:[244,863],builtin_neg:[244,863],builtin_or:[244,863],builtin_po:[244,863],builtin_pow:[43,244,863],builtin_radd:[244,863],builtin_rand:[244,863],builtin_rfloordiv:[244,863],builtin_rmul:[244,863],builtin_ror:[244,863],builtin_rpow:[244,863],builtin_rsub:[244,863],builtin_rtruediv:[244,863],builtin_rxor:[244,863],builtin_setitem:[244,863],builtin_some_op:43,builtin_sub:[244,863],builtin_truediv:[244,863],builtin_xor:[244,863],bypass:1286,cach:[904,920,978,990],cache_fn:978,calcul:[40,41,42,43,836,837,845,847,863,888,1111,1119],call:[43,904,948,978,1046,1054,1071,1077,1081,1131,1175,1176,1179,1183,1260,1271,1272,1273,1276,1280,1286,1289],callabl:[40,41,902,903,904,913,914,948,978,990,1003,1005,1035,1071,1127,1128,1129,1130,1131,1175,1179,1180,1181,1183,1184,1212,1223],can:[43,904,946,947,948,978,1048,1093,1095,1131,1243,1285,1286,1289],cancel_join_thread:1131,captur:1243,cast:[40,41,127,289,432,558,687,954,978,995,1093,1095,1099],catch_except:[978,1003],categori:43,caus:43,ceil:[289,432,687,978,981],cell:[1212,1222,1260,1269],certain:[40,41,978,981,1033,1034],chain:[40,41,1127,1128,1129,1282,1283],chang:[43,904,978,1048,1131,1175,1177,1184,1243,1285],channel:[978,1013,1093,1095,1096,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],check:[15,16,17,18,19,40,41,43,904,943,953,954,959,968,977,978,988,1008,1022,1030,1063,1073,1077,1083,1131,1175,1176,1183,1243,1286],check_nest:[1175,1183],check_shap:[40,41],check_submod_ret:[1272,1273],check_typ:[40,41],choic:[1243,1286],choleski:[765,1100],choos:[978,1074,1100,1105,1111,1116,1243],choose_random_framework:59,chosen:[40,41,978,981,1074],chunk:[904,946,947,948,1131],chunk_siz:[904,948,1131],circl:[1111,1112,1114],clark:1243,clear:[904,920,1131],clear_framework_stack:59,clear_mem_on_dev:[430,679,904],click:1243,clip:[40,41,289,432,687,978,993,994,1037,1039,1243],clip_matrix_norm:978,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,978],clipped_delta:1131,clone:[40,41,904,923,924,925,926,1131],clone_arrai:1131,clone_it:1131,clone_nest:1131,clonedit:1131,cloneditem:1131,clonednest:1131,close:[43,1093,1098,1111,1114,1131,1289],closest:[954,959],closest_valid_dtyp:954,code:[40,41,42,43,482,1243,1244,1285,1286],codebas:[904,946,947,1131,1243,1286,1289],codomain:[836,837,847],collect:[15,40,41,430,432,466,471,475,479,480,482,863,902,904,954,978,1077,1093,1100,1108,1111,1131,1175,1187,1194,1204,1212,1225,1229,1246,1260,1274,1276],color:[40,41,42,1287,1288],column:[978,1023],combin:[40,41,42,1093,1098,1243,1289],combined_batch_s:1131,come:1286,command:1243,comment:43,commit:1289,common:[40,41,43,1111,1116],common_key_chain:[40,41],commun:[43,1243,1286],compar:[40,41,978,980,986,987],comparison_oper:[0,9,10],compat:[43,836,838,849,851,859,860,861,863,882,888,978,1007,1048,1111,1119,1243,1289],compil:[289,432,687,1232,1233,1237,1243,1272,1273,1276,1277,1278,1279,1280,1281],compile_graph:[1231,1243,1272,1273,1276,1280],compile_on_next_step:[1272,1273,1276,1277,1278,1279,1280,1281],complet:[40,41,1100,1105,1131],complex:[1286,1289],compon:[978,999],composit:43,comput:[40,41,836,838,839,841,844,846,849,851,863,882,904,948,978,993,994,1000,1001,1007,1036,1077,1079,1080,1081,1082,1084,1085,1086,1088,1090,1093,1096,1100,1101,1102,1103,1104,1105,1108,1109,1110,1111,1112,1114,1115,1116,1120,1121,1122,1123,1125,1175,1179,1194,1195,1196,1197,1198,1199,1200,1201,1202,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1225,1226,1227,1228],concat:[40,41,904,933,934,935,936,948,978,1013,1131],concaten:[40,41,127,289,432,558,687,978,1013,1131,1243],concatten:[40,41,904,933,934,935,936,948,1131],condit:[432,902,903,978,1074,1175,1183],conditon:[1175,1183],config:[40,41,1131],config_list:1131,configur:[40,41],conflict:43,conform:43,conjunct:1286,connect:[1237,1260,1270,1271],consid:[40,41,1100,1105,1285,1289],consist:[40,41,904,936,1131,1194,1195,1272,1273,1286],constant:[904,913,914,978,996,1131,1175,1179,1225,1226,1227,1228,1229,1230,1251,1252,1256,1259,1272,1273,1274,1275,1286],constant_kwarg:1131,constant_pad:[289,432,558,687,978],constitu:[40,41],construct:[978,1065,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],constructor:[40,41,42,978,982,1282,1283],consum:[904,1131],cont_feat_dim:[1212,1223],contaienr:[40,41],contain:[15,18,19,42,43,829,830,831,836,837,838,841,842,844,845,847,849,851,856,857,859,860,861,863,882,888,904,923,927,948,954,958,978,979,983,984,992,993,994,997,1007,1022,1037,1039,1049,1060,1061,1077,1079,1080,1082,1084,1085,1086,1111,1119,1127,1128,1129,1130,1131,1187,1188,1194,1196,1197,1198,1200,1202,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[432,687,978],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[432,978,1040,1212,1223,1260,1271],context_dim:[1260,1271],contextmanag:[59,60],continu:[43,1131,1286],contract:[40,41,1194,1195],contribut:[1243,1244],contributor:[43,1243],control:1243,conv1d:[194,375,496,818,1212,1243,1260],conv1d_transpos:[194,375,496,818,1212],conv1dtranspos:[1243,1260],conv2d:[194,375,496,627,818,1212,1243,1260],conv2d_transpos:[194,375,496,818,1212],conv2dtranspos:[1243,1260],conv3d:[194,375,496,627,818,1212,1243,1260],conv3d_transpos:[194,375,496,818,1212],conv3dtranspos:[1243,1260],convent:[40,41,1194,1195],conver:[904,920,931,943,950,953,1131],convers:[16,17,18,19,40,41,1131,1243],convert:[15,16,17,18,19,40,41,43,904,931,932,954,960,966,967,978,1057,1068,1069,1093,1095,1099,1100,1107,1131,1175,1177,1184,1243,1250],convert_dtyp:954,convolut:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],cool:43,cooler:43,coordin:[978,1038,1111,1112,1114,1116],copi:[40,41,482,978,998,1131,1175,1177],copy_arrai:[432,687,978],copy_nest:1175,core:[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,907,908,909,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1243],corner:43,correct:[43,1243,1286],correctli:[40,41,1100,1103,1111,1116,1194,1196,1197,1198,1199,1200,1201,1202],correspond:[40,41,43,863,888,978,995,1187,1188],cos:[85,394,515,642,836,978,1013,1111,1112,1125,1286],cosh:[85,394,515,642,776,836,1111],cosin:[836,839,840,1111,1112,1113,1118],cost:[1077,1079,1080,1082,1084,1085,1086,1127,1128,1129,1130],cost_fn:[1127,1130],could:1289,count:[40,41,852,853,859,860,861,1131,1194,1199,1201,1241],cprint:1287,cpu:[40,41,43,904,941,943,949,950,953,978,981,985,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1076,1131,1187,1188,1189,1190,1191,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1285,1286],creat:[40,41,829,830,831,904,913,914,978,981,985,1014,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1067,1076,1077,1090,1131,1187,1188,1189,1190,1191,1243,1244,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],create_if_abs:[40,41],create_vari:1251,creation:[40,41,42,43],creation_funct:[386,387,388,829,830,831],crop:[1093,1097],crop_siz:[1093,1097],cross:[289,687,978,1225,1226,1227,1228],cross_entropi:1225,cuda:[40,41,904,913,932,949,978,981,985,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1076,1131,1187,1188,1189,1190,1191,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],cumprod:[127,289,432,687,978],cumsum:[687,978],cumul:[978,1000,1001],current:[40,41,42,43,904,913,937,938,940,944,954,960,968,977,978,1002,1017,1025,1029,1041,1045,1131,1175,1176,1183,1243,1289],current_framework:59,current_framework_str:[432,687,978,1131],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1237,d_in:[1212,1213,1214,1215,1216,1217,1218],d_out:[1212,1213,1214,1215,1216,1217,1218],da_can_termin:1131,da_dim_s:[904,1131],da_direct:1131,da_tune_step:[904,1131],dai:1289,daniel:1243,data:[40,41,42,43,829,830,831,833,834,836,837,838,841,842,844,847,849,851,852,853,859,860,861,863,882,888,904,906,907,908,909,910,911,916,917,918,932,954,958,959,960,964,965,966,967,968,969,970,977,978,981,985,1007,1014,1023,1030,1043,1044,1048,1059,1063,1076,1077,1083,1091,1111,1119,1131,1212,1221,1243],data_format:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],data_type_funct:[389,391,392,832,833,834],dataset:[40,41],datatyp:[40,41,954,959,969,970],dcdw:[1077,1079,1080,1082,1084,1085],debug_info:1237,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1077,1084,1085,1276,1278,1279],decay_lambda:[1077,1084,1085,1276,1278,1279],decid:[40,41,1289],decompos:[1100,1101,1105],decomposit:[1100,1101,1105,1106],decor:43,decrement:[978,1026],dedic:[1077,1091,1249,1250],deep:[40,41,1243],deep_copi:[40,41],deeper:[904,926,930,936,1131,1175,1184,1243],deepli:[1175,1177],def:[43,60,81,209,390,511,638,905,912,915,955,956,957,1078,1131,1135,1142,1238,1242,1243,1252,1255,1258,1285,1286,1289],default_dev:43,default_devic:904,default_dtyp:[43,954],default_float_dtyp:954,default_int_dtyp:954,default_key_color:[40,41,42],default_nod:1131,default_rng:482,default_v:[978,1003],defaultdevic:[904,905],defaultdtyp:[954,955],defaultfloatdtyp:[954,956],defaultintdtyp:[954,957],defer:43,defin:[43,978,999,1042,1044,1076,1187,1189],degre:[836,839,1111,1123,1125],del:1131,delta:[1077,1079,1131,1237],delta_dim_s:1131,delta_percent_mem:1131,delta_sf:1131,delta_util:1131,demo:1243,denomin:[978,1012,1019,1053,1060,1061,1229,1230,1274,1275],dens:[1260,1270],depend:[43,836,837,845,863,888,978,1074,1100,1106,1243],depth:[40,41,432,457,904,926,930,936,978,1021,1042,1131,1175,1184,1237,1241,1272,1273],depth_cutoff:[40,41],depthwis:[1212,1219,1260,1267],depthwise_conv2d:[194,375,496,627,818,1212],depthwiseconv2d:[1243,1260],deriv:[1077,1079,1080,1082,1084,1085,1086,1175,1177,1184,1243,1272,1276,1280,1282],descend:[856,857,1100,1106],descent:[1077,1082,1276,1281],describ:[40,41,1194,1195],descript:[849,851],design:[1243,1244],desir:[40,41,904,949,954,958,978,981,985,1023,1024,1043,1044,1076,1093,1098,1131,1194,1196,1197,1198,1200,1202],desired_aspect_ratio:[471,474,1093,1098],desired_percent_increas:1131,detail:1289,detect:[40,41,1175,1176,1183],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,836,837,838,842,847,849,851,859,860,861,863,888,904,939,941,942,951,954,958,959,965,968,969,970,977,978,980,981,985,986,987,1022,1025,1029,1030,1063,1073,1077,1083,1111,1119,1127,1128,1129,1130,1131,1212,1223],dev:[40,41,42,43,120,283,430,432,433,436,446,447,448,455,456,457,458,459,460,465,482,483,551,679,904,907,908,910,911,913,914,917,918,920,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,943,944,945,946,947,948,949,950,953,978,981,985,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1076,1077,1092,1187,1188,1189,1190,1191,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],dev_clon:[40,41,904],dev_clone_arrai:904,dev_clone_it:904,dev_clone_nest:904,dev_dist:[40,41,904],dev_dist_arrai:904,dev_dist_it:904,dev_dist_nest:904,dev_from_str:[43,120,283,430,551,679,904],dev_mapp:904,dev_str:[40,41],dev_to_str:[120,283,430,551,679,904],dev_unifi:904,dev_unify_arrai:904,dev_unify_it:904,dev_unify_nest:904,dev_util:904,devclonedit:904,devcloneditem:904,devclonednest:904,devdistit:904,devdistitem:904,devdistnest:904,develop:[43,1243,1286,1289],deviat:[40,41,1187,1190,1194,1200,1229,1230,1274,1275],devic:[21,40,41,43,386,387,388,431,432,445,829,830,831,906,907,908,909,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,978,981,985,1014,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1076,1077,1092,1187,1188,1189,1190,1191,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],devmanag:[904,912],devmapp:[904,914],devmappermultiproc:904,diag:[1100,1106],diagon:[97,221,407,527,655,849,978,1023],dict:[15,16,17,18,19,40,41,42,904,906,909,913,914,916,926,927,928,929,930,978,1004,1005,1006,1035,1127,1128,1129,1131,1175,1177,1178,1179,1182,1184,1249,1250],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,832,833,904,923,924,927,928,1100,1105,1131,1212,1221,1243,1286,1289],differenti:[1243,1286],dilat:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],dim:[40,41,43,978,1042,1093,1094,1098,1100,1106,1131,1260,1271],dim_siz:[40,41,904,1131],dimens:[40,41,42,849,850,851,852,853,859,860,861,904,935,978,989,995,999,1004,1005,1006,1009,1013,1020,1032,1042,1047,1048,1058,1059,1062,1070,1072,1093,1097,1100,1103,1106,1127,1128,1129,1130,1131,1187,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1209,1212,1213,1214,1215,1216,1217,1218,1219,1222,1225,1227,1228,1260,1261,1262,1263,1264,1265,1266,1267,1270,1271],dimension:[40,41,482,849,851,859,860,861,978,1058,1059,1100,1106],direct:1131,directli:[43,1175,1184,1286,1289],directori:[978,1055,1066],discret:[1225,1227],disk:[40,41,1093,1095],distanc:[978,981],distribut:[40,41,904,923,927,928,929,930,1131,1187,1188,1189,1190,1191,1212,1220,1260,1268,1272,1273],distribute_nest:1131,distributedarrai:[40,41],distrubt:[1225,1227],dive:[1243,1286],divid:[40,41,978,1058,1060,1111],dividend:[1111,1119],divis:[978,1012,1019,1053,1060,1061,1077,1079,1080,1084,1111,1119,1276,1277,1278],divisor:[1077,1079,1080,1084,1111,1119,1276,1277,1278],doc:1243,docstr:43,doe:[40,41,43,978,981,1058,1285],doesn:[1100,1105,1243],doing:43,domain:[836,837,847,1111,1112],don:1243,done:43,door:1289,dot:[1100,1102,1212,1223,1224,1260,1271],down:1285,downscal:[978,993,994],drag:[1243,1289],draw:[1187,1188,1190,1191],drawn:[1187,1188,1189,1190,1191],drop:[1243,1289],dropout:[1212,1243,1260,1271],dropout_r:[1260,1271],ds_tune_step:904,dtype:[40,41,43,127,289,386,387,388,389,391,392,432,433,436,437,445,448,458,465,558,687,829,830,831,832,833,834,958,959,960,961,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,981,985,1014,1023,1042,1043,1044,1076],dtype_bit:[127,289,432,558,687,954],dtype_from_str:[43,127,289,432,558,687,954],dtype_in:[432,442,443,444,954,960,965,966,967,968,969,970,977],dtype_to_str:[127,289,432,558,687,954],duplic:[40,41],dure:[40,41,43,902,903,978,1071,1077,1079,1080,1084,1127,1128,1129,1130,1272,1273,1276,1277,1278,1280],dynam:[432,438,902,903],each:[40,41,42,43,836,837,838,841,842,844,845,847,856,857,863,882,888,904,913,914,923,924,925,926,927,928,929,935,947,948,978,979,980,996,1007,1047,1058,1062,1065,1075,1077,1080,1082,1084,1085,1086,1093,1096,1100,1106,1111,1114,1119,1121,1122,1131,1175,1179,1187,1188,1194,1195,1212,1213,1214,1215,1216,1217,1218,1219,1220,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286],eager:1286,easi:1289,easili:1243,econom:1289,ecosystem:1243,edg:[978,992,996,1075],effect:[1077,1086],effective_grad:[1077,1086],effici:1289,einop:[40,41,978,1004,1005,1006],einops_rearrang:[40,41,978],einops_reduc:[40,41,978],einops_repeat:[40,41,978],einstein:[40,41,1194,1195],einsum:[40,41,180,363,484,617,798,1194],either:[40,41,43,978,1003,1035,1038,1040,1127,1128,1129,1130,1131,1260,1271,1272,1273,1286],eleg:1131,element:[40,41,43,482,836,837,838,839,840,841,842,844,845,846,847,852,853,856,857,859,860,861,863,882,888,904,925,929,935,954,958,978,979,981,983,984,986,987,991,992,993,994,1000,1001,1007,1010,1011,1012,1023,1024,1037,1039,1047,1049,1058,1069,1074,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1131,1194,1195,1197,1199,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1220,1260,1268],elementwis:[40,41],elementwise_affin:[1274,1275],elementwise_funct:[836,837,838,839,840,841,842,843,844,845,846,847],elemtn:[1187,1188],elif:1131,els:[978,988,1003,1008,1131],elsewher:[978,1074],emphas:1243,empti:[40,41,1100,1105,1131],enabl:[40,41,42,43,1243],encapsul:[832,834],encod:[978,1013,1093,1095],end:[978,981,1243,1286],ensur:43,entir:[40,41,859,860,861,904,948,1131,1243,1260,1269],entri:[40,41,978,1010,1033,1034,1058,1059],entropi:[1225,1226,1227,1228],enumer:1131,environ:1243,eps:[389,832,833],epsilon:[1077,1079,1080,1084,1225,1226,1227,1228,1229,1230,1274,1275,1276,1277,1278],equal:[40,41,432,558,687,836,839,842,978,980,986,987,996,1058,1075,1111,1123,1125,1187,1191],equality_matrix:[978,980],equat:[40,41,1194,1195],equival:[849,851,978,981,1111,1125],erf:[480,776,1111],error:[40,41,43,904,978,1059,1111,1120,1131,1204,1205,1272,1273,1276,1280],essenti:43,etc:[40,41,43,904,949,978,981,985,1015,1016,1023,1033,1034,1042,1043,1044,1050,1051,1076,1131,1187,1188,1189,1190,1191,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1289],euclidean:[849,851],euler:828,evalu:[40,41,836,845,859,860,861,978,1038,1175,1176,1183],even:[43,1289],evenli:[40,41,978,981,1033,1034,1058],everi:[978,980,1289],exact:[40,41],exampl:[43,902,903,978,992,1062,1100,1105,1243,1285,1286,1289],example_input:[432,438,902,903],exc_tb:1131,exc_typ:1131,exc_val:1131,exce:[978,1039],except:[40,41,44,47,859,860,861,978,981,988,995,1003,1071,1131],excess_s:1131,excit:[1243,1286],exclud:[59,61,978,981,1187,1191],exclus:[40,41,432,440,453,466,468,978,1000,1030,1077,1083,1187,1189],execut:[43,978,1071,1286],execute_with_gradi:[160,339,466,596,755,1077,1243,1285],exist:[40,41,978,1003,1131,1243,1276,1280,1289],exp:[776,1111],expand:[40,41,978,1009,1013],expand_dim:[40,41,289,687,978,1131],expect:[978,982],explain:[43,1286],explicitli:[43,1260,1269,1271,1272,1273,1286],expon:[43,863,888,978,1061],exponenti:[43,863,888,1111,1120,1121],expos:[978,985,997],express:[978,1038],exsit:[40,41],extend:43,extra:[40,41,42,1077,1081],extract:[849,850],eye:[1100,1102],fabian:1243,fabio:1243,factor:[904,913,946,947,948,1077,1079,1080,1084,1085,1100,1106,1131,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267,1276,1277,1278,1279],fail:43,falck:1243,fall:[1272,1273,1276,1280],fallback_to_non_compil:[1272,1273,1276,1280],fals:[15,18,19,40,41,42,59,66,67,68,69,70,430,432,440,441,453,461,464,466,467,468,475,476,836,842,849,851,856,857,859,860,861,904,922,935,943,948,953,954,961,962,963,964,978,980,1000,1003,1008,1013,1020,1030,1035,1056,1058,1072,1074,1077,1080,1081,1082,1083,1084,1085,1086,1100,1103,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1194,1196,1197,1198,1199,1200,1201,1202,1231,1232,1233,1237,1241,1249,1250,1272,1273,1276,1277,1278,1279,1280,1281],fan_in:1251,fan_mod:1251,fan_out:1251,far:[1175,1176,1183,1285],faster:[902,903],favourit:[1243,1285],feasibl:1289,feat_dim:[1212,1223,1224],fed:[904,948,1131],feed:[904,948,1131],few:43,field:1289,file:[40,41,43,978,1055,1066,1272,1273],filepath:[40,41],fill:[40,41,829,830,831,978,1014,1043,1187,1189],fill_valu:[432,445,978,1014],filter:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267,1289],filter_s:[1260,1261,1262],filter_shap:[1260,1263,1264,1265,1266,1267],find:[40,41,1289],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,208,209,389,390,510,511,637,638,832],finish:[1243,1289],finit:[836,842],first:[40,41,43,482,836,838,902,903,904,935,978,986,995,999,1007,1033,1034,1062,1064,1077,1081,1100,1106,1127,1128,1129,1130,1131,1175,1176,1183,1187,1193,1194,1199,1201,1260,1271,1272,1273,1276,1280,1286,1289],firstlayersiren:[1243,1251],firstli:[1286,1289],fist:[904,948,1131],fit:[40,41,430,432,466,471,475,479,480,482,978,1047,1093,1098],fix:43,fkt:1289,flag:[40,41,43,1077,1083],flat:[40,41,43,978,1047,1050],flat_list:[40,41],flatten:[40,41,849,851,978,1013,1047,1194,1196,1197,1198,1200,1202],flatten_key_chain:[40,41,1272,1273],flexibl:[1243,1286],flip:[40,41,100,224,410,530,658,852,978],float32:[43,432,448,954,958,966,967,978,981,985,1023,1043,1044,1076],float_dtyp:[954,962,972],float_img_to_uint8_img:1093,floor:[289,432,687,978,1012,1131],floor_divid:[394,642,836],floormod:[289,432,687,978],fluid:1289,fname:[1231,1233,1237,1272,1273],folder:[43,1243],follow:[40,41,43,832,834,849,851,904,948,978,1026,1027,1028,1060,1061,1077,1080,1082,1084,1085,1086,1131,1175,1179,1184,1212,1223,1224,1243,1260,1270,1276,1280],followng:[832,833],fomaml_step:1127,forget:[1077,1079,1080,1084,1276,1277,1278],fork:[978,1040,1243,1244],forkserv:[978,1040,1131],form:[15,16,17,18,19,40,41,978,985,1077,1080,1082,1084,1085,1086,1175,1177,1184,1212],format:[40,41,43,904,922,954,958,960,964,978,981,985,1023,1043,1044,1076,1131,1194,1195,1243,1285,1286],format_fn:[40,41],format_key_chain:[40,41],forward:[1272,1273,1276,1280,1285],found:[40,41,42],fourier:[978,1013],fourier_encod:978,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,405,408,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,525,528,529,531,535,538,539,547,552,553,554,555,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,597,598,599,600,602,603,604,606,607,608,609,613,614,615,616,618,619,620,621,622,623,624,628,629,630,635,636,638,639,640,643,644,645,646,647,648,649,650,651,652,653,656,657,659,663,666,667,675,680,681,682,683,684,685,686,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,756,757,758,759,760,762,763,764,766,767,768,769,770,771,772,774,775,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,799,800,801,802,803,804,805,808,809,810,811,812,813,814,816,817,819,820,821,822,823,824,825,830,831,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,853,857,860,861,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1230,1232,1233,1235,1236,1238,1242,1243,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1288,1289],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1131,framewrk:[978,1040],freeli:43,frequenc:[978,1013],from:[40,41,42,43,836,841,844,847,849,850,852,853,859,860,861,904,913,914,948,954,960,978,1003,1010,1015,1016,1023,1048,1059,1067,1074,1077,1080,1084,1093,1097,1100,1105,1127,1128,1129,1130,1131,1175,1177,1184,1187,1188,1189,1190,1191,1194,1199,1201,1212,1220,1223,1243,1249,1250,1260,1268,1271,1276,1280,1285,1286],from_cal:[1272,1273],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[127,289,432,558,687,832,833,978,1100,1105,1243],full_matric:[1100,1106],fulli:[43,1243,1260,1270,1271,1285],func:[40,41,432,438,466,467,902,903,904,948,978,990,1077,1081,1131],further:[43,1289],furthermor:1289,futur:1289,gain:1251,gamma:[1229,1230],gather:[40,41,127,289,432,558,687,978,1016],gather_nd:[40,41,127,289,432,558,687,978],gauss:[1111,1120],gaussian:[1204,1205],geglu:[1243,1246],gelu:[373,493,807,1204,1243,1246],gener:[23,40,41,43,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,482,902,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1083,1187,1189,1191,1192,1243,1276,1280],geometr:[978,1013],get:[40,41,43,832,833,834,904,913,914,922,937,938,943,947,950,953,954,964,965,978,982,1017,1018,1019,1046,1131,1241,1243,1260,1269,1289],get_all_arrays_in_memori:978,get_all_arrays_on_dev:904,get_framework:59,get_initial_st:[1260,1269],get_min_bas:978,get_min_denomin:978,get_mod_kei:[1272,1273],get_num_dim:[432,687,978],get_param:1237,get_param_recurs:1237,get_referrers_recurs:978,getfullargspec:1131,gist:1243,give:[43,856,857,978,1048,1286],given:[40,41,43,829,830,831,852,853,856,857,904,937,943,946,947,948,950,953,954,958,978,981,985,992,1000,1001,1010,1016,1033,1034,1043,1044,1047,1050,1051,1058,1065,1070,1072,1076,1077,1079,1080,1082,1084,1085,1086,1100,1102,1107,1111,1112,1131,1175,1180,1181,1187,1190,1191,1193,1194,1197,1199,1200,1201,1202,1212,1213,1214,1215,1216,1217,1218,1219,1249,1250,1289],global:[40,41,42,904,913,914,921,946,947,948,954,961,962,963,978,1002,1018,1019,1046,1052,1053,1054,1060,1061,1077,1092,1131,1229,1230,1235,1236,1243,1274,1275],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1243,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],got:[43,1243],gpu0:43,gpu2:43,gpu:[904,939,942,1131],gpu_is_avail:[430,904,1131],grad:[1243,1276,1280,1285],gradient:[25,40,41,467,468,469,470,904,948,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1096,1127,1128,1129,1130,1243,1276,1277,1278,1279,1280,1281,1285,1289],gradient_descent_upd:[1077,1127,1128,1129,1130],gradient_imag:[163,344,471,601,761,1093],gradienttrack:[1077,1078],graph:[1077,1080,1082,1084,1085,1086,1231,1232,1233,1238,1243,1272,1273],graph_compil:[1231,1232,1233,1234,1235,1236,1237,1241],greater:[40,41,978,981,1011,1059,1187,1191],green:[40,41,42,1287,1288],grid:[978,1038],group:[1093,1098],guid:[1243,1244,1289],gym:1243,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1289,half:[978,981,1131,1187,1191],hand:1243,handl:[40,41,42,43,902,903,904,920,922,931,932,943,950,953,1077,1080,1082,1084,1085,1086,1131,1276,1277,1278,1279,1280,1281],has:[40,41,43,978,1062,1100,1105,1111,1115],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,978],hasattr:1131,have:[40,41,43,832,833,836,837,838,841,842,844,847,849,851,852,853,859,860,861,863,882,888,978,995,999,1004,1005,1006,1007,1014,1062,1077,1083,1091,1100,1106,1111,1119,1131,1243,1285,1286],haven:43,hdf5:[40,41,1272,1273],head:[1212,1223,1260,1271],head_dim:[1260,1271],height:[1093,1098],height_cutoff:[40,41],help:[59,389,430,431,904,916,917,918,919,954,1077,1237,1241,1243,1251,1253,1254,1256,1257,1259],helper:1243,here:[43,1243],hidden:[1212,1222,1260,1269],hierarch:[978,997],hierarchi:[40,41],high:[40,41,482,1187,1189,1191],higher:[1077,1080,1082,1084,1085,1086,1100,1106],highest:[1187,1189],highest_util:1131,highest_util_nod:1131,highli:1243,highlight:1289,highlight_subgraph:[1231,1233,1237],hint:43,hkt:1289,hold:[954,958,978,981,985,1050,1051],host:1243,hot:[978,1042],how:[1243,1260,1271,1272,1273,1286,1289],howev:[43,1286],http:1289,hyperbol:[836,837,840,1111,1113,1117,1118,1124,1126,1204,1211],hypothet:1289,icon:1243,idea:1243,ident:[40,41,43,127,289,432,558,687,978],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[828,832,833,836,847],if_exist:[40,41],ignor:[40,41,1276,1280],ignore_key_error:[40,41],ignore_miss:[1276,1280],ignore_non:[40,41],iinfo:[80,208,389,510,637,832],imag:[27,472,473,474,978,1032,1094,1095,1096,1097,1098,1099,1212,1213,1214,1215,1216,1218,1219,1243,1289],image_dim:[1093,1097],imkkhk:1289,immedi:[1243,1286,1289],implement:[43,836,837,845,863,888,1243,1286,1289],in_featur:[1212,1221],inadvert:43,includ:[40,41,43,849,851,859,860,861,978,981,1022,1060,1061,1073,1175,1176,1187,1191,1260,1270,1271,1274,1275,1285],include_deriv:[1175,1177,1184],include_empti:[40,41],include_gener:[1231,1232,1233,1237,1272,1273],include_inf:[40,41,978,1022,1073],include_nest:[1175,1176],include_self:[40,41],inclus:[1187,1189],incom:[1212,1221],increas:[904,926,930,936,978,996,1009,1075,1131,1175,1184],increasingli:1289,increment:[978,1027,1131],increment_param_count:1237,inde:1243,indent:[40,41,42],independ:[1187,1188],index:[40,41,432,482,978,983,984,1015,1016,1038,1059,1062,1175,1178,1180,1181,1182,1185],index_nest:1175,indic:[40,41,432,446,447,457,459,460,849,851,856,857,978,983,984,1015,1016,1024,1042,1050,1051,1175,1176,1178,1180,1181,1182,1183,1185,1186,1187,1188,1204,1209,1212,1213,1214,1215,1216,1217,1218,1219,1229,1230,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273],indices_wher:[127,289,432,687,978],indistinguish:[836,847],inevit:1289,inf:[40,41,849,851,978,1022,1031,1073,1111,1115],infer:[836,841,844,849,850,902,903,978,1010,1020,1023,1048,1056,1093,1097,1100,1105,1286,1289],infin:[836,837,842,847,849,851,978,1031],infinit:[836,847],inform:[832,833,834,1077,1088],init_c:[1212,1222],init_h:[1212,1222],init_on_first_step:[1276,1280],initi:[40,41,42,59,389,430,431,904,916,917,918,919,954,1077,1131,1212,1222,1237,1241,1243,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1276,1280],initialz:[1272,1273],inner:[1127,1128,1129,1130],inner_batch_fn:[1127,1128,1129],inner_batch_shap:[1212,1221],inner_cost_fn:[1127,1128,1129],inner_grad_step:[1127,1128,1129,1130],inner_learning_r:[1127,1128,1129,1130],inner_optimization_step:[1127,1128,1129,1130],inner_v:[1127,1128,1129],inp:1131,inplac:[40,41,978,988,1025,1029,1063,1077,1080,1082,1084,1085,1086,1249,1250,1276,1277,1278,1279,1280,1281],inplace_arrays_support:[432,978],inplace_decr:[127,289,432,558,687,978],inplace_incr:[127,289,432,558,687,978],inplace_oper:[0,11,12],inplace_upd:[40,41,127,289,432,558,687,978,1249,1250],inplace_variables_support:[432,978],input:[15,18,19,40,41,42,43,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861,902,903,904,913,914,921,922,923,926,927,930,936,948,949,954,958,959,961,962,963,964,965,969,970,978,979,980,983,984,986,987,988,989,991,992,993,994,995,996,998,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1020,1022,1023,1024,1026,1027,1028,1030,1031,1032,1036,1037,1038,1039,1047,1049,1056,1057,1059,1062,1063,1064,1065,1067,1068,1069,1070,1072,1073,1075,1077,1081,1083,1088,1092,1093,1094,1095,1096,1097,1099,1100,1103,1105,1106,1108,1109,1110,1111,1113,1115,1117,1118,1119,1123,1124,1125,1126,1127,1128,1129,1130,1131,1187,1188,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1229,1230,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275,1286],input_ax:[904,948,1131],input_channel:[1260,1261,1262,1263,1264,1265,1266,1269,1270],input_queu:1131,inputs_split:1131,insert:[978,1009],insid:43,inspect:1131,inspir:1289,instal:1243,instanc:[15,16,17,18,19,40,41,43,482,863,882,888,904,913,1131,1249,1250,1282,1283],instead:[40,41,482,1194,1196,1197,1198,1199,1200,1201,1202,1289],int32:43,int64:[954,958,978,981,985,1023,1043,1044,1076],int_dtyp:[954,963,973],integ:[40,41,482,832,834,836,838,849,851,859,860,861,954,970,978,981,991,1011,1049,1058,1187,1189,1192],integr:1243,intend:43,inter:1243,interchang:[40,41,978,1064],interest:1243,interfac:[978,985,1286],intermedi:[40,41],intern:[40,41,904,1077,1091,1131,1175,1176,1183,1184,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1282,1283],interpol:[978,1032],intersect:[1111,1112],interv:[40,41,859,860,861,978,981,992,1033,1034,1111,1114,1187,1191],introduc:1289,inv:[765,1100,1289],invalid:[859,860,861],invalid_dtyp:954,invers:[836,837,1100,1102,1104,1111,1112,1113,1114,1115,1117,1289],invert:[1100,1102,1104],invest:1289,invoc:[902,903],irrespect:1243,is_al:1131,is_arrai:[127,289,432,558,687,978,1131],is_float_dtyp:954,is_int_dtyp:954,is_mean:1131,is_sum:1131,is_var:[1237,1241],is_vari:[160,339,466,596,755,1077],isfinit:[85,213,394,515,642,836],isinf:[289,558,687,978],isinst:1131,isnan:[85,213,394,515,642,836],isnumer:1131,issu:43,item:[15,19,40,41,863,875,876,904,913,914,916,923,925,927,929,935,954,961,978,997,1021,1060,1061,1131,1175,1179,1180,1181,1184,1185,1186,1243,1272,1273,1285],iter:[15,16,17,18,19,40,41,42,902,903,904,907,908,910,911,913,914,917,918,925,927,928,929,930,935,948,978,980,989,995,996,1010,1023,1038,1043,1047,1048,1051,1056,1058,1062,1065,1070,1075,1131,1175,1176,1177,1179,1183,1184],iterbal:[904,925,929,935,1131],its:[482,856,857,904,948,978,1023,1048,1064,1070,1131,1243],itself:[43,1175,1184],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,907,908,909,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1241,1243,1244,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1287,1288],ivy_backend:[40,41],ivy_bay:1289,ivy_test:43,ivyfcmodel:1285,ivyh:[40,41,42],ivymodul:[191,815],jame:1243,jax:[43,1077,1083,1243,1289],jax_concat:1243,jnp:1243,join:[40,41,978,995,1062,1131],journal:1243,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1243,1260,1269,1289],kaimingnorm:[1251,1255],kalman:1289,kalman_filt:1289,kalman_filter_step:1289,kalman_filter_upd:1289,keep:[40,41,904,949,978,1072,1131,1243,1244,1289],keep_inner_v:[1127,1128,1129],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1127,1128,1129],keepdim:[40,41,432,464,475,476,849,851,859,860,861,978,1072,1100,1103,1194,1196,1197,1198,1199,1200,1201,1202],kei:[15,16,17,40,41,42,43,863,868,904,916,978,997,1127,1128,1129,1131,1175,1178,1182,1212,1223,1224,1243,1249,1250,1260,1271,1276,1280],kept:[40,41,42,1127,1128,1129],kera:1289,kernel:[1212,1222],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,904,913,914,926,930,936,978,982,1004,1005,1006,1035,1131,1175,1179,1272,1273],keyword_color_dict:[40,41,42],kind:[832,833,834,1289],kwarg:[15,16,17,40,41,42,59,63,904,913,926,930,936,978,1035,1131,1231,1232,1233,1237,1249,1250,1272,1273],kwarg_stateful_idx:[1231,1232,1233,1237,1272,1273],kwargs_clon:1131,kwargs_dist:1131,kwargs_uni:1131,label:[43,1225,1226,1227,1228],lamb:[1077,1084,1243,1276],lamb_upd:1077,lambda:[1131,1276,1279,1281,1285],lar:[1077,1084,1085,1243,1276],larger:[832,833,978,992],largest:[40,41,832,833,834,978,983,1011],lars_upd:1077,last:[40,41,852,853,859,860,861,978,981,999,1032,1058,1062,1100,1103,1106,1194,1199,1201,1204,1209,1212,1222,1260,1270],later:[40,41,978,990],latest:[1260,1269],layer:[1077,1080,1082,1084,1086,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1229,1230,1243,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1289],layer_norm:1229,layernorm:[1243,1274],layerwis:[1077,1085,1276,1279],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1175,1176,1183],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1204,1205,1206],leaky_relu:[807,1204],learn:[836,841,844,849,850,1077,1080,1082,1084,1085,1086,1100,1105,1127,1128,1129,1130,1187,1193,1243,1276,1277,1278,1279,1280,1281,1286,1289],learnabl:[1229,1230,1274,1275],leav:[15,18,19,40,41,1175,1176,1177,1183,1184],left:[40,41,43,1100,1103,1194,1196,1197,1198,1199,1200,1201,1202,1243],leftmost:[40,41],len:1131,length:[40,41,42,978,981,1048,1059,1070],lenton2021ivi:1243,lenton:1243,less:[40,41,43,85,213,394,515,642,836,849,851,978,991,1131,1187,1191],less_util_node_str:1131,let:[1286,1289],level:1243,librari:[1243,1285,1289],lightweight:1243,like:[43,1077,1083,1187,1191,1243,1285,1286,1289],limit:[40,41,42,832,833,834,978,992,993,994],linalg:[29,1101,1102,1103,1104,1105,1106,1107,1243],line:43,linear0:[1243,1285],linear1:1243,linear2:1285,linear:[978,1013,1032,1100,1204,1205,1206,1207,1212,1220,1243,1260,1261,1262,1263,1264,1265,1266,1267,1285],linear_algebra:[475,476,477,478,849,850,851],linear_resampl:[127,289,432,558,687,978],linearli:[978,1013],link:[43,1243],linspac:[127,289,432,558,687,978,981],list:[15,18,19,40,41,43,386,387,388,829,830,831,852,853,859,860,861,904,913,914,923,924,926,927,928,930,933,934,948,978,981,985,987,1038,1057,1058,1067,1072,1127,1128,1129,1131,1175,1176,1177,1179,1183,1184,1212,1213,1214,1215,1216,1217,1218,1219,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267],list_join:[40,41,42],list_stack:[40,41],liter:[849,851],littl:1286,load:[40,41],loaded_kwarg:1131,loader:1243,local:43,local_set:[978,1021],locat:[43,836,843,978,1031,1187,1188],log2:[85,394,515,642,836],log:[776,978,1034,1111,1131,1225,1226,1227,1228,1243],log_all_op:1237,log_global_inference_abs_tim:[1234,1243],log_global_inference_rel_tim:[1234,1243],logarithm:[836,845,1111,1122],logic:[31,836,846,859,860,861,1109,1110,1243],logical_and:[354,773,1108],logical_not:[85,213,394,515,642,836],logical_or:[354,773,1108],logit:[1225,1228],logspac:[127,289,432,558,687,978],look:[43,1286,1289],loop:[1127,1128,1129,1130],loss:[1226,1227,1228,1243,1285],loss_fn:[1243,1285],lot:1286,low:[40,41,482,1187,1189,1191],lower:[40,41,43,978,1037,1187,1191],lower_depth:[1272,1273],lowest:[15,18,19,40,41,1175,1184,1187,1189],lstm:[1212,1222,1243,1260],lstm_updat:[43,1212],machin:[832,833,834,836,841,844,849,850,1100,1105,1187,1193,1243,1286,1289],made:43,mai:[978,981,1003,1007,1243,1286,1289],main:[978,1023,1243],mainli:1243,maintain:43,make:[43,482,904,1131,1243,1286],maml:[1127,1128,1129],maml_step:1127,manag:[904,1131],manhattan:[849,851],mani:[40,41,43,978,1058,1243],manipulation_funct:[852,853],manner:[15,18,19,40,41,43,1175,1184],manual:[1175,1176,1183,1289],map:[40,41,42,836,843,904,913,978,1031,1131,1175,1180,1181,1184,1260,1271,1285],map_cont:[40,41],map_nest_at_index:1175,map_nest_at_indic:1175,map_sequ:[40,41],mapper:[904,913,914,1131],mask:[1212,1223,1224],master:43,match:[40,41,978,1035],match_kwarg:978,math:[33,481,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1131,1243],mathbb:[1100,1107],mathbf:[1100,1107],mathemat:[828,849,851],matmul:[43,289,432,558,687,978,1289],matplotlib:1286,matric:[1212,1221],matrix:[40,41,849,850,978,980,993,1036,1100,1101,1102,1103,1104,1105,1107,1212,1221,1260,1270],matrix_norm:[40,41,167,348,475,605,765,1100],matter:1243,max:[40,41,389,832,833,834,978,993,994,1005,1037,1050,1051,1131,1194,1196,1276,1278],max_batch_s:[40,41],max_chunk_s:[904,948,1131],max_depth:[40,41,904,908,911,918,926,930,936,978,1021,1131,1175,1184],max_dev_dim_step_ratio:904,max_freq:[978,1013],max_length:[40,41],max_node_dim_step_ratio:1131,max_norm:[40,41,978,993,994],max_split_factor_step_s:[904,1131],max_trust_ratio:[1077,1084,1276,1278],maxim:[1243,1286,1289],maximis:1243,maximum:[40,41,42,687,904,926,930,936,948,978,983,992,993,994,1013,1077,1084,1131,1175,1184,1194,1196],mayb:[15,18,19],mdi:1131,mean:[40,41,482,904,933,934,935,936,948,978,1005,1127,1128,1129,1130,1131,1175,1179,1187,1190,1194,1197,1200,1202,1251,1285,1289],measur:[1212,1223,1260,1271],mech:1243,mechan:[1243,1289],medic:1289,member:43,memori:[904,920,943,948,950,953,1131,1212,1222,1243],merg:43,merge_with_upstream:43,meshgrid:[289,432,687,978],messag:[1287,1288],meta:[35,1128,1129,1130,1243],method:[40,41,42,43,482,978,985,997,1038,1050,1051,1077,1084,1085,1131,1175,1176,1183,1184,1243,1260,1271,1272,1273,1286],might:[978,1003,1289],min:[40,41,389,832,833,834,849,851,978,1005,1039,1050,1051,1060,1100,1105,1131,1194,1198],min_bas:[978,1061],min_denomin:[978,1060],min_dev_dim_s:904,min_node_dim_s:1131,min_sf_tune_step:[904,1131],min_unit_dev_tune_step:904,min_unit_node_tune_step:1131,mind:1243,mini:[1229,1230,1274,1275],minimum:[40,41,687,904,954,958,978,981,984,985,992,1018,1019,1052,1053,1060,1061,1131,1194,1198],miss:[1276,1280],ml_framework:[836,841,844,849,850,978,981,1100,1105],mod:[978,1012],mod_depth:[1272,1273],mod_height:[1272,1273],mod_with_top_mod_key_chain:[1272,1273],mode:[40,41,475,477,902,903,904,933,934,935,936,948,1100,1105,1106,1131,1286],model:[1243,1285],modul:[40,41,42,59,978,1040,1131,1243,1244,1246,1247,1248,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275,1282,1283,1289],moment:[1077,1079,1080,1084,1276,1277,1278],more:[43,852,853,978,1062,1131,1243,1286,1289],more_util_node_str:1131,most:[40,41,43,1100,1105,1243,1289],move:[40,41,43,904,949,1131],much:[43,1243,1289],multi:[482,978,1040,1212,1223,1260,1271],multi_head_attent:1212,multi_index_nest:1175,multi_map:[40,41],multi_nod:1131,multidev:[904,915,916,917,936],multidevcontain:[40,41],multidevic:[904,913],multidevit:[904,907,910,913,914,918],multidevitem:[904,906,909],multidevnest:[904,908,911],multiheadattent:[1243,1260],multinod:[1131,1135],multinodecontain:1131,multinodeit:1131,multinodeitem:1131,multinodenest:1131,multinomi:[173,358,482,612,791,1187],multipl:[40,41,859,860,861,978,1035,1058,1100,1102,1194,1196,1197,1198,1199,1200,1202,1229,1230,1260,1270,1286],multipli:[40,41,978,1000,1194,1199],multiprocess:[40,41,42,432,687,904,913,978,1131],must:[40,41,42,43,829,830,831,836,837,838,841,842,844,847,849,851,852,853,859,860,861,863,882,888,904,933,934,935,936,948,978,981,995,997,999,1007,1037,1039,1051,1062,1111,1116,1119,1131,1187,1192,1276,1280],mutabl:[1175,1177,1184],mutlidevic:[904,913],mutlinod:1131,mw_tm1:[1077,1080,1084],mx_concat:1243,mxnet:[43,1243,1289],my_func:43,mymodel:1243,name:[902,903,1231,1232,1233,1237,1285],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1286],nan:[40,41,828,836,837,842,843,978,1022,1073],nativ:[15,17,18,19,40,41,43,904,920,922,931,932,943,950,953,954,959,966,967,1131,1243,1244,1249,1250],native_modul:[1249,1250],native_module_class:[1249,1250],nativearrai:[15,18,19,43,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,851,852,853,856,857,859,860,861,863,882,888,904,922,948,949,954,958,964,969,970,978,979,980,981,983,984,985,986,987,989,991,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1013,1015,1016,1020,1022,1023,1024,1031,1032,1033,1034,1036,1037,1038,1039,1042,1043,1044,1047,1048,1049,1050,1051,1056,1058,1059,1062,1064,1065,1067,1068,1069,1070,1072,1073,1074,1075,1076,1131,1175,1177,1184],natur:[1111,1122,1289],ncdhw:[1212,1217,1218,1260,1265,1266],nchw:[1212,1215,1216,1219,1260,1263,1264,1267],ncw:[1212,1213,1214,1260,1261,1262],ndarrai:[43,386,387,388,389,391,392,482,978,1068],ndhwc:[1212,1217,1218,1260,1265,1266],nearest:[978,1049],need:[43,978,993,994,1212,1214,1216,1218,1243,1260,1262,1264,1266,1289],neg:[40,41,836,842,849,851,852,853,859,860,861,1194,1199,1201,1204,1206],negative_slop:1251,neither:1131,nest:[15,16,17,18,19,40,41,42,904,926,930,936,978,985,1067,1127,1128,1129,1131,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1272,1273,1276,1277,1278,1279,1280,1281],nested_indices_wher:1175,nested_map:[1131,1175],network:[1212,1221,1243,1244,1246,1260,1272,1273,1289],neural:[1212,1243,1246,1260,1285],new_node_percent_mem:1131,new_node_util:1131,new_node_utils_kei:1131,new_std:[1229,1230,1274,1275],newli:[43,902,903,978,989,990],newlin:[40,41,42],newshap:[978,989,1048],next:[832,833,1131,1272,1273,1276,1277,1278,1279,1280,1281],nhwc:[1212,1215,1216,1219,1260,1263,1264,1267],node:[40,41,1175,1176,1183],node_clon:1131,node_dist:1131,node_dist_arrai:1131,node_dist_it:1131,node_in:1131,node_mapp:1131,node_str:1131,node_to_str:1131,node_util:1131,nodedistit:1131,nodedistitem:1131,nodedistnest:1131,nodemanag:[1131,1142],nodemapp:1131,nodemappermultiproc:1131,noinspect:[43,905,955,956,957,1078,1131,1238],non:[40,41,849,851,859,860,861,902,903,954,968,1272,1273,1276,1280,1286],none:[40,41,42,43,59,61,64,386,387,388,430,432,433,436,438,445,446,447,448,455,456,457,458,459,460,461,462,463,465,475,476,482,483,829,830,831,832,833,834,836,841,844,849,850,851,852,853,859,860,861,902,903,904,913,914,920,921,946,947,948,949,954,961,962,963,978,981,985,1002,1003,1008,1010,1014,1015,1016,1021,1023,1025,1026,1027,1028,1029,1033,1034,1040,1042,1043,1044,1047,1050,1051,1052,1053,1058,1059,1060,1061,1070,1071,1076,1077,1080,1082,1084,1085,1086,1092,1093,1097,1100,1103,1105,1127,1128,1129,1130,1131,1175,1176,1179,1183,1184,1187,1188,1189,1190,1191,1194,1196,1197,1198,1199,1200,1201,1202,1212,1214,1216,1218,1221,1222,1223,1224,1229,1230,1231,1232,1233,1237,1241,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],norm:[40,41,849,851,978,993,994,1100,1103,1230,1243,1275,1276,1278],normal:[1187,1190,1229,1230,1274,1275],normalized_idx:[1229,1230],normalized_shap:[1274,1275],notat:[40,41,1194,1195],note:[43,1100,1105],noth:[40,41,1286],notimplementederror:1131,now:[40,41,904,949,978,979,1131,1243,1260,1271,1272,1273,1285,1286,1289],np_concat:1243,np_finfo:389,ns_tune_step:1131,num:[432,455,456,978,1033,1034],num_arrai:[40,41],num_arrays_in_memori:978,num_arrays_on_dev:904,num_band:[978,1013],num_channel:[1260,1267],num_chunk:1131,num_chunks_floor:1131,num_class:[1187,1188],num_cpu_cor:904,num_gpu:[120,430,904,1131],num_head:[1212,1223,1260,1271],num_kei:[1212,1223,1224],num_lay:[1260,1269],num_or_size_split:[40,41,432,461,978,1058],num_output:1131,num_queri:[1212,1223,1224],num_sampl:[432,454,482,483,978,1032,1093,1094,1187,1188],num_task:[1127,1128,1129,1130],number:[40,41,42,828,832,833,834,836,843,859,860,861,902,903,904,940,941,942,954,965,969,970,978,981,992,996,1009,1013,1020,1023,1032,1033,1034,1037,1041,1047,1058,1065,1069,1073,1075,1100,1106,1127,1128,1129,1130,1131,1187,1188,1192,1194,1196,1197,1198,1200,1202,1212,1223,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1286,1289],numer:[43,836,842,863,882,888,978,1018,1019,1052,1053,1060,1061,1111,1119,1251],numhead:[1212,1223],numpi:[40,41,43,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,978,1068,1100,1105,1106,1194,1195,1243,1285,1286,1289],nwc:[1212,1213,1214,1260,1261,1262],obj:[40,41],object:[40,41,42,59,389,832,833,834,904,954,958,978,981,985,1077,1175,1178,1180,1181,1182,1185,1186,1187,1193,1237,1241,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273],object_in:[432,436,978,985],observ:1131,occupi:[832,833,834,978,1050,1051],off:[978,981],offer:1243,offset:[849,850,1229,1230],often:1286,old:[40,41],on_init:[1260,1271,1272,1273],onc:[43,904,948,1131,1187,1188,1243],one:[40,41,43,849,851,852,853,904,933,934,935,936,948,954,960,978,1023,1035,1042,1050,1051,1059,1062,1100,1103,1131,1194,1195,1196,1197,1198,1199,1200,1201,1202,1243,1286,1289],one_hot:[127,432,558,687,978],onearrai:[978,1009],ones:[40,41,77,205,386,507,634,829,978,1023,1042,1044,1243],ones_lik:[127,289,432,558,687,978],ongo:43,onli:[40,41,43,482,852,853,904,1100,1105,1131,1175,1176,1177,1183,1276,1277,1278,1279,1280,1281,1285,1286],onlin:1243,onto:[904,933,934,949,1131,1175,1179,1184],oom:[904,1131],open:[978,981,1187,1191,1243,1289],opencv:1286,oper:[40,41,836,846,978,988,1004,1005,1006,1033,1034,1063,1077,1080,1082,1084,1085,1086,1108,1109,1110,1212,1213,1214,1215,1216,1217,1218,1219,1221,1243,1244],operand:[40,41,836,837,1194,1195],oppos:[978,1013],optim:[904,1077,1080,1082,1084,1085,1086,1127,1128,1129,1130,1131,1243,1277,1278,1279,1281,1285,1289],optimizer_upd:1077,option:[15,18,19,40,41,42,43,386,387,388,829,830,831,836,841,844,849,850,851,852,853,859,860,861,902,903,904,913,914,922,926,927,928,929,930,933,934,935,936,943,946,947,948,949,953,954,959,964,968,977,978,980,981,983,984,985,993,994,995,1000,1002,1003,1010,1013,1014,1015,1016,1020,1022,1023,1030,1032,1033,1034,1035,1038,1040,1042,1043,1044,1047,1050,1051,1054,1056,1058,1059,1060,1061,1062,1070,1072,1073,1076,1077,1080,1082,1083,1084,1085,1086,1088,1093,1097,1100,1103,1105,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1187,1188,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1209,1212,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286],ord:[849,851,978,1010,1100,1106],order:[40,41,42,43,849,851,852,853,856,857,1077,1080,1082,1084,1085,1086,1100,1103,1127,1128,1129,1282,1283],ordered_node_util_kei:1131,org:1289,organ:43,origin:[40,41,42,978,1044,1048,1076,1100,1103],other:[40,41,43,863,865,866,871,873,874,878,880,881,882,883,884,886,888,889,890,891,892,893,895,896,897,899,900,901,902,903,978,980,981,1023,1077,1081,1187,1191,1243,1285,1286,1289],other_i:[43,863,882,888],otherwis:[15,16,17,18,19,40,41,836,842,849,851,859,860,861,904,921,954,961,962,963,978,988,1070,1071,1074,1077,1083,1088,1092,1127,1128,1129,1131,1194,1196,1197,1198,1200,1202],our:[43,1243,1289],out:[482,863,882,978,981,1111,1115,1212,1220,1222,1243,1260,1268],out_feat_dim:[1212,1223],out_featur:[1212,1220,1221],out_i:[836,842],outdat:1289,outer:[1127,1128,1129,1130],outer_batch_fn:[1127,1128,1129],outer_batch_shap:[1212,1221],outer_cost_fn:[1127,1128,1129],outer_v:[1127,1128,1129],outlin:1286,output:[40,41,43,829,830,831,852,853,904,913,914,948,978,981,990,1014,1023,1047,1065,1077,1081,1111,1116,1131,1187,1189,1190,1191,1212,1214,1216,1218,1220,1222,1223,1224,1243,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271],output_ax:[904,948,1131],output_axi:1131,output_channel:[1260,1261,1262,1263,1264,1265,1266,1269,1270],output_connected_onli:[1231,1233,1237,1272,1273],output_queu:1131,output_shap:[1212,1214,1216,1218,1260,1262,1264,1266],outsid:[978,992],over:[40,41,849,851,859,860,861,978,1010,1100,1103,1187,1191,1194,1196,1197,1198,1200,1202,1229,1230,1274,1275],overal:1286,overflow:[978,981],overhead:1286,overrid:[978,1042,1044,1076],overriden:[1276,1280],overwrit:[40,41,904,948,1131],overwrite_at_key_chain:[40,41],own:[1243,1286,1289],packag:[43,1286],pad:[978,996,1013,1075,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],pad_width:[432,978,996,1075],page:1243,pair:[1212,1224],parallel:[904,913,914,1131],parallelis:[904,913,914,1131],param:[40,41,42,43,432,446,447,836,847,904,948,978,979,1015,1016,1042,1043,1131,1242,1243,1272,1273,1285],paramet:[15,16,17,18,19,40,41,42,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,849,850,851,852,853,856,857,859,860,861,863,882,888,902,903,904,913,914,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,943,946,947,948,949,950,953,954,958,959,960,964,965,966,967,968,969,970,977,978,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1020,1022,1023,1024,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1044,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1088,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],parameter:[1187,1190,1191],params_all_empti:1237,pardo:1243,pars:[978,997],part:[1077,1080,1082,1084,1085,1086,1111,1115,1243,1272,1273,1286],partial:[40,41,1272,1273],particl:1289,particular:[43,1289],pass:[40,41,42,43,904,913,948,954,959,978,990,1077,1091,1127,1128,1129,1131,1249,1250,1272,1273,1276,1280,1282,1283],pattern:[40,41,978,1004,1005,1006],per:[904,1131,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],percent_used_mem_on_dev:904,percent_used_mem_on_nod:1131,percentag:[904,943,1131],perf_count:1131,perform:[40,41,43,856,857,859,860,861,904,978,983,984,1000,1004,1005,1006,1026,1027,1028,1032,1033,1034,1077,1080,1082,1084,1085,1086,1093,1094,1127,1128,1129,1130,1131,1175,1180,1181,1194,1196,1197,1198,1199,1200,1201,1202,1204,1209,1212,1220,1222],permissable_step:1131,permit:43,permut:[482,978,1064,1070],perpendicular:[978,999],person:1243,physci:1289,pickl:[40,41,1131],pickle_filepath:[40,41],pid:1237,pinv:[348,765,1100],pip:1243,pipelin:1285,pkk:1289,pkkm1:1289,pkm1km1:1289,place:[40,41,43,829,830,831,904,949,978,1009,1014,1026,1027,1028,1131,1276,1277,1278,1279,1280,1281],placehold:[1175,1184],pleas:[482,1100,1105],point:[43,828,829,830,831,832,833,836,837,847,849,851,954,969,978,981,1111,1119],popul:[40,41,1187,1188],popular:1289,population_s:[482,483,1187,1188],portabl:[1243,1244],posit:[15,16,17,832,833,836,842,904,926,930,936,978,979,981,1009,1013,1131,1187,1192,1249,1250],possibi:[40,41],possibl:[978,1035,1067,1093,1098,1289],post:[1229,1230],post_shap:[40,41],power:[43,863,888,894,978,1018,1052,1061,1251],practic:1243,pre:[904,1131,1243],pre_shap:[40,41],precis:[832,833,836,847],pred:[1225,1226,1227,1228],predict:[1225,1226,1227,1228,1289],preprint:1243,present:[40,41],preserv:[40,41,42,852,853,978,1010,1077,1088],preserve_typ:[40,41,466,469,1077,1088],press:1243,prevent:[43,1077,1079,1080,1084,1131,1276,1277,1278],previou:[1077,1080,1084],previous:[978,990],prime:1243,print:[40,41,42,904,944,978,1045,1243,1285],print_all_arrays_in_memori:978,print_all_arrays_on_dev:904,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1276,1280],prob:[482,483,1187,1188,1212,1220,1260,1268],probabl:[1187,1188,1212,1220,1260,1268],problem:[43,1289],process:[43,904,913,914,943,953,978,1040,1131],process_specif:[904,943,953,1131],prod:[40,41,978,1005],produc:[904,913,914,1131],product:[40,41,978,999,1000,1036,1194,1195,1212,1223,1224,1260,1271],profil:[120,283,430,551,679,904,1131],project:[1243,1285,1286,1289],promot:[43,836,837,838,847,849,851,863,888,1111,1119],prompt:1243,properli:43,properti:[40,41,389,904,916,1131,1237,1241,1272,1273,1276,1277,1278,1279,1281],provid:[40,41,43,852,853,859,860,861,902,903,904,921,954,961,962,963,968,977,978,1003,1042,1044,1051,1076,1077,1080,1082,1084,1085,1086,1092,1131,1243,1260,1269,1276,1277,1278,1279,1280,1281,1286],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1100,1104],ptype:[1237,1241],pull:[1243,1244],pure:[40,41,1243,1289],purpos:1289,put:1131,pybroadexcept:1131,pyprotectedmemb:[1131,1238],pyshadowingbuiltin:43,pyshadowingnam:[905,955,956,957,1078,1131],python:[40,41,904,943,953,978,981,1131,1243],pytorch:[1077,1080,1082,1084,1085,1086,1100,1105,1243,1276,1277,1278,1279,1280,1281,1285,1286,1289],pyunresolvedrefer:1131,quadrant:[1111,1116],queri:[40,41,863,877,898,904,937,947,1131,1212,1223,1224,1260,1271],query_dim:[1260,1271],query_kei:[40,41],queue:[40,41,42,904,913,914,978,1046,1054,1131],queue_class:[904,913,914,1131],queue_load_s:[40,41,42],queue_timeout:[40,41,42,978,1131],quick:[482,1243],quickli:[43,1285],radian:[836,839,1111,1112,1114,1116,1123,1125],rai:[1111,1112],rais:[40,41,43,859,860,861,863,888,978,988,1018,1052,1059,1061,1071,1131,1272,1273,1276,1280],ram:[904,943,950,953,1131],randint:[173,358,482,612,791,1187],random:[37,40,41,483,1188,1189,1190,1191,1192,1193,1243],random_crop:1093,random_norm:[173,358,482,612,791,1187],random_uniform:[173,358,482,612,791,1187],randomli:[482,1093,1097,1212,1220,1260,1268],randomness_factor:[1231,1233,1237,1272,1273],rang:[482,978,981,1033,1034,1111,1116,1131,1243,1285,1289],rank:[849,851,859,860,861,978,996,1072,1075],rate:[1077,1080,1082,1084,1085,1086,1127,1128,1129,1130,1260,1271,1276,1277,1278,1279,1280,1281],rather:[40,41,904,948,978,981,1030,1077,1083,1131],ratio:[904,1077,1084,1093,1098,1131,1276,1278],raw:[40,41,1100,1105],raw_delta:1131,reach:[904,926,930,936,1131,1175,1184],read:[40,41],readi:[1131,1285],real:[1111,1112,1115],realiti:1286,rearrang:[40,41,978,1004,1006],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1127,1129],receiv:[904,913,914,978,982,1035,1131,1260,1270],receivess:[904,1131],receiving_fn:1237,receivng:[1127,1130],recev:[1127,1128,1129],recognit:1289,recommend:1243,rectifi:[1204,1206,1207],recurr:[1212,1222],recurrent_bia:[1212,1222],recurrent_kernel:[1212,1222],recurs:[40,41,1175,1176,1177,1183,1184],redefin:43,reduc:[40,41,859,860,861,904,948,978,1005,1100,1105,1131,1194,1196,1197,1198,1199,1200,1201,1202],reduce_max:[40,41,180,363,484,617,798,1194],reduce_mean:[40,41,180,363,484,617,798,1194,1243,1285],reduce_min:[40,41,180,363,484,617,798,1194],reduce_prod:[40,41,180,363,484,617,798,1194],reduce_std:[40,41,363,1194],reduce_sum:[40,41,180,363,484,617,798,1131,1194],reduce_var:[40,41,180,363,484,617,798,1194],reduct:[39,40,41,432,459,460,859,860,861,978,1005,1050,1051,1195,1196,1197,1198,1199,1200,1201,1202,1243],refactor:43,refer:[43,859,860,861,1077,1079,1080,1100,1107,1260,1270,1289],reflected_oper:[0,13,14],regard:[904,1131],regardless:[40,41,902,903],register_paramet:1285,reimplement:1289,rel:[852,853,1077,1080,1082,1084,1085,1086],rel_slice_obj:1131,relev:[1276,1277,1278,1279,1280,1281],relu:[807,1204,1205,1206,1243,1285],remain:[43,978,1048,1175,1179],remaind:[40,41,978,1012,1058],remov:[40,41,978,1059,1127,1128,1129],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,852,853,978,1010],rep:[978,1065],repeat:[40,41,43,289,687,978,1006,1065,1131,1286],repeated_config_check:[904,1131],repeatedli:[1175,1182],repetit:[40,41,978,1047,1065],replac:[40,41,43,482,483,978,992,1050,1051,1187,1188],repo:[43,1243],repres:[43,836,837,954,960,965,1212,1221],represent:[40,41,42,43,828,832,833,834,836,838,904,931,932,954,960,966,967,978,1057,1067,1131],reptil:[1127,1130],reptile_step:1127,request:[1243,1244],requir:[43,836,847,902,903,954,958,978,981,985,1249,1250],resampl:[978,1032],reserv:43,reshap:[40,41,43,482,687,978],reshape_lik:[40,41],respect:[836,838,841,844,863,882,978,1007,1077,1079,1080,1081,1082,1084,1085,1086,1100,1105,1111,1119,1127,1128,1129,1130],respond:43,respons:1131,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,836,837,838,841,842,844,846,847,849,851,859,860,861,863,882,888,904,913,978,981,1007,1050,1051,1062,1100,1103,1108,1109,1110,1111,1119,1131,1194,1196,1197,1198,1199,1200,1201,1202,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1243],ret:1131,ret_dict:1131,ret_fn:[904,913,914,1131],retain:[1077,1081],retain_grad:[466,467,1077,1081],retreiv:1131,retrn:[978,1057],return_cont:[40,41],return_dict:[40,41],return_graph:[1231,1232,1233],return_inner_v:[1127,1128,1129,1130],return_sequ:[1260,1269],return_st:[1260,1269],rev:[978,1003],revers:[40,41,852,853,978,1003,1010,1070],review:43,right:[40,41,43],rk_e:1289,robot:1243,ronald:1243,root:[43,836,847],round:[289,432,687,836,847,978,981,1131],row:[978,1023,1187,1188],rule:[43,836,838,847,863,888,978,981,1111,1119],run:[43,904,913,1077,1079,1080,1084,1127,1128,1129,1130,1131,1243,1244,1260,1271,1272,1273],safe:[904,913,1131],safety_factor:[904,1131],same:[15,16,17,40,41,43,852,853,904,913,914,948,949,954,958,978,979,991,995,1011,1012,1015,1016,1042,1044,1049,1050,1051,1062,1076,1077,1083,1088,1100,1106,1111,1115,1127,1128,1129,1131,1194,1195,1212,1213,1214,1215,1216,1217,1218,1219,1243,1260,1261,1262,1263,1264,1265,1266,1267,1285,1289],same_arrai:[40,41],sampl:[978,1032,1093,1094,1187,1188,1190,1191,1212,1220,1243,1260,1268],satisfi:[978,985,1100,1102,1107],save:[40,41,978,1055,1066,1093,1095,1272,1273],save_debug_info:1237,save_dir:[430,431,904,919,1131],save_to_disk:[1231,1233,1237,1272,1273],save_weight:[1272,1273],scalar:[849,851,978,992,1042,1069,1073],scale:[904,946,947,1077,1085,1131,1212,1220,1223,1224,1229,1230,1260,1268,1271,1276,1279],scaled_dot_product_attent:1212,scatter:[978,1042,1050,1051],scatter_flat:[127,289,432,558,687,978],scatter_nd:[127,289,432,558,687,978],scene:[1077,1080,1082,1084,1085,1086],schemat:1243,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,836,838,904,935,978,986,999,1007,1046,1054,1064,1077,1079,1080,1084,1127,1129,1131,1276,1277,1278],secondli:1289,sector:[836,837],see:[43,59,389,430,431,482,836,838,849,851,859,860,861,863,882,888,904,916,917,918,919,954,978,981,1033,1034,1077,1111,1119,1237,1241,1243,1251,1253,1254,1256,1257,1259],seed:[40,41,173,482,791,1187],seed_valu:[40,41,482,1187,1192],seem:1243,seen_set:[978,1021],select:[978,985,1059,1286,1289],self:[40,41,43,59,389,430,431,863,882,888,904,916,917,918,919,954,1077,1131,1237,1241,1243,1251,1253,1254,1256,1257,1259,1276,1280,1285,1289],self_i:[863,882],sent:1131,seper:[43,978,1013],seq:[40,41,42,1194,1195,1272,1273],sequenc:[15,16,17,40,41,42,43,482,902,903,904,913,914,923,924,925,926,927,928,929,930,933,934,948,954,958,978,981,985,987,989,995,996,1010,1023,1035,1038,1043,1047,1048,1051,1058,1062,1065,1070,1075,1077,1081,1093,1097,1098,1100,1103,1131,1175,1186,1187,1189,1191,1194,1196,1197,1198,1199,1200,1201,1202,1212,1213,1214,1215,1216,1217,1218,1219,1229,1230,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1272,1273,1274,1275,1276,1280,1282,1283],sequenti:1243,seri:43,set:[15,18,19,40,41,904,933,934,946,947,948,978,980,1002,1023,1052,1053,1054,1055,1077,1080,1082,1083,1084,1085,1086,1100,1103,1131,1175,1176,1183,1185,1186,1187,1188,1192,1194,1196,1197,1198,1199,1200,1201,1202,1241,1243,1260,1269,1276,1277,1278,1279,1280,1281,1286,1289],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1241,set_debug_mod:44,set_default_devic:904,set_default_dtyp:954,set_default_float_dtyp:954,set_default_int_dtyp:954,set_default_nod:1131,set_exception_debug_mod:44,set_framework:[40,41,43,59,1131,1243,1285,1286,1289],set_ivy_backend:[40,41],set_min_bas:978,set_min_denomin:978,set_nest_at_index:1175,set_nest_at_indic:1175,set_param:1237,set_queue_timeout:978,set_split_factor:[904,1131],set_stat:[1276,1277,1278,1279,1280,1281],set_tmp_dir:978,set_with_grad:1077,setter:1131,sever:1289,sgd:[1243,1276],shape0:1131,shape:[40,41,43,386,387,388,432,445,460,482,687,829,830,831,852,853,904,916,954,958,978,979,989,991,995,996,1009,1010,1011,1012,1014,1016,1020,1023,1042,1043,1044,1047,1048,1049,1050,1051,1057,1059,1062,1075,1076,1093,1097,1100,1102,1105,1111,1115,1116,1131,1187,1189,1190,1191,1194,1195,1212,1214,1216,1218,1237,1241,1260,1262,1263,1264,1265,1266,1267,1274,1275],shape_slic:[40,41],shape_to_tupl:978,share:[40,41,1243,1286],shift:1131,should:[40,41,42,43,482,836,837,838,842,847,849,851,863,882,888,902,903,904,978,989,990,997,1042,1048,1077,1080,1082,1084,1085,1086,1111,1119,1131,1194,1195,1243],show:[40,41,1237,1243,1289],show_debug_info:1237,show_graph:[1231,1243,1272,1273,1276,1280],show_mod_in_top_mod:[1272,1273],show_structur:[1272,1273],show_sub_contain:[40,41],show_v:[1272,1273],show_v_in_top_v:[1272,1273],shown:[40,41],shp:1131,shuffl:[40,41,173,482,791,1187],shuffle_h5_fil:[40,41],sigmoid:[807,1204,1243,1285],signatur:[43,59,389,430,431,432,466,471,475,479,480,482,904,916,917,918,919,954,1077,1237,1241,1251,1253,1254,1256,1257,1259],signific:1289,similar:[43,1212,1223,1260,1271],similarli:[1100,1105],simpl:[43,978,1008,1243,1286,1289],simpler:43,simplest:1286,simpli:[40,41,43,1243,1286,1289],simultan:1243,sin:[776,978,1013,1111,1125,1286],sinco:1286,sine:[836,837,1111,1114,1123,1124],singl:[40,41,902,903,904,913,914,933,934,935,936,978,1059,1069,1073,1093,1098,1131,1187,1190,1191,1194,1196,1197,1198,1199,1200,1201,1202,1243,1286,1289],singleton:[849,851,859,860,861],singular:[1100,1106],sinh:[776,1111],siren:[1243,1251],size:[40,41,42,432,459,904,927,928,929,930,946,947,948,978,981,989,1033,1034,1050,1058,1093,1097,1100,1103,1106,1131,1187,1188,1190,1191,1194,1196,1197,1198,1199,1200,1201,1202,1260,1261,1262],size_ordered_arrai:[40,41],skew:[1100,1107],skinv:1289,skip:[40,41],slice:[40,41,856,857,978,1015,1016,1131,1175,1182],slice_kei:[40,41],slice_obj:[40,41,1131],slice_via_kei:[40,41],slide:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],slope:[1204,1206],small:[1225,1226,1227,1228,1229,1230,1243,1274,1275,1286],smaller:[978,992],smallest:[40,41,832,833,834,978,984,991],smallest_norm:[389,832,833],softmax:[189,493,807,1204,1212,1223,1224],softplu:[807,1204],solv:1289,some:[40,41,43,978,981,1077,1079,1080,1082,1084,1085,1086,1091,1212,1220,1243,1260,1268,1286,1289],some_backend:43,some_namespac:43,someth:[43,1289],something_cool:43,somewher:[40,41],sort:[40,41,42,857,1100,1106,1131],sort_by_kei:[40,41],sorting_funct:[856,857],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,856,857,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,907,908,909,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1241,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1287,1288,1289],space:[978,981,1013,1033,1034],spars:[1225,1228],sparse_cross_entropi:1225,spawn:[978,1040],special:[836,837],specif:[40,41,43,904,946,978,997,1004,1005,1006,1040,1127,1128,1129,1130,1131,1187,1193,1243,1272,1273,1285,1286],specifc:[1187,1188],specifi:[40,41,43,849,850,851,852,853,859,860,861,904,923,924,925,926,927,928,929,930,933,934,938,940,944,947,948,949,954,958,960,978,981,983,984,985,992,995,996,1014,1015,1016,1022,1033,1034,1062,1072,1075,1100,1103,1131,1175,1180,1181,1185,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202],split:[40,41,127,289,432,558,687,904,913,927,928,929,930,946,947,948,978,1035,1131],split_arg:1131,split_factor:[904,913,1131],split_func_cal:[904,1131],split_siz:1131,spread:[904,936,1131],sqrt:[85,213,394,515,642,836,849,851],squar:[836,847,978,1023,1100,1102],squeez:[127,289,432,558,687,978],stabil:[856,857,978,1060,1061],stabl:[856,857,978,1018,1019,1052,1053,1060,1061],stable_divid:978,stable_pow:978,stack:[40,41,289,687,978,1093,1098,1175,1176,1183,1260,1269],stack_imag:[163,344,471,601,761,1093],stacked_dim_s:1131,stage:43,standard:[40,41,832,833,1187,1190,1194,1200,1229,1230,1243,1244,1274,1275],start:[40,41,43,430,431,432,433,455,456,482,904,919,978,981,1033,1034,1131,1243,1286],starting_index:[40,41],starting_split_factor:[904,1131],state:[1131,1212,1222,1231,1232,1233,1237,1243,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],statement:1286,static_argnam:[432,438,902,903],static_argnum:[432,438,902,903],std:[482,1187,1190],step:[40,41,432,433,904,978,981,1033,1034,1077,1079,1080,1082,1084,1085,1086,1127,1128,1129,1130,1131,1243,1276,1277,1278,1279,1280,1281,1285,1289],stephen:1243,stick:1243,still:[40,41,43],stochast:[1276,1281],stop:[40,41,430,431,432,433,455,456,904,919,948,978,981,1033,1034,1077,1080,1082,1084,1085,1086,1088,1127,1128,1129,1130,1131,1276,1277,1278,1279,1280,1281],stop_gradi:[40,41,339,466,596,755,904,948,1077,1080,1082,1084,1085,1086,1127,1128,1129,1130,1131,1276,1277,1278,1279,1280,1281],stopiter:1131,store:[40,41,978,1013,1058,1077,1091,1272,1273],store_var:[1272,1273],str:[15,16,17,40,41,42,43,386,387,388,389,391,392,832,833,834,902,903,904,913,914,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,948,954,959,960,965,966,967,968,969,970,977,978,985,1002,1004,1005,1006,1038,1040,1043,1050,1051,1100,1103,1105,1127,1128,1129,1130,1131,1175,1179,1194,1195,1249,1250,1260,1271,1272,1273],str_to_nod:1131,straight:1286,strength:[1243,1289],stride:[1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],string:[40,41,43,904,920,922,931,932,937,943,949,950,953,954,958,964,966,967,968,977,978,981,985,1002,1023,1043,1044,1076,1131,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273],structur:[40,41,42,43,978,997],structural_diff:[40,41],sub:[40,41,904,927,928,933,934,935,936,978,1058,1127,1128,1129,1130,1131],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1131,sub_mod:[1272,1273],sub_modul:[1282,1283],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1243,1244,1274,1275,1282,1283],subsequ:43,subset:43,substr:[40,41],suffici:[1100,1105],suggest:1243,suitabl:[1093,1098],sum:[40,41,432,459,460,849,851,904,933,934,935,936,948,978,1001,1005,1050,1051,1131,1194,1195,1201],summat:[40,41,1194,1195],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,405,408,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,525,528,529,531,535,538,539,547,552,553,554,555,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,597,598,599,600,602,603,604,606,607,608,609,613,614,615,616,618,619,620,621,622,623,624,628,629,630,635,636,638,639,640,643,644,645,646,647,648,649,650,651,652,653,656,657,659,663,666,667,675,680,681,682,683,684,685,686,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,756,757,758,759,760,762,763,764,766,767,768,769,770,771,772,774,775,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,799,800,801,802,803,804,805,808,809,810,811,812,813,814,816,817,819,820,821,822,823,824,825,830,831,833,834,837,838,839,840,841,842,843,844,845,846,847,849,850,851,853,857,860,861,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1230,1232,1233,1235,1236,1238,1242,1243,1247,1248,1250,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1288,1289],supports_inplac:978,suppos:1289,sure:43,svd:[348,605,765,1100],swap:[40,41,978,1064],swapax:[40,41,558,687,978,1289],symmetr:[1100,1107],syntax:[430,432,466,471,475,479,480,482],tab:1243,take:[43,978,1032],taken:[1194,1196,1197,1198,1200,1202],tan:[776,1111,1115],tangent:[1111,1115,1116,1117,1125,1126,1204,1211],tanh:[776,807,1111,1204],target:[40,41,904,920,923,924,925,926,927,928,929,930,933,934,935,936,949,1131,1243],target_dict:[40,41],task:[43,1127,1128,1129,1130],team:[43,1289],templat:1243,temporari:[978,1055,1066],tensor:[40,41,43,432,459,460,856,857,904,922,954,964,978,981,983,984,989,1033,1034,1037,1039,1042,1043,1044,1048,1050,1051,1058,1076,1131,1187,1188,1189,1212,1220,1222,1243,1260,1268,1270,1276,1277,1278,1279,1280,1281,1285,1286],tensorflow:[43,1100,1105,1212,1214,1216,1218,1243,1260,1262,1264,1266,1286,1289],term:[40,41,1212,1222,1243,1260,1270],termcolor:[40,41,42],termin:[40,41,42,1131],test:[43,836,842,859,860,861,954,969,970],test_array_api:43,tf_concat:1243,than:[40,41,832,833,849,851,852,853,904,948,978,981,991,992,1011,1030,1037,1059,1062,1077,1083,1131,1187,1191,1243,1286],thei:[40,41,43,1111,1116,1127,1128,1129,1187,1188,1243,1282,1283,1286],them:[1243,1289],themselv:[1175,1176],therefor:43,thi:[40,41,42,43,904,926,930,936,943,948,953,978,981,1013,1046,1048,1054,1077,1080,1082,1083,1084,1085,1086,1091,1100,1103,1131,1175,1179,1184,1194,1196,1197,1198,1199,1200,1201,1202,1212,1221,1243,1272,1273,1276,1277,1278,1279,1280,1281,1285,1286,1289],thing:[43,1243],those:[40,41,978,992,1077,1091,1100,1106,1131],though:43,threshold:[978,1037,1039],through:[40,41],tickbox:43,tile:[289,558,687,978],time:[978,1065,1077,1080,1084,1127,1128,1129,1130,1131,1187,1188,1212,1222,1260,1271,1272,1273,1289],time_chronolog:[1231,1232,1237],time_infer:[1231,1232],timeout:[40,41,42,904,913,914,978,1046,1054,1131],timestep:[1212,1222,1260,1269],timing_fnam:[1231,1232],titl:1243,tmp_dir:978,tmp_dr:[978,1055],to_appli:[40,41],to_clon:[904,1131],to_dev:[40,41,120,283,430,551,679,904],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[904,1131],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1243],to_ivy_modul:[191,815,1243,1249],to_json:[40,41],to_kv_fn:[1212,1223],to_kv_v:[1212,1223],to_list:[40,41,432,687,978],to_multi_dev:[40,41],to_mut:[1175,1177,1184],to_n:[15,40,41,1243],to_nod:1131,to_numpi:[40,41,432,687,978,1243,1285],to_out_fn:[1212,1223],to_out_v:[1212,1223],to_q_fn:[1212,1223],to_q_v:[1212,1223],to_raw:[40,41],to_scalar:[432,687,978],todo:[43,1131],togeth:[40,41,1282,1283],tool:[1243,1286],top_mod:[1272,1273],topic:1289,torch:[43,902,903,1243,1285,1286,1289],torch_concat:1243,torchfcmodel:1285,total:[40,41,42,904,950,1131],total_mem_on_dev:904,total_mem_on_nod:1131,tpu:[904,951,1131],tpu_is_avail:[430,551,679,904,1131],tpye:[954,965],trace:[40,41,978,1030],track:[43,904,1131,1175,1184,1272,1273],track_submod_call_ord:[1272,1273],track_submod_ret:[1272,1273],trail:[1274,1275],train:[1077,1079,1080,1084,1243,1244],trainabl:[1077,1083,1243,1244,1249,1250,1272,1273,1282],trainer:1243,tran:1289,transform:[1212,1220,1221],transpos:[40,41,127,289,432,687,904,935,978,1131,1212,1214,1216,1218,1260,1262,1264,1266],travers:[15,18,19,40,41,1175,1184],treat:[40,41,902,903],tree_depth:1241,tree_height:1237,tri:[40,41],trigonometr:[836,839,1111,1112,1115,1123],trim_kei:[40,41],trust:[1077,1084,1276,1278],truth:[836,841,844,846,863,882,978,1007,1108,1109,1110],try_else_non:978,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[904,1131],tune_dev_alloc:904,tune_dev_split:904,tune_node_alloc:1131,tune_node_split:1131,tune_step:[904,1131],tupl:[15,16,17,18,19,40,41,43,386,387,388,829,830,831,849,851,852,853,859,860,861,902,903,978,996,1013,1014,1057,1075,1131,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1189,1194,1196,1197,1198,1199,1200,1201,1202],tutori:43,two:[40,41,978,981,986,999,1036,1064,1100,1103,1106],type:[15,18,40,41,42,43,59,391,392,430,431,829,830,831,833,834,836,837,838,841,842,844,847,849,851,852,853,859,860,861,863,882,888,904,916,917,918,919,931,932,936,948,954,958,959,960,964,965,966,967,968,969,970,977,978,979,981,985,991,995,997,1007,1011,1012,1014,1023,1030,1042,1043,1044,1049,1063,1073,1076,1077,1083,1088,1111,1119,1131,1237,1241,1243,1251,1253,1254,1256,1257,1259,1272,1273,1286],types_to_iteratively_nest:[40,41,42],uint8:[1093,1095,1099],uint8_img_to_float_img:1093,unchang:[15,16,17,18,19],uncom:43,underli:[836,838],underwai:43,unif:1131,unifi:[40,41,904,933,934,935,936,948,1131,1243],uniform:[40,41,1187,1188,1190,1191,1251,1253,1254,1257,1258],uniformli:[1187,1189,1191],unify_arrai:1131,unify_it:1131,unify_nest:1131,union:[15,18,19,40,41,43,386,387,388,389,391,392,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,846,847,849,851,852,853,856,857,859,860,861,863,882,888,902,903,904,922,927,928,929,930,948,949,954,958,959,960,964,965,966,967,968,969,970,977,978,979,980,981,983,984,985,986,987,989,991,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1020,1022,1023,1024,1031,1032,1033,1034,1036,1037,1038,1039,1042,1043,1044,1047,1048,1049,1050,1051,1056,1057,1058,1059,1062,1064,1065,1067,1068,1069,1070,1072,1073,1074,1075,1076,1131,1175,1176,1177,1183,1184],uniqu:[904,913,914,1127,1128,1129,1130,1131,1175,1179],unique_kwarg:1131,unit:[43,904,1111,1112,1114,1131,1204,1205,1206,1207],unitari:[1100,1106],unless:[978,1042,1044,1076],unlik:[904,1131],unnorm:[1187,1188],unpack:[978,1072],unrol:[1212,1222],unset:1286,unset_debug_mod:44,unset_default_devic:904,unset_default_dtyp:954,unset_default_float_dtyp:954,unset_default_int_dtyp:954,unset_framework:[59,1286],unset_with_grad:1077,unstack:[40,41,127,289,432,558,687,978],until:43,unus:[902,903],updat:[40,41,432,459,460,904,913,978,1028,1050,1051,1077,1079,1080,1082,1084,1085,1086,1127,1128,1129,1131,1175,1180,1181,1185,1186,1212,1222,1243,1244,1249,1250,1276,1277,1278,1279,1280,1281,1286,1289],update_backend:[40,41],update_config:[40,41],update_inference_tim:1237,upper:[40,41,1187,1191],upper_depth:[1272,1273],upstream:43,usabl:[1243,1289],usag:[904,948,1131],use:[40,41,42,43,482,904,913,914,939,951,978,1047,1060,1061,1100,1105,1131,1212,1223,1229,1230,1243,1274,1275,1286,1289],used:[40,41,43,482,904,913,943,946,947,953,954,965,978,1018,1019,1035,1044,1050,1051,1052,1053,1076,1077,1084,1085,1100,1103,1127,1128,1129,1130,1131,1175,1184,1260,1271,1276,1278,1279,1285,1286],used_dev:[904,913],used_mem_on_dev:904,used_mem_on_nod:1131,used_node_str:1131,used_node_strs_dict:1131,useful:[40,41,904,948,1131,1212,1221,1243,1286],user:[1243,1260,1271,1272,1273,1286,1289],uses:1243,using:[40,41,1077,1079,1080,1175,1178,1182,1194,1195,1212,1220,1224,1243,1260,1268,1285,1286,1289],util:[904,937,1131],utility_funct:[859,860,861],v_with_top_v_key_chain:[1272,1273],val:[40,41,432,450,451,452,863,898,978,1026,1027,1028,1052,1053,1241],valid:[859,860,861,954,959,978,1060,1061,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],valid_dtyp:954,valu:[40,41,432,836,841,843,844,846,849,851,856,857,863,882,904,916,947,948,978,979,981,983,984,992,993,994,996,997,1003,1007,1013,1014,1015,1016,1031,1033,1034,1037,1039,1046,1047,1048,1049,1050,1051,1052,1053,1054,1070,1073,1074,1075,1077,1081,1084,1093,1099,1100,1106,1108,1109,1110,1111,1120,1121,1122,1127,1128,1129,1131,1175,1179,1180,1181,1185,1186,1187,1190,1191,1194,1196,1198,1212,1223,1224,1229,1230,1237,1260,1271,1274,1275,1276,1278],value_is_nan:978,vanilla:[1127,1129],var_shap:1251,variabl:[15,16,17,18,19,40,41,339,466,596,755,978,988,1026,1027,1028,1029,1030,1063,1077,1080,1081,1082,1083,1084,1085,1086,1088,1091,1127,1128,1129,1130,1212,1223,1229,1230,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],variable_data:[466,755,1077],varianc:[40,41,1194,1202,1289],varieti:1286,variou:[43,1243],vector:[40,41,475,478,849,851,978,994,999,1100,1106,1107,1212,1221,1260,1270],vector_norm:[40,41,97,221,407,527,655,849],vector_to_skew_symmetric_matrix:[167,348,475,605,765,1100],verbos:1288,veri:[43,1243],verifi:43,version:43,via:[1175,1176,1183,1286],view:[1093,1098],vision:1243,visual:1286,volum:[1212,1217],vw_tm1:[1077,1080,1084],wai:[1286,1289],wait:[40,41,42],want:[1243,1286,1289],warn:[59,66,67,68,69,70],warp:[471,472,1093,1094],watch:1285,weight:[1077,1079,1080,1082,1084,1085,1086,1212,1221,1222,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1276,1278,1279],weight_initi:[1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],weights_path:[1272,1273],well:[40,41,978,1022],were:[40,41,1131],what:[43,1243],when:[40,41,42,43,904,978,990,1061,1074,1100,1106,1131,1243,1272,1273,1286,1289],where:[40,41,43,289,432,687,836,843,859,860,861,863,888,978,981,989,992,996,1009,1024,1031,1042,1075,1100,1106,1175,1176,1183,1187,1188],wherea:43,wherebi:[1175,1184],whether:[15,18,19,40,41,42,859,860,861,902,903,904,922,935,939,943,948,951,953,954,964,968,969,970,977,978,980,986,987,1000,1003,1008,1013,1020,1022,1025,1029,1030,1035,1056,1063,1072,1073,1077,1080,1081,1082,1083,1084,1085,1086,1088,1127,1128,1129,1130,1131,1175,1176,1177,1179,1183,1184,1187,1188,1204,1205,1212,1220,1243,1249,1250,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],which:[40,41,42,43,482,829,830,831,832,833,834,849,850,851,852,853,859,860,861,902,903,904,913,914,922,927,928,929,930,933,934,935,936,938,940,944,946,947,948,954,959,964,968,977,978,981,985,995,997,999,1000,1001,1003,1010,1014,1015,1016,1017,1023,1024,1032,1033,1034,1041,1042,1043,1044,1045,1047,1050,1051,1058,1062,1072,1074,1076,1077,1080,1081,1082,1084,1085,1086,1088,1090,1091,1093,1095,1100,1103,1111,1116,1131,1175,1179,1180,1181,1185,1186,1187,1188,1189,1190,1191,1194,1196,1197,1198,1199,1200,1201,1202,1204,1209,1212,1223,1224,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1285,1286],whitespac:[40,41,42],whose:[43,836,837,852,853,863,888,978,985,990,1194,1195,1196,1197,1198,1200,1202],why:[1243,1244],width:[1093,1098],wiki:1289,wikipedia:1289,window:[1093,1098,1212,1213,1214,1215,1216,1217,1218,1219,1260,1261,1262,1263,1264,1265,1266,1267],wise:[40,41,43,836,838,839,841,844,846,863,882,888,978,991,992,1007,1011,1012,1037,1039,1049,1077,1080,1082,1084,1086,1108,1109,1110,1111,1112,1114,1115,1116,1119,1120,1121,1122,1123,1125,1204,1205,1206,1207,1208,1209,1210,1211],wish:1286,with_arg_label:[1231,1233,1237,1272,1273],with_array_cach:[1231,1232,1233,1237],with_bia:[1260,1270],with_cal:[978,1003],with_default_key_color:[40,41],with_edge_label:[1231,1233,1237,1272,1273],with_entries_as_list:[40,41],with_grad:[1077,1087,1272,1273],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1131,with_output_label:[1231,1233,1237,1272,1273],with_partial_v:[1272,1273],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,432,461,978,1058,1131],with_to_kv_fn:[1260,1271],with_to_out_fn:[1260,1271],with_to_q_fn:[1260,1271],within:[15,18,19,978,981,1100,1106,1187,1191],without:[40,41,43,978,1046,1048,1054,1175,1177,1286],wonder:1243,word:[15,16,17,978,981,1187,1191,1249,1250],work:[43,1285],worker:[904,913,914,1131],worker_class:[904,913,914,1131],worker_kwarg:1131,would:[43,856,857,1204,1209,1243,1286,1289],wrap:[15,40,41,42,43,430,432,466,471,475,479,480,482,978,990,1077,1091,1243],wrapper:43,write:[40,41,43,1243,1244,1289],written:[43,1243,1289],ws_new:[1077,1080,1082,1084,1085,1086],x1_i:[836,838,841,844,978,1007,1111,1119],x2_i:[836,838,841,844,978,1007,1111,1119],x_feat_dim:[1212,1223],x_i:[836,837,842,847],x_in:[1243,1285],x_inv:[1100,1102],x_max:[432,978,992],x_min:[432,978,992],x_sub:1131,xkk:1289,xkkm1:1289,xkm1km1:1289,xs0:1131,xs_t:1131,year:[1243,1289],yet:[1175,1184,1289],yield:[978,1074],you:[43,1243,1285,1286,1289],your:[1243,1244,1285,1286,1289],your_awesome_project:1286,yourself:[43,1243],yourslef:43,youtub:43,zero:[40,41,77,205,386,507,634,829,849,851,859,860,861,978,996,1042,1044,1050,1051,1075,1076,1077,1079,1080,1084,1085,1212,1220,1243,1251,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1276,1277,1278,1279],zero_pad:[289,432,558,687,978],zeros_lik:[127,289,432,558,687,978],zip:1131,zk_e:1289},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1003,"function":[77,80,85,96,100,102,103,104,106,107,205,208,213,220,224,226,227,228,230,231,386,389,394,406,410,412,413,414,416,417,507,510,515,526,530,532,533,534,536,537,634,637,642,654,658,660,661,662,664,665,829,832,836,848,852,854,855,856,858,859],Ones:1256,Using:1286,abs:[290,559,688,979],aco:[777,1112],acosh:[778,1113],activ:[189,373,493,626,807,1204,1246],adam:1277,adam_step:1079,adam_upd:1080,algebra:[97,167,221,348,407,475,527,605,655,765,849],all:[108,232,418,538,666,860],all_equ:980,all_nested_indic:1176,ani:[109,233,419,539,667,861],api:[0,43,75,111,203,235,384,421,505,541,632,669,827],arang:[128,291,433,560,689,981],arg_nam:982,argmax:[129,434,561,690,983],argmin:[130,435,562,691,984],args_to_ivi:16,args_to_n:17,argsort:[105,229,415,535,663,857],arithmet:[1,112,236,422,542,670],arrai:[0,3,43,75,110,111,113,131,203,234,235,237,244,292,384,420,421,423,436,505,540,541,543,563,632,668,669,671,692,827,863,985],array_equ:[293,693,986],arrays_equ:987,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[779,1114],asinh:[86,395,516,643,837],assert_supports_inplac:988,atan2:[781,1116],atan:[780,1115],atanh:[782,1117],attribut:[5,114,238,424,544,672],backend:[43,73],bilinear_resampl:[164,345,472,602,762,1094],binary_cross_entropi:1226,bitwis:[7,115,239,425,545,673],bitwise_and:[87,214,396,517,644,838],broadcast_to:[294,694,989],builder:51,builtin:[110,234,244,420,540,668,863],builtin_ab:[245,864],builtin_add:[246,865],builtin_and:[247,866],builtin_bool:[248,867],builtin_contain:[249,868],builtin_deepcopi:[250,869],builtin_dir:[251,870],builtin_eq:[252,871],builtin_float:[253,872],builtin_floordiv:[254,873],builtin_g:[255,874],builtin_getattr:[256,875],builtin_getattribut:[257,876],builtin_getitem:[258,877],builtin_gt:[259,878],builtin_int:[260,879],builtin_invert:[261,880],builtin_l:[262,881],builtin_lt:[263,547,675,882],builtin_mul:[264,883],builtin_n:[265,884],builtin_neg:[266,885],builtin_or:[267,886],builtin_po:[268,887],builtin_pow:[269,888],builtin_radd:[270,889],builtin_rand:[271,890],builtin_rfloordiv:[272,891],builtin_rmul:[273,892],builtin_ror:[274,893],builtin_rpow:[275,894],builtin_rsub:[276,895],builtin_rtruediv:[277,896],builtin_rxor:[278,897],builtin_setitem:[279,898],builtin_sub:[280,899],builtin_truediv:[281,900],builtin_xor:[282,901],cache_fn:990,cast:[132,295,437,564,695,958],ceil:[296,696,991],choleski:[766,1101],choose_random_framework:61,citat:1243,clear_framework_stack:62,clear_mem_on_dev:[681,920],clip:[297,697,992],clip_matrix_norm:993,clip_vector_norm:994,clone:1146,clone_arrai:1147,clone_it:1148,clone_nest:1149,clonedit:1133,cloneditem:1132,clonednest:1134,closest_valid_dtyp:959,code:1289,comparison:[9,116,240,426,546,674],compil:[298,438,698,902,903,1231],compile_graph:1232,concaten:[133,299,439,565,699,995],constant:[76,204,385,506,633,828],constant_pad:[300,566,700,996],contain:[40,41],container_typ:[701,997],content:1243,contribut:43,conv1d:[195,376,497,819,1213,1261],conv1d_transpos:[196,377,498,820,1214],conv1dtranspos:1262,conv2d:[197,378,499,628,821,1215,1263],conv2d_transpos:[198,379,500,822,1216],conv2dtranspos:1264,conv3d:[199,380,501,629,823,1217,1265],conv3d_transpos:[200,381,502,824,1218],conv3dtranspos:1266,convers:15,convert:[191,815,1249],convert_dtyp:960,copy_arrai:[702,998],copy_nest:1177,core:[119,243,429,550,678,862],cos:[88,397,518,645,839],cosh:[89,398,519,646,783,840,1118],cprint:1288,creat:43,creation:[77,205,386,507,634,829],cross:[301,703,999],cross_entropi:1227,cumprod:[134,302,440,704,1000],cumsum:[705,1001],current_framework:63,current_framework_str:[706,1002],data:[80,84,208,212,389,393,510,514,637,641,832,835],debug_mod:45,debugg:44,default_devic:921,default_dtyp:961,default_float_dtyp:962,default_int_dtyp:963,default_nod:1150,depthwise_conv2d:[201,382,503,630,825,1219],depthwiseconv2d:1267,design:43,dev:[122,285,553,682,922],dev_clon:923,dev_clone_arrai:924,dev_clone_it:925,dev_clone_nest:926,dev_dist:927,dev_dist_arrai:928,dev_dist_it:929,dev_dist_nest:930,dev_from_str:[123,286,554,683,931],dev_to_str:[124,287,555,684,932],dev_unifi:933,dev_unify_arrai:934,dev_unify_it:935,dev_unify_nest:936,dev_util:937,devclonedit:907,devcloneditem:906,devclonednest:908,devdistit:910,devdistitem:909,devdistnest:911,devic:[20,120,283,430,551,679,904],devmapp:913,devmappermultiproc:914,diagon:[98,222,408,528,656,850],distribute_nest:1151,divid:1119,document:1243,dropout:[1220,1268],dtype:[135,303,441,567,707,954,964],dtype_bit:[136,304,442,568,708,965],dtype_from_str:[137,305,443,569,709,966],dtype_to_str:[138,306,444,570,710,967],ecosystem:52,einops_rearrang:1004,einops_reduc:1005,einops_repeat:1006,einsum:[181,364,485,618,799,1195],elementwis:[85,213,394,515,642,836],equal:[571,711,1007],erf:[481,784,1120],execute_with_gradi:[161,340,467,597,756,1081],exist:1008,exp:[785,1121],expand_dim:[307,712,1009],finfo:[82,210,391,512,639,833],firstlayersiren:1253,flip:[101,225,411,531,659,853,1010],float_img_to_uint8_img:1095,floor:[308,713,1011],floor_divid:[399,647,841],floormod:[309,714,1012],fomaml_step:1128,fork:43,fourier_encod:1013,framework:59,full:[139,310,445,572,715,1014],func:72,gather:[140,311,446,573,716,1015],gather_nd:[141,312,447,574,717,1016],geglu:1247,gelu:[374,494,808,1205,1248],gener:[22,127,289,432,558,687,978],get_all_arrays_in_memori:1017,get_all_arrays_on_dev:938,get_framework:64,get_min_bas:1018,get_min_denomin:1019,get_num_dim:[718,1020],get_referrers_recurs:1021,global:1234,glorotuniform:1254,gpu_is_avail:[939,1152],gradient:[24,160,339,466,596,755,1077],gradient_descent_upd:1082,gradient_imag:[165,346,473,603,763,1096],graph:1237,gym:53,handler:59,has_nan:1022,helper:1239,ident:[142,313,448,575,719,1023],iinfo:[83,211,392,513,640,834],imag:[26,163,344,471,601,761,1093],index_nest:1178,indices_wher:[143,314,449,720,1024],initi:1251,inplac:[11,117,241,427,548,676],inplace_arrays_support:1025,inplace_decr:[144,315,450,576,721,1026],inplace_incr:[145,316,451,577,722,1027],inplace_upd:[146,317,452,578,723,1028],inplace_variables_support:1029,inv:[767,1102],invalid_dtyp:968,is_arrai:[147,318,453,579,724,1030],is_float_dtyp:969,is_int_dtyp:970,is_vari:[162,341,468,598,757,1083],isfinit:[90,215,400,520,648,842],isinf:[319,580,725,1031],isnan:[91,216,401,521,649,843],ivi:[43,50,51,52,53,54,55,56,57,58,826,1285,1286,1289],ivymodul:[192,816],jax:74,keep:43,lamb:1278,lamb_upd:1084,lar:1279,lars_upd:1085,layer:[194,375,496,627,818,1212,1260],layer_norm:1230,layernorm:1275,leaky_relu:[809,1206],less:[92,217,402,522,650,844],linalg:[28,1100],linear:[97,167,221,348,407,475,527,605,655,765,849,1221,1270],linear_resampl:[148,320,454,581,726,1032],linspac:[149,321,455,582,727,1033],log2:[93,403,523,651,845],log:[786,1122,1240],log_global_inference_abs_tim:1235,log_global_inference_rel_tim:1236,logic:[30,171,354,479,610,773,1108],logical_and:[355,774,1109],logical_not:[94,218,404,524,652,846],logical_or:[356,775,1110],logspac:[150,322,456,583,728,1034],loss:1225,lstm:1269,lstm_updat:1222,maml_step:1129,manipul:[100,224,410,530,658,852],map:1179,map_nest_at_index:1180,map_nest_at_indic:1181,match_kwarg:1035,math:[32,172,357,480,611,776,1111],matmul:[323,584,729,1036],matrix_norm:[168,349,476,606,768,1103],maximum:[730,1037],mech:54,memori:55,meshgrid:[324,731,1038],meta:[34,1127],method:[96,220,406,526,654,848],minimum:[732,1039],model:56,modul:[1272,1273,1285],multi:1131,multi_head_attent:1223,multi_index_nest:1182,multidevcontain:42,multidevit:917,multidevitem:916,multidevnest:918,multiheadattent:1271,multinodeit:1137,multinodeitem:1136,multinodenest:1138,multinomi:[174,359,483,613,792,1188],multiprocess:[733,1040],mxnet:202,nativ:1285,nest:1175,nested_indices_wher:1183,nested_map:1184,network:1285,next:1243,node:[1131,1153],node_dist:1154,node_dist_arrai:1155,node_dist_it:1156,node_str:1157,node_to_str:1158,node_util:1159,nodedistit:1140,nodedistitem:1139,nodedistnest:1141,nodemapp:1143,nodemappermultiproc:1144,norm:[1229,1274],num_arrays_in_memori:1041,num_arrays_on_dev:940,num_cpu_cor:941,num_gpu:[125,942,1160],numpi:383,nutshel:1243,one_hot:[151,457,585,734,1042],ones:[78,206,387,508,635,830,1043],ones_lik:[152,325,458,586,735,1044],oper:[1,3,7,9,11,13,43,112,113,115,116,117,118,236,237,239,240,241,242,422,423,425,426,427,428,542,543,545,546,548,549,670,671,673,674,676,677],optim:[1276,1280],optimizer_upd:1086,overview:1243,param:1241,percent_used_mem_on_dev:943,percent_used_mem_on_nod:1161,pinv:[350,769,1104],portabl:1289,print_all_arrays_in_memori:1045,print_all_arrays_on_dev:944,profil:[121,284,431,552,680,919,1145],pull:43,queue_timeout:1046,randint:[175,360,614,793,1189],random:[36,173,358,482,612,791,1187],random_crop:1097,random_norm:[176,361,615,794,1190],random_uniform:[177,362,616,795,1191],reduce_max:[182,365,486,619,800,1196],reduce_mean:[183,366,487,620,801,1197],reduce_min:[184,367,488,621,802,1198],reduce_prod:[185,368,489,622,803,1199],reduce_std:[369,1200],reduce_sum:[186,370,490,623,804,1201],reduce_var:[187,371,491,624,805,1202],reduct:[38,180,363,484,617,798,1194],reflect:[13,118,242,428,549,677],relu:[810,1207],repeat:[326,736,1047],reptile_step:1130,request:43,reshap:[737,1048],robot:57,round:[327,738,1049],run:1286,scaled_dot_product_attent:1224,scatter_flat:[153,328,459,587,739,1050],scatter_nd:[154,329,460,588,740,1051],search:[102,226,412,532,660,854],seed:[178,796,1192],sequenti:[1282,1283],set:[103,227,413,533,661,855],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:945,set_default_dtyp:971,set_default_float_dtyp:972,set_default_int_dtyp:973,set_default_nod:1162,set_exception_debug_mod:48,set_framework:65,set_min_bas:1052,set_min_denomin:1053,set_nest_at_index:1185,set_nest_at_indic:1186,set_queue_timeout:1054,set_split_factor:[946,1163],set_tmp_dir:1055,set_with_grad:1087,sgd:1281,shape:[741,1056],shape_to_tupl:1057,show_graph:1233,shuffl:[179,797,1193],sigmoid:[811,1208],signatur:[96,220,406,526,654,848],sin:[787,1123],sinh:[788,1124],siren:1257,softmax:[190,495,812,1209],softplu:[813,1210],sort:[104,228,414,534,662,856],sparse_cross_entropi:1228,split:[155,330,461,589,742,1058],split_factor:[947,1164],split_func_cal:[948,1165],sqrt:[95,219,405,525,653,847],squeez:[156,331,462,590,743,1059],stable_divid:1060,stable_pow:1061,stack:[332,744,1062],stack_imag:[166,347,474,604,764,1098],standard:43,statist:[106,230,416,536,664,858],stop_gradi:[342,469,599,758,1088],str_to_nod:1166,submodul:43,supports_inplac:1063,svd:[352,608,771,1106],swapax:[591,745,1064],tan:[789,1125],tanh:[790,814,1126,1211],tensorflow:504,tile:[333,592,746,1065],tmp_dir:1066,to_dev:[126,288,556,685,949],to_ivi:18,to_ivy_modul:[193,817,1250],to_list:[747,1067],to_n:19,to_nod:1167,to_numpi:[748,1068],to_scalar:[749,1069],torch:631,total_mem_on_dev:950,total_mem_on_nod:1168,tpu_is_avail:[557,686,951,1169],train:1285,trainabl:1285,transpos:[157,334,463,750,1070],tree:1243,try_else_non:1071,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,208,212,389,393,510,514,637,641,832,835],uint8_img_to_float_img:1099,unifi:1170,unify_arrai:1171,unify_it:1172,unify_nest:1173,unset_debug_mod:49,unset_default_devic:952,unset_default_dtyp:974,unset_default_float_dtyp:975,unset_default_int_dtyp:976,unset_framework:71,unset_with_grad:1089,unstack:[158,335,464,593,751,1072],updat:43,used_mem_on_dev:953,used_mem_on_nod:1174,util:[107,231,417,537,665,859],valid_dtyp:977,value_is_nan:1073,variabl:[343,470,600,759,1090],variable_data:[760,1091],vector_norm:[99,223,409,529,657,851],vector_to_skew_symmetric_matrix:[170,353,478,609,772,1107],verbos:1287,vision:58,where:[336,752,1074,1243],why:1289,with_grad:1092,wrapper:72,write:1286,your:43,zero:[79,207,388,509,636,831,1259],zero_pad:[337,594,753,1075],zeros_lik:[159,338,465,595,754,1076]}})