Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/floor_divide","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/floor_divide","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/floor_divide","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/floor_divide","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/floor_divide","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/floor_divide.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/floor_divide.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/floor_divide.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/floor_divide.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/floor_divide.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[804,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[353,0,0,"-"],creation_functions:[354,0,0,"-"],data_type_functions:[360,0,0,"-"],data_types:[364,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[355,2,1,""],ones:[356,2,1,""],ones_like:[357,2,1,""],tril:[358,2,1,""],zeros:[359,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[360,1,1,""],finfo:[362,2,1,""],iinfo:[363,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[360,3,1,""],bits:[360,3,1,""],eps:[360,3,1,""],max:[360,3,1,""],min:[360,3,1,""],smallest_normal:[360,3,1,""]},"ivy.functional.backends.numpy.core":{device:[408,0,0,"-"],general:[410,0,0,"-"],gradients:[442,0,0,"-"],image:[447,0,0,"-"],linear_algebra:[451,0,0,"-"],logic:[455,0,0,"-"],math:[456,0,0,"-"],random:[458,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[409,1,1,""],clear_mem_on_dev:[408,2,1,""],dev:[408,2,1,""],dev_from_str:[408,2,1,""],dev_to_str:[408,2,1,""],gpu_is_available:[408,2,1,""],num_gpus:[408,2,1,""],to_dev:[408,2,1,""],tpu_is_available:[408,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[409,3,1,""],start:[409,3,1,""],stop:[409,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[410,2,1,""],arange:[411,2,1,""],argmin:[412,2,1,""],array:[413,2,1,""],asarray:[410,2,1,""],astype:[410,2,1,""],cast:[414,2,1,""],clip:[410,2,1,""],compile:[415,2,1,""],concatenate:[416,2,1,""],constant_pad:[410,2,1,""],container_types:[410,2,1,""],copy_array:[410,2,1,""],cumprod:[417,2,1,""],current_framework_str:[410,2,1,""],dtype:[418,2,1,""],dtype_bits:[419,2,1,""],dtype_from_str:[420,2,1,""],dtype_to_str:[421,2,1,""],full:[422,2,1,""],gather:[423,2,1,""],gather_nd:[424,2,1,""],get_num_dims:[410,2,1,""],identity:[425,2,1,""],indices_where:[426,2,1,""],inplace_arrays_supported:[410,2,1,""],inplace_decrement:[427,2,1,""],inplace_increment:[428,2,1,""],inplace_update:[429,2,1,""],inplace_variables_supported:[410,2,1,""],is_array:[430,2,1,""],linear_resample:[431,2,1,""],linspace:[432,2,1,""],logspace:[433,2,1,""],meshgrid:[410,2,1,""],multiprocessing:[410,2,1,""],one_hot:[434,2,1,""],round:[410,2,1,""],scatter_flat:[435,2,1,""],scatter_nd:[436,2,1,""],shape:[410,2,1,""],split:[437,2,1,""],squeeze:[438,2,1,""],to_list:[410,2,1,""],to_numpy:[410,2,1,""],to_scalar:[410,2,1,""],transpose:[439,2,1,""],unstack:[440,2,1,""],where:[410,2,1,""],zero_pad:[410,2,1,""],zeros_like:[441,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[443,2,1,""],is_variable:[444,2,1,""],stop_gradient:[445,2,1,""],variable:[446,2,1,""],variable_data:[442,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[448,2,1,""],gradient_image:[449,2,1,""],stack_images:[450,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[452,2,1,""],qr:[453,2,1,""],vector_to_skew_symmetric_matrix:[454,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[457,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[459,2,1,""],randint:[458,2,1,""],random_normal:[458,2,1,""],random_uniform:[458,2,1,""],seed:[458,2,1,""],shuffle:[458,2,1,""]},"ivy.functional.ivy":{array_api:[805,0,0,"-"],core:[858,0,0,"-"],nn:[1150,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[806,0,0,"-"],creation_functions:[807,0,0,"-"],data_type_functions:[813,0,0,"-"],data_types:[816,0,0,"-"],elementwise_functions:[817,0,0,"-"],function_and_method_signatures:[839,0,0,"-"],linear_algebra:[840,0,0,"-"],manipulation_functions:[846,0,0,"-"],searching_functions:[848,0,0,"-"],set_functions:[850,0,0,"-"],sorting_functions:[851,0,0,"-"],statistical_functions:[853,0,0,"-"],utility_functions:[855,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[806,4,1,""],nan:[806,4,1,""],pi:[806,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[808,2,1,""],ones:[809,2,1,""],ones_like:[810,2,1,""],tril:[811,2,1,""],zeros:[812,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[814,2,1,""],iinfo:[815,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[818,2,1,""],asinh:[819,2,1,""],bitwise_and:[820,2,1,""],ceil:[821,2,1,""],cos:[822,2,1,""],cosh:[823,2,1,""],floor_divide:[824,2,1,""],isfinite:[825,2,1,""],isnan:[826,2,1,""],less:[827,2,1,""],less_equal:[828,2,1,""],log10:[829,2,1,""],log1p:[830,2,1,""],log2:[831,2,1,""],logical_not:[832,2,1,""],logical_or:[833,2,1,""],negative:[834,2,1,""],sin:[835,2,1,""],sinh:[836,2,1,""],sqrt:[837,2,1,""],tanh:[838,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[841,2,1,""],matmul:[842,2,1,""],slodget:[843,2,1,""],svd:[844,2,1,""],vector_norm:[845,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[847,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[849,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[852,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[854,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[856,2,1,""],any:[857,2,1,""]},"ivy.functional.ivy.core":{compilation:[859,0,0,"-"],device:[861,0,0,"-"],dtype:[911,0,0,"-"],general:[935,0,0,"-"],gradients:[1028,0,0,"-"],image:[1044,0,0,"-"],linalg:[1051,0,0,"-"],logic:[1058,0,0,"-"],math:[1061,0,0,"-"],meta:[1074,0,0,"-"],multi_node:[1078,0,0,"-"],nest:[1122,0,0,"-"],random:[1134,0,0,"-"],reductions:[1141,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[860,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[861,1,1,""],DevClonedItem:[863,1,1,""],DevClonedIter:[864,1,1,""],DevClonedNest:[865,1,1,""],DevDistItem:[866,1,1,""],DevDistIter:[867,1,1,""],DevDistNest:[868,1,1,""],DevManager:[861,1,1,""],DevMapper:[870,1,1,""],DevMapperMultiProc:[871,1,1,""],MultiDev:[861,1,1,""],MultiDevItem:[873,1,1,""],MultiDevIter:[874,1,1,""],MultiDevNest:[875,1,1,""],Profiler:[876,1,1,""],clear_mem_on_dev:[877,2,1,""],default_device:[878,2,1,""],dev:[879,2,1,""],dev_clone:[880,2,1,""],dev_clone_array:[881,2,1,""],dev_clone_iter:[882,2,1,""],dev_clone_nest:[883,2,1,""],dev_dist:[884,2,1,""],dev_dist_array:[885,2,1,""],dev_dist_iter:[886,2,1,""],dev_dist_nest:[887,2,1,""],dev_from_str:[888,2,1,""],dev_to_str:[889,2,1,""],dev_unify:[890,2,1,""],dev_unify_array:[891,2,1,""],dev_unify_iter:[892,2,1,""],dev_unify_nest:[893,2,1,""],dev_util:[894,2,1,""],get_all_arrays_on_dev:[895,2,1,""],gpu_is_available:[896,2,1,""],num_arrays_on_dev:[897,2,1,""],num_cpu_cores:[898,2,1,""],num_gpus:[899,2,1,""],percent_used_mem_on_dev:[900,2,1,""],print_all_arrays_on_dev:[901,2,1,""],set_default_device:[902,2,1,""],set_split_factor:[903,2,1,""],split_factor:[904,2,1,""],split_func_call:[905,2,1,""],to_dev:[906,2,1,""],total_mem_on_dev:[907,2,1,""],tpu_is_available:[908,2,1,""],unset_default_device:[909,2,1,""],used_mem_on_dev:[910,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[861,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[861,3,1,""],da_tune_step:[861,3,1,""],dim_size:[861,3,1,""],ds_tune_step:[861,3,1,""],map:[861,3,1,""],repeated_config_check:[861,3,1,""],tune_step:[861,3,1,""],tuned:[861,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[870,3,1,""],map:[870,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[871,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[861,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[873,3,1,""],items:[873,3,1,""],keys:[873,3,1,""],shape:[873,3,1,""],values:[873,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[874,3,1,""],at_dev:[874,3,1,""],at_devs:[874,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[875,3,1,""],at_dev:[875,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[876,3,1,""],start:[876,3,1,""],stop:[876,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[911,1,1,""],DefaultFloatDtype:[911,1,1,""],DefaultIntDtype:[911,1,1,""],astype:[911,2,1,""],cast:[915,2,1,""],closest_valid_dtype:[916,2,1,""],convert_dtype:[917,2,1,""],default_dtype:[918,2,1,""],default_float_dtype:[919,2,1,""],default_int_dtype:[920,2,1,""],dtype:[921,2,1,""],dtype_bits:[922,2,1,""],dtype_from_str:[923,2,1,""],dtype_to_str:[924,2,1,""],invalid_dtype:[925,2,1,""],is_float_dtype:[926,2,1,""],is_int_dtype:[927,2,1,""],set_default_dtype:[928,2,1,""],set_default_float_dtype:[929,2,1,""],set_default_int_dtype:[930,2,1,""],unset_default_dtype:[931,2,1,""],unset_default_float_dtype:[932,2,1,""],unset_default_int_dtype:[933,2,1,""],valid_dtype:[934,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[911,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[911,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[911,3,1,""]},"ivy.functional.ivy.core.general":{"default":[958,2,1,""],abs:[936,2,1,""],all_equal:[937,2,1,""],arange:[938,2,1,""],arg_names:[939,2,1,""],argmin:[940,2,1,""],array:[941,2,1,""],array_equal:[942,2,1,""],arrays_equal:[943,2,1,""],asarray:[935,2,1,""],assert_supports_inplace:[944,2,1,""],broadcast_to:[945,2,1,""],cache_fn:[946,2,1,""],clip:[947,2,1,""],clip_matrix_norm:[948,2,1,""],clip_vector_norm:[949,2,1,""],concatenate:[950,2,1,""],constant_pad:[951,2,1,""],container_types:[952,2,1,""],copy_array:[953,2,1,""],cross:[954,2,1,""],cumprod:[955,2,1,""],cumsum:[956,2,1,""],current_framework_str:[957,2,1,""],einops_rearrange:[959,2,1,""],einops_reduce:[960,2,1,""],einops_repeat:[961,2,1,""],equal:[962,2,1,""],exists:[963,2,1,""],expand_dims:[964,2,1,""],fourier_encode:[965,2,1,""],full:[966,2,1,""],gather:[967,2,1,""],gather_nd:[968,2,1,""],get_all_arrays_in_memory:[969,2,1,""],get_min_base:[970,2,1,""],get_min_denominator:[971,2,1,""],get_num_dims:[972,2,1,""],get_referrers_recursive:[973,2,1,""],has_nans:[974,2,1,""],identity:[975,2,1,""],indices_where:[976,2,1,""],inplace_arrays_supported:[977,2,1,""],inplace_decrement:[978,2,1,""],inplace_increment:[979,2,1,""],inplace_update:[980,2,1,""],inplace_variables_supported:[981,2,1,""],is_array:[982,2,1,""],isinf:[983,2,1,""],linear_resample:[984,2,1,""],linspace:[985,2,1,""],logspace:[986,2,1,""],match_kwargs:[987,2,1,""],matmul:[988,2,1,""],maximum:[989,2,1,""],meshgrid:[990,2,1,""],minimum:[991,2,1,""],multiprocessing:[992,2,1,""],num_arrays_in_memory:[993,2,1,""],one_hot:[994,2,1,""],ones:[995,2,1,""],print_all_arrays_in_memory:[996,2,1,""],queue_timeout:[997,2,1,""],repeat:[998,2,1,""],reshape:[999,2,1,""],round:[1000,2,1,""],scatter_flat:[1001,2,1,""],scatter_nd:[1002,2,1,""],set_min_base:[1003,2,1,""],set_min_denominator:[1004,2,1,""],set_queue_timeout:[1005,2,1,""],set_tmp_dir:[1006,2,1,""],shape:[1007,2,1,""],shape_to_tuple:[1008,2,1,""],split:[1009,2,1,""],squeeze:[1010,2,1,""],stable_divide:[1011,2,1,""],stable_pow:[1012,2,1,""],stack:[1013,2,1,""],supports_inplace:[1014,2,1,""],swapaxes:[1015,2,1,""],tile:[1016,2,1,""],tmp_dir:[1017,2,1,""],to_list:[1018,2,1,""],to_numpy:[1019,2,1,""],to_scalar:[1020,2,1,""],transpose:[1021,2,1,""],try_else_none:[1022,2,1,""],unstack:[1023,2,1,""],value_is_nan:[1024,2,1,""],where:[1025,2,1,""],zero_pad:[1026,2,1,""],zeros_like:[1027,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1028,1,1,""],adam_step:[1030,2,1,""],adam_update:[1031,2,1,""],execute_with_gradients:[1032,2,1,""],gradient_descent_update:[1033,2,1,""],is_variable:[1034,2,1,""],lamb_update:[1035,2,1,""],lars_update:[1036,2,1,""],optimizer_update:[1037,2,1,""],set_with_grads:[1038,2,1,""],stop_gradient:[1039,2,1,""],unset_with_grads:[1040,2,1,""],variable:[1041,2,1,""],variable_data:[1042,2,1,""],with_grads:[1043,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1028,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1045,2,1,""],float_img_to_uint8_img:[1046,2,1,""],gradient_image:[1047,2,1,""],random_crop:[1048,2,1,""],stack_images:[1049,2,1,""],uint8_img_to_float_img:[1050,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1052,2,1,""],inv:[1053,2,1,""],matrix_norm:[1054,2,1,""],pinv:[1055,2,1,""],qr:[1056,2,1,""],vector_to_skew_symmetric_matrix:[1057,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1059,2,1,""],logical_or:[1060,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1062,2,1,""],asin:[1063,2,1,""],atan2:[1065,2,1,""],atan:[1064,2,1,""],atanh:[1066,2,1,""],cosh:[1067,2,1,""],divide:[1068,2,1,""],erf:[1069,2,1,""],exp:[1070,2,1,""],log:[1071,2,1,""],tan:[1072,2,1,""],tanh:[1073,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1075,2,1,""],maml_step:[1076,2,1,""],reptile_step:[1077,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1078,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1123,2,1,""],copy_nest:[1124,2,1,""],index_nest:[1125,2,1,""],map:[1126,2,1,""],map_nest_at_index:[1127,2,1,""],map_nest_at_indices:[1128,2,1,""],multi_index_nest:[1129,2,1,""],nested_indices_where:[1130,2,1,""],nested_map:[1131,2,1,""],set_nest_at_index:[1132,2,1,""],set_nest_at_indices:[1133,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1135,2,1,""],randint:[1136,2,1,""],random_normal:[1137,2,1,""],random_uniform:[1138,2,1,""],seed:[1139,2,1,""],shuffle:[1140,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1142,2,1,""],reduce_max:[1143,2,1,""],reduce_mean:[1144,2,1,""],reduce_min:[1145,2,1,""],reduce_prod:[1146,2,1,""],reduce_std:[1147,2,1,""],reduce_sum:[1148,2,1,""],reduce_var:[1149,2,1,""]},"ivy.functional.ivy.nn":{activations:[1151,0,0,"-"],layers:[1159,0,0,"-"],losses:[1172,0,0,"-"],norms:[1176,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1152,2,1,""],leaky_relu:[1153,2,1,""],relu:[1154,2,1,""],sigmoid:[1155,2,1,""],softmax:[1156,2,1,""],softplus:[1157,2,1,""],tanh:[1158,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1160,2,1,""],conv1d_transpose:[1161,2,1,""],conv2d:[1162,2,1,""],conv2d_transpose:[1163,2,1,""],conv3d:[1164,2,1,""],conv3d_transpose:[1165,2,1,""],depthwise_conv2d:[1166,2,1,""],dropout:[1167,2,1,""],linear:[1168,2,1,""],lstm_update:[1169,2,1,""],multi_head_attention:[1170,2,1,""],scaled_dot_product_attention:[1171,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1173,2,1,""],cross_entropy:[1174,2,1,""],sparse_cross_entropy:[1175,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1177,2,1,""]},"ivy.stateful":{activations:[1181,0,0,"-"],converters:[1184,0,0,"-"],initializers:[1186,0,0,"-"],layers:[1195,0,0,"-"],module:[1207,0,0,"-"],norms:[1209,0,0,"-"],optimizers:[1211,0,0,"-"],sequential:[1217,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1182,1,1,""],GELU:[1183,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1182,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1183,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1185,2,1,""]},"ivy.stateful.initializers":{Constant:[1186,1,1,""],FirstLayerSiren:[1188,1,1,""],GlorotUniform:[1189,1,1,""],KaimingNormal:[1186,1,1,""],Ones:[1191,1,1,""],Siren:[1192,1,1,""],Uniform:[1186,1,1,""],Zeros:[1194,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1191,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1194,3,1,""]},"ivy.stateful.layers":{Conv1D:[1196,1,1,""],Conv1DTranspose:[1197,1,1,""],Conv2D:[1198,1,1,""],Conv2DTranspose:[1199,1,1,""],Conv3D:[1200,1,1,""],Conv3DTranspose:[1201,1,1,""],DepthwiseConv2D:[1202,1,1,""],Dropout:[1203,1,1,""],LSTM:[1204,1,1,""],Linear:[1205,1,1,""],MultiHeadAttention:[1206,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1201,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1203,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1204,3,1,""],get_initial_state:[1204,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1205,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1206,3,1,""]},"ivy.stateful.module":{Module:[1208,1,1,""]},"ivy.stateful.module.Module":{__init__:[1208,3,1,""],build:[1208,3,1,""],build_mode:[1208,3,1,""],built:[1208,3,1,""],check_submod_rets:[1208,3,1,""],get_mod_key:[1208,3,1,""],mod_depth:[1208,3,1,""],mod_height:[1208,3,1,""],mod_with_top_mod_key_chain:[1208,3,1,""],save_weights:[1208,3,1,""],show_mod_in_top_mod:[1208,3,1,""],show_structure:[1208,3,1,""],show_v_in_top_v:[1208,3,1,""],sub_mods:[1208,3,1,""],track_submod_call_order:[1208,3,1,""],track_submod_rets:[1208,3,1,""],v_with_top_v_key_chains:[1208,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1210,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1210,3,1,""]},"ivy.stateful.optimizers":{Adam:[1212,1,1,""],LAMB:[1213,1,1,""],LARS:[1214,1,1,""],Optimizer:[1215,1,1,""],SGD:[1216,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],step:[1215,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],state:[1216,3,1,""]},"ivy.stateful.sequential":{Sequential:[1218,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1218,3,1,""]},"ivy.verbosity":{cprint:[1223,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1222,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1211,1212,1213],"02886":1178,"100":[1078,1178,1220],"141592653589793":806,"2021":1178,"2102":1178,"360":[1061,1072],"718281828459045":806,"754":[806,813,814,817,837],"999":[1028,1030,1031,1035,1211,1212,1213],"abstract":[861,876,1178,1211,1215],"boolean":[40,41,817,820,832,833,861,896,908,911,925,934,935,937,942,943,974,976,977,981,982,983,1014,1024,1028,1034,1058,1059,1060,1074,1075,1076,1078],"break":43,"case":[15,18,19,40,41,42,43,817,818,819,821,822,823,829,831,835,836,837,861,900,907,910,935,938,999,1001,1002,1051,1054,1056,1078,1122,1125,1129,1178,1195,1206,1207,1208,1211,1215,1224],"catch":[935,958],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,360,408,409,813,815,861,863,864,865,866,867,868,870,871,873,874,875,876,888,889,911,935,939,987,1028,1042,1078,1122,1124,1131,1172,1174,1175,1178,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],"default":[15,18,19,40,41,42,43,807,808,809,810,811,812,840,841,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,870,871,878,879,883,884,885,886,887,890,891,892,893,900,903,904,905,910,911,918,919,920,921,935,937,938,940,948,949,950,951,954,955,956,965,966,967,972,974,975,984,986,987,990,992,995,997,998,1001,1002,1005,1007,1009,1011,1012,1021,1023,1024,1028,1031,1033,1034,1035,1036,1037,1039,1043,1051,1054,1056,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1134,1135,1137,1138,1141,1143,1144,1145,1146,1147,1148,1149,1151,1152,1156,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],"final":[40,41,43,935,965,985,986,1078,1195,1206,1221],"float":[40,41,42,806,807,808,809,812,813,814,817,818,819,821,822,823,829,831,835,836,837,838,840,845,861,870,871,894,900,903,907,910,911,919,926,935,938,948,949,951,965,966,970,971,986,1003,1004,1005,1011,1012,1028,1030,1031,1033,1035,1036,1037,1044,1046,1050,1061,1068,1074,1075,1076,1077,1078,1134,1137,1138,1151,1153,1159,1167,1170,1171,1172,1173,1174,1175,1176,1177,1195,1203,1206,1209,1210,1211,1212,1213,1214,1215,1216],"function":[15,40,41,43,355,356,357,358,359,362,363,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,806,808,809,810,811,812,814,815,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,849,852,854,856,857,859,860,861,863,864,865,866,867,868,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1181,1182,1183,1211,1214,1215,1216,1220,1221,1224],"import":[43,1178,1221,1224],"int":[40,41,42,43,354,355,356,358,359,458,807,808,809,811,812,813,814,815,840,841,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,883,884,885,886,887,890,891,892,893,898,899,905,911,920,922,927,935,940,945,950,951,955,956,959,960,961,964,965,966,967,972,975,984,985,986,994,995,998,999,1001,1002,1007,1008,1009,1010,1013,1015,1016,1021,1023,1026,1028,1030,1031,1035,1044,1048,1049,1051,1054,1074,1075,1076,1077,1078,1122,1131,1134,1135,1136,1138,1139,1141,1143,1144,1145,1146,1147,1148,1149,1151,1156,1159,1160,1161,1162,1163,1164,1165,1166,1170,1172,1174,1175,1176,1177,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1209,1210],"long":[43,1159,1169],"new":[40,41,43,458,807,808,809,810,812,817,830,911,915,935,936,945,959,960,961,964,965,966,967,968,995,999,1001,1002,1003,1004,1011,1012,1013,1028,1031,1033,1035,1036,1037,1044,1046,1048,1050,1061,1066,1067,1073,1078,1122,1132,1133,1134,1135,1176,1177,1178,1184,1185,1195,1205,1209,1210,1211,1212,1213,1214,1215,1216,1221,1224],"public":[935,952],"return":[15,16,17,18,19,40,41,42,43,458,807,808,809,810,811,812,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,837,838,840,841,843,844,845,848,849,851,852,853,854,855,856,857,859,860,861,870,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,896,897,899,900,904,905,906,907,908,910,911,915,916,917,918,919,920,921,922,923,924,925,926,927,934,935,936,937,938,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,998,999,1000,1001,1002,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1184,1185,1195,1204,1205,1211,1215,1220,1221,1224],"short":[43,1159,1169,1178,1224],"static":[40,41,859,860],"super":1078,"true":[40,41,42,410,415,442,445,458,459,817,825,826,832,833,840,844,845,848,849,851,852,855,856,857,859,860,861,935,937,944,946,963,965,974,976,1024,1025,1028,1031,1033,1034,1035,1036,1037,1039,1051,1054,1074,1075,1076,1077,1078,1122,1123,1130,1134,1135,1141,1143,1144,1145,1146,1147,1148,1149,1151,1152,1159,1167,1172,1173,1174,1175,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],"try":[40,41,935,1022,1078],"var":[40,41,1074,1075,1076,1224],"while":[40,41,42,817,832,833,1078],AND:[817,820,855,856,1058,1059],But:1224,For:[43,817,818,819,821,822,823,829,831,835,836,837,935,938,947,1013,1028,1034,1042,1051,1056,1061,1062,1178,1184,1185,1221,1224],Its:[1061,1064],NOT:[817,832],Not:806,One:[40,41,43,935,960,999,1134,1136,1224],Ones:[1178,1186],PRs:43,Such:[935,952],That:1221,The:[15,16,17,18,19,40,41,42,43,807,811,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,835,836,837,838,840,841,843,844,845,846,847,851,852,855,856,857,859,860,861,870,871,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,900,903,904,905,906,907,910,911,915,916,917,922,923,924,925,934,935,938,941,942,945,946,948,949,950,951,953,954,957,958,962,965,967,968,975,978,979,980,982,984,986,988,990,992,995,998,999,1001,1002,1003,1004,1005,1008,1009,1010,1011,1012,1013,1016,1024,1027,1028,1030,1031,1033,1035,1036,1037,1039,1042,1044,1046,1048,1050,1051,1054,1056,1061,1062,1063,1064,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1221,1224],There:[43,1178,1221],These:[43,1178],Use:43,Used:[1122,1123,1130,1207,1208],Using:[1178,1179,1224],With:[40,41,848,849,1051,1054,1141,1143,1144,1145,1146,1147,1148,1149,1178,1220,1224],__array__:[935,941],__call__:[1195,1206,1207,1208],__del__:1078,__dict__:[1078,1221],__enter__:1078,__exit__:1078,__getitem__:1078,__getstate__:1078,__init__:[40,41,42,43,59,60,84,221,360,361,408,409,490,622,861,862,869,870,871,872,873,874,875,876,911,912,913,914,1028,1029,1078,1082,1089,1178,1181,1182,1183,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],__iter__:1078,__len__:1078,__next__:1078,__repr__:1078,_assign_vari:1220,_axi:1078,_base:[1122,1123,1130],_compute_node_da_ratio:1078,_compute_node_strs_da:1078,_concat_unify_arrai:1078,_counter:1078,_cur_framework:[43,1078],_da_direct:1078,_da_directions_flip:1078,_da_step_tim:1078,_da_tim:1078,_da_tune_count:1078,_data:1078,_delta_da_dim_s:1078,_delta_sf:1078,_dict:1078,_dim_siz:1078,_first_da_tune_step:1078,_first_ns_tune_step:1078,_fn:1078,_forward:[1178,1220],_get_kalman_param:1224,_get_prior:1224,_get_some_model:1224,_index:[1122,1123,1130],_input_queu:1078,_length:1078,_max_depth:1078,_max_node_dim_step_ratio:1078,_max_node_dim_step_s:1078,_max_split_factor_step_s:1078,_mean_unify_arrai:1078,_min_bas:[935,1012,1176,1177,1209,1210],_min_denomin:[935,1011],_min_node_dim_s:1078,_min_sf_tune_step:1078,_min_unit_node_tune_step:1078,_model:1224,_node_mapp:1078,_node_percent_mem:1078,_node_str:1078,_node_str_da_ratio:1078,_node_strs_da:1078,_node_strs_kei:1078,_node_strs_n:1078,_node_util:1078,_ns_step_tim:1078,_ns_time:1078,_ns_tune_count:1078,_num_nod:1078,_num_work:1078,_observed_config:1078,_output_queu:1078,_paramet:1220,_percent_mem_inc_per_sf:1078,_percent_mem_inc_per_unit_da_dim:1078,_percent_util_inc_per_unit_da_dim:1078,_ret_fn:1078,_safety_factor:1078,_save_dir:1078,_shift_da_split:1078,_shift_n:1078,_slice:1078,_step:[1211,1215],_sum_unify_arrai:1078,_timeout:1078,_tune:1078,_tune_da:1078,_tune_n:1078,_tune_step:1078,_unit_da_tune_count:1078,_unroll_step:1224,_with_node_mappig:1078,_worker:1078,_worker_class:1078,_worker_fn:1078,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,861,870,876,1078,1207,1208,1211,1215],abil:1178,abl:[40,41],about:[813,814,815],abov:[43,807,811,840,841,1134,1136],above_height:[40,41],abs:[262,410,544,677,840,845,935,1078],absolut:[40,41,840,843,935,936],abstractmethod:1078,accept:[15,43,817,832,833,1178],access:[40,41,43,1221],accord:[40,41,813,814,935,951,967,1001,1002,1021,1026],accordingli:[840,845,855,856,857],accur:[59,360,408,409,861,873,874,875,876,911,1028,1186,1188,1189,1191,1192,1194],aco:[758,1061],acosh:[88,225,365,494,626,817],across:[40,41,861,870,871,880,881,883,884,885,886,887,893,903,904,935,940,942,943,1078,1122,1126],act:43,activ:[1152,1153,1154,1155,1156,1157,1158,1178,1182,1183],actual:1221,adam:[1028,1030,1031,1035,1178,1211,1213,1220],adam_step:1028,adam_upd:1028,adapt:[1028,1036,1211,1214],add:[40,41,43,1078,1172,1173,1174,1175,1176,1177,1178,1209,1210,1221],added:[43,935,1011,1012,1217,1218],adding:[43,935,945],addit:[40,41,43,935,959,960,961,1176,1177,1195,1205],addition:43,address:43,adher:43,adjac:[935,938],adopt:[43,935,952],affect:[935,938],affin:[1209,1210],after:[817,837,935,984,1028,1031,1032,1033,1035,1036,1037,1044,1045,1176,1177,1211,1212,1213,1214,1215,1216,1224],after_1:[935,951,1026],after_n:[935,951,1026],again:43,against:[40,41,840,842,848,849,1051,1054,1141,1143,1144,1145,1146,1147,1148,1149],agnost:[43,1178,1220,1221],aim:1224,algebra:1051,algorithm:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202,1224],align:[40,41,43,935,945],aliv:[861,895,897,901,935,969,993,996],all:[15,16,17,18,19,40,41,43,127,252,404,533,665,807,811,840,845,846,847,855,859,860,861,870,895,901,935,936,937,942,943,952,969,975,996,1010,1051,1056,1074,1075,1076,1077,1078,1122,1123,1124,1130,1131,1134,1135,1138,1141,1143,1144,1145,1146,1147,1148,1149,1159,1169,1178,1221,1224],all_depth:[40,41],all_equ:935,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1122,all_tru:[40,41],alloc:[43,807,811,861,1078],allow:[935,985,986,987,1207,1208],allow_dupl:[935,987],alon:[861,900,910,1078,1178],along:[40,41,43,458,840,845,846,847,848,849,851,852,853,854,855,856,857,861,884,885,886,887,890,891,892,893,905,935,950,955,956,967,984,985,986,998,1009,1013,1016,1023,1051,1054,1074,1075,1076,1077,1078,1134,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149],alongsid:[1220,1221],alpha:[1151,1153],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,817,821,861,1078],also:[40,41,43,935,938,1028,1031,1074,1075,1076,1077,1122,1123,1124,1130,1131,1159,1168,1178,1195,1205,1220],altern:1220,alwai:[40,41,43,1028,1034,1039],among:[40,41],amount:[861,907,1078,1178],angl:[817,823,836,838,1061,1062,1065],ani:[15,16,17,18,19,40,41,43,127,252,404,533,665,817,828,855,859,860,861,863,866,870,871,873,882,883,886,887,892,935,937,938,941,958,959,960,961,962,963,974,982,987,1011,1012,1028,1032,1078,1122,1123,1126,1130,1131,1132,1133,1134,1138,1178,1184,1185,1207,1208,1220,1221,1224],anoth:[40,41,43,911,917,1178],another_backend:43,anyth:[43,1224],anywai:43,apart:43,api:[1178,1179],appear:[43,935,964],append:[40,41,840,841,842,1078],appli:[15,18,19,40,41,840,844,935,959,960,961,1028,1035,1036,1058,1059,1060,1074,1075,1076,1122,1126,1129,1131,1151,1152,1153,1154,1155,1156,1157,1158,1159,1168,1170,1171,1176,1177,1178,1181,1182,1183,1209,1210],applic:[1122,1126,1131,1159,1170,1171,1178,1224],appropri:[848,849],approxim:[817,818,819,822,823,829,830,831,835,836,838,1151,1152],arang:[138,262,410,458,544,677,935,985,986],arbitrari:[40,41,861,890,891,893,1078],arc:[1061,1065],arcco:[1061,1062],arctan:[1061,1064],area:[817,818,819,1178],arg:[15,16,17,40,41,43,59,63,861,870,883,887,893,905,935,959,960,961,1002,1078,1184,1185,1207,1208],arg_nam:935,arg_stateful_idx:[1207,1208],argmax:[120,246,397,526,658,848],argmin:[138,410,544,677,935],args_clon:1078,args_dist:1078,args_to_ivi:[15,1178],args_to_n:[15,1178],args_uni:1078,argsort:[123,249,400,529,661,851],argument:[15,16,17,18,19,40,41,42,43,59,63,859,860,861,870,871,883,887,893,935,938,939,946,958,987,1002,1061,1062,1078,1122,1126,1184,1185,1207,1208],aris:[1178,1224],arithmet:[1141,1144,1147,1149],arithmetic_oper:[0,1,2],around:[40,41,42],arr:458,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,262,410,458,544,677,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,861,879,880,881,884,885,886,887,890,891,892,893,895,897,901,905,906,911,915,921,926,927,935,936,937,938,940,942,943,944,945,947,948,949,950,951,953,954,955,956,959,960,961,962,964,965,966,967,968,969,972,974,975,976,977,978,979,980,982,983,984,985,986,988,989,990,991,993,994,995,996,998,999,1000,1001,1002,1007,1009,1010,1013,1014,1015,1016,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1030,1031,1034,1035,1039,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1078,1122,1124,1131,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1195,1203,1204,1206,1211,1215,1220,1221],arrang:[935,959],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,354,355,356,357,358,359,360,362,363,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857],array_api_methods_to_test:43,array_equ:[262,677,935],array_lik:[458,935,941],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,935],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1178],arraywithgener:[22,1178],arraywithgradi:[24,1178],arraywithimag:[26,1178],arraywithlinalg:[28,1178],arraywithlog:[30,1178],arraywithmath:[32,1178],arraywithmeta:[34,1178],arraywithrandom:[36,1178],arraywithreduct:[38,1178],arriv:[40,41,42],articl:1178,arxiv:1178,as_arrai:[40,41,935,972,1007],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[408,410,418,861,879,911,918,919,920,921],as_tensor:410,as_vari:[40,41],as_zero:[40,41],asarrai:[410,935],ascend:[851,852],asin:[758,1061],asinh:[88,365,494,626,817],aspect:[1044,1049],assert:[40,41,935,944,1078],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:935,associ:[43,1051,1057],assum:[817,822,835,1221,1224],astyp:[410,911],asynchron:[40,41,42],at_dev:[40,42,861,874,875],at_kei:[40,41],at_key_chain:[40,41],at_nod:1078,atan2:[758,1061],atan:[758,1061],atanh:[758,1061],attent:[43,1159,1170,1171,1195,1206],attribut:[0,6,40,41,813,814,815,935,1027],audienc:[1178,1221],author:1178,automat:43,avail:[40,41,43,861,896,898,899,908,935,960,1078],averag:[1028,1030,1031,1035,1074,1075,1076,1141,1144],average_across_step:[1074,1075,1076],avoid:[43,861,1078,1221],axes:[40,41,43,410,439,451,452,840,845,846,847,848,849,853,854,855,856,857,861,905,935,940,951,964,1015,1021,1026,1051,1054,1078,1141,1143,1144,1145,1146,1147,1148,1149],axes_length:[40,41,935,959,960,961],axi:[40,41,410,412,416,417,423,431,432,433,437,438,440,840,841,845,846,847,848,849,851,852,853,854,855,856,857,861,863,866,873,884,885,886,887,890,891,892,893,905,935,940,950,951,954,955,956,964,967,984,985,986,998,1009,1010,1013,1015,1016,1023,1026,1078,1134,1140,1141,1143,1144,1145,1146,1147,1148,1149,1151,1156,1172,1174,1175],axis0:[40,41,935,1015],axis1:[40,41,840,841,935,1015],axis2:[840,841],back:[43,1207,1208,1211,1215],backend:[15,17,19,40,41,354,355,356,357,358,359,360,362,363,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,861,896,899,908,911,917,925,934,935,977,981,1028,1031,1033,1035,1036,1037,1042,1078,1178,1179,1184,1185,1211,1212,1213,1214,1215,1216,1220,1221,1224],backend_nam:43,background:[1178,1221],backprop:1224,backward:[855,856,857,1220],band:[935,965],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,360,408,409,410,433,817,829,830,831,861,863,864,865,866,867,868,870,871,873,874,875,876,911,935,970,986,1003,1012,1028,1078,1141,1142,1178,1181,1182,1183,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1224],basi:43,batch:[40,41,840,844,845,861,903,904,935,965,975,1044,1048,1074,1075,1076,1077,1078,1159,1168,1176,1177,1209,1210],batch_shap:[410,425,935,975,994,1044,1045,1046,1047,1048,1049,1050,1051,1057,1134,1135,1159,1169,1170,1171,1195,1204],batch_siz:[458,459,1078,1134,1135,1159,1160,1161,1162,1163,1164,1165,1166],bayesian:1224,becaus:[43,935,938],becom:[43,935,947,1061,1065,1224],been:[935,959,960,961,1134,1135],befor:[40,41,43,861,905,1074,1075,1076,1078,1122,1131,1141,1143,1144,1145,1146,1147,1148,1149,1159,1170,1171,1224],before_1:[935,951,1026],before_n:[935,951,1026],begin:[1122,1123,1130,1221],behaviour:[43,1224],behind:[1028,1031,1033,1035,1036,1037,1178],being:[40,41,43,935,938,997,1005,1078],believ:43,belong:[40,41],below:[43,807,811,840,841,1178,1221,1224],below_depth:[40,41],benefit:1178,bernoul:[1159,1167,1195,1203],best:[43,935,987,1178],beta1:[1028,1030,1031,1035,1211,1212,1213],beta2:[1028,1030,1031,1035,1211,1212,1213],beta:[1176,1177],between:[40,41,42,813,814,935,938,1051,1056,1122,1126,1134,1136,1172,1174,1175,1211,1213],bia:[1159,1168,1169,1195,1196,1197,1198,1199,1200,1201,1202,1205],bias_initi:[1195,1196,1197,1198,1199,1200,1201,1202,1205],bilinear:[1044,1045],bilinear_resampl:[172,313,447,583,744,1044],bilinearli:[1044,1045],binari:[817,820,1172,1173],binary_cross_entropi:1172,bit:[360,813,814,815,911,922,1044,1046,1050,1178],bitwis:[817,820],bitwise_and:[88,225,365,494,626,817],bitwise_oper:[0,7,8],block:[1178,1221],bool:[15,18,19,40,41,42,43,817,825,826,827,828,832,833,840,844,845,848,849,851,852,853,854,855,856,857,859,860,861,879,892,896,900,905,908,910,911,921,935,937,942,943,955,958,962,963,965,972,974,982,987,1007,1009,1023,1024,1025,1028,1031,1032,1033,1034,1035,1036,1037,1039,1051,1054,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1134,1135,1141,1143,1144,1145,1146,1147,1148,1149,1151,1152,1159,1167,1184,1185,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],both:[43,840,842,935,954],bottom:1178,boundari:[40,41,1134,1138],branch:[43,859,860],brittl:43,broadcast:[40,41,817,820,824,827,828,833,840,842,845,848,849,855,856,857,935,945,962,989,990,991,998,1051,1054,1061,1065,1068,1141,1143,1144,1145,1146,1147,1148,1149],broadcast_to:[262,677,935],build:[1078,1178,1195,1206,1207,1208],build_mod:[1195,1206,1207,1208],builder:[43,1178],built:[861,935,938,1078,1195,1206,1207,1208],busi:43,bypass:1221,cach:[861,877,935,946],cache_fn:935,calcul:[40,41,42,817,818,819,822,823,829,830,831,835,836,837,838,1061,1068],call:[43,861,905,935,997,1005,1022,1028,1032,1078,1122,1123,1126,1130,1195,1206,1207,1208,1211,1215,1221,1224],callabl:[40,41,859,860,861,870,871,905,935,946,958,960,987,1022,1074,1075,1076,1077,1078,1122,1126,1127,1128,1130,1131,1159,1170],can:[43,861,903,904,905,935,999,1044,1046,1078,1178,1220,1221,1224],cancel_join_thread:1078,cannot:43,captur:1178,cast:[40,41,138,262,410,544,677,911,935,950,1044,1046,1050],catch_except:[935,958],categori:43,caus:43,ceil:[88,225,365,494,626,817,935,938],cell:[1159,1169,1195,1204],certain:[40,41,935,938,985,986],chain:[40,41,1074,1075,1076,1217,1218],chang:[43,861,935,999,1078,1122,1124,1131,1178,1220],channel:[935,965,1044,1046,1047,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],check:[15,16,17,18,19,40,41,43,861,900,910,911,916,925,934,935,944,963,974,982,1014,1024,1028,1034,1078,1122,1123,1130,1178,1221],check_nest:[1122,1130],check_shap:[40,41],check_submod_ret:[1207,1208],check_typ:[40,41],choic:[1178,1221],choleski:[748,1051],choos:[817,832,833,935,1025,1051,1056,1061,1065,1178],choose_random_framework:59,chosen:[40,41,935,938,1025],chunk:[861,903,904,905,1078],chunk_siz:[861,905,1078],circl:[1061,1062,1063],clark:1178,clear:[43,861,877,1078],clear_framework_stack:59,clear_mem_on_dev:[408,669,861],click:1178,clip:[40,41,262,410,677,935,948,949,989,991,1178],clip_matrix_norm:935,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,935],clipped_delta:1078,clone:[40,41,861,880,881,882,883,1078],clone_arrai:1078,clone_it:1078,clone_nest:1078,clonedit:1078,cloneditem:1078,clonednest:1078,close:[43,1044,1049,1061,1063,1078,1224],closest:[817,821,824,911,916],closest_valid_dtyp:911,code:[40,41,42,43,458,1178,1179,1220,1221],codebas:[861,903,904,1078,1178,1221,1224],codomain:[817,818,819,822,823,829,831,835,836,837,838],colab:1178,collect:[15,40,41,408,410,442,447,451,455,456,458,859,861,911,935,1028,1044,1051,1058,1061,1078,1122,1134,1141,1151,1159,1172,1176,1181,1195,1209,1211],color:[40,41,42,1222,1223],column:[935,975],combin:[40,41,42,1044,1049,1178,1224],combined_batch_s:1078,come:1221,command:1178,comment:43,commit:1224,common:[40,41,43,1061,1065],common_key_chain:[40,41],commun:[43,1178,1221],communuti:43,compar:[40,41,851,852,935,937,942,943],comparison_oper:[0,9,10],compat:[817,820,824,827,828,833,840,845,855,856,857,935,962,999,1061,1068,1178,1224],compil:[262,410,677,1207,1208,1211,1212,1213,1214,1215,1216],compile_on_next_step:[1207,1208,1211,1212,1213,1214,1215,1216],complet:[40,41,43,1051,1056,1078],complex:[1221,1224],compliant:[817,832,833],compon:[935,954],composit:43,comput:[40,41,817,820,827,828,832,833,834,840,842,843,845,853,854,861,905,935,948,949,955,956,962,988,1028,1030,1031,1032,1033,1035,1036,1037,1039,1041,1044,1047,1051,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1069,1070,1071,1072,1122,1126,1141,1142,1143,1144,1145,1146,1147,1148,1149,1159,1160,1161,1162,1163,1164,1165,1166,1168,1170,1172,1173,1174,1175],concat:[40,41,861,890,891,892,893,905,935,965,1078],concaten:[40,41,138,262,410,544,677,935,965,1078,1178],concatten:[40,41,861,890,891,892,893,905,1078],condit:[410,859,860,935,1025,1122,1130],conditon:[1122,1130],config:[40,41,1078],config_list:1078,configur:[40,41],conflict:43,conform:43,conjunct:1221,connect:[1195,1205,1206],consid:[40,41,817,832,833,1051,1056,1220,1224],consist:[40,41,861,893,1078,1141,1142,1207,1208,1221],constant:[861,870,871,935,951,1078,1122,1126,1172,1173,1174,1175,1176,1177,1186,1187,1191,1194,1207,1208,1209,1210,1221],constant_kwarg:1078,constant_pad:[262,410,544,677,935],constitu:[40,41],construct:[935,1016,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],constructor:[40,41,42,935,939,1217,1218],consum:[861,1078],cont_feat_dim:[1159,1170],contaienr:[40,41],contain:[15,18,19,42,807,809,811,812,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,845,853,854,855,856,857,861,880,884,905,911,915,935,936,940,947,948,949,952,962,974,989,991,1000,1011,1012,1028,1030,1031,1033,1035,1036,1037,1061,1068,1074,1075,1076,1077,1078,1134,1135,1141,1143,1144,1145,1147,1149,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[410,677,935],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[410,935,992,1159,1170,1195,1206],context_dim:[1195,1206],contextmanag:[59,60],continu:[43,1078,1221],contract:[40,41,1141,1142],contribut:[1178,1179],contributor:[43,1178],control:1178,conv1d:[203,343,472,796,1159,1178,1195],conv1d_transpos:[203,343,472,796,1159],conv1dtranspos:[1178,1195],conv2d:[203,343,472,608,796,1159,1178,1195],conv2d_transpos:[203,343,472,796,1159],conv2dtranspos:[1178,1195],conv3d:[203,343,472,608,796,1159,1178,1195],conv3d_transpos:[203,343,472,796,1159],conv3dtranspos:[1178,1195],convent:[40,41,840,842,1141,1142],conver:[861,877,888,900,907,910,1078],convers:[16,17,18,19,40,41,1078,1178],convert:[15,16,17,18,19,40,41,43,861,888,889,911,917,923,924,935,1008,1019,1020,1044,1046,1050,1051,1057,1078,1122,1124,1131,1178,1185],convert_dtyp:911,convolut:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],cool:43,cooler:43,coordin:[935,990,1061,1062,1063,1065],copi:[40,41,43,458,935,953,1078,1122,1124],copy_arrai:[410,677,935],copy_nest:1122,core:[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,859,860,861,863,864,865,866,867,868,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1178],corner:43,correct:[43,1178,1221],correctli:[40,41,43,848,849,1051,1054,1061,1065,1141,1143,1144,1145,1146,1147,1148,1149],correspond:[40,41,935,950,1134,1135],cos:[88,365,494,626,817,935,965,1061,1062,1072,1221],cosh:[88,365,494,626,758,817,1061],cosin:[817,818,822,823,1061,1062,1067],cost:[1028,1030,1031,1033,1035,1036,1037,1074,1075,1076,1077],cost_fn:[1074,1077],could:1224,count:[40,41,846,847,855,856,857,1078,1141,1146,1148],cours:43,cprint:1222,cpu:[40,41,43,861,898,900,906,907,910,935,938,941,967,968,975,985,986,994,995,1001,1002,1027,1078,1134,1135,1136,1137,1138,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1220,1221],creat:[40,41,807,808,809,810,812,861,870,871,935,938,941,966,967,968,975,985,986,994,995,1001,1002,1018,1027,1028,1041,1078,1134,1135,1136,1137,1138,1178,1179,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],create_if_abs:[40,41],create_vari:1186,creation:[40,41,42,43],creation_funct:[354,355,356,357,358,359,807,808,809,810,811,812],crop:[1044,1048],crop_siz:[1044,1048],cross:[262,677,935,1172,1173,1174,1175],cross_entropi:1172,cuda:[40,41,861,870,889,906,935,938,941,967,968,975,985,986,994,995,1001,1002,1027,1078,1134,1135,1136,1137,1138,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],cumprod:[138,262,410,677,935],cumsum:[677,935],cumul:[935,955,956],current:[40,41,42,43,861,870,894,895,897,901,911,917,925,934,935,957,969,977,981,993,996,1078,1122,1123,1130,1178,1224],current_framework:59,current_framework_str:[410,677,935,1078],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1159,1160,1161,1162,1163,1164,1165],d_out:[1159,1160,1161,1162,1163,1164,1165],da_can_termin:1078,da_dim_s:[861,1078],da_direct:1078,da_tune_step:[861,1078],dai:[43,1224],daniel:1178,data:[40,41,42,43,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,835,836,837,838,840,841,842,845,846,847,851,852,855,856,857,861,863,864,865,866,867,868,873,874,875,889,911,915,916,917,921,922,923,924,925,926,927,934,935,938,941,962,966,975,982,995,999,1010,1014,1027,1028,1034,1042,1061,1068,1078,1159,1168,1178],data_format:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],data_type_funct:[360,362,363,813,814,815],dataset:[40,41],datatyp:[40,41,911,916,926,927],dcdw:[1028,1030,1031,1033,1035,1036],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1028,1035,1036,1211,1213,1214],decay_lambda:[1028,1035,1036,1211,1213,1214],decid:[40,41,1224],decompos:[1051,1052,1056],decomposit:[840,844,1051,1052,1056],decrement:[935,978],dedic:[1028,1042,1184,1185],deep:[40,41,1178],deep_copi:[40,41],deeper:[861,883,887,893,1078,1122,1131,1178],deepli:[1122,1124],def:[43,60,84,221,361,490,622,862,869,872,912,913,914,1029,1078,1082,1089,1178,1187,1190,1193,1220,1221,1224],default_dev:43,default_devic:861,default_dtyp:[43,911],default_float_dtyp:911,default_int_dtyp:911,default_key_color:[40,41,42],default_nod:1078,default_rng:458,default_v:[935,958],defaultdevic:[861,862],defaultdtyp:[911,912],defaultfloatdtyp:[911,913],defaultintdtyp:[911,914],defin:[43,935,954,994,1027,1134,1136],definit:43,degre:[1061,1072],del:1078,delai:43,delet:43,delta:[1028,1030,1078],delta_dim_s:1078,delta_percent_mem:1078,delta_sf:1078,delta_util:1078,demo:1178,denomin:[935,971,1004,1011,1012,1176,1177,1209,1210],denot:43,dens:[1195,1205],depend:[817,818,819,822,823,829,830,831,835,836,838,840,844,851,852,935,1025,1178],depth:[40,41,410,434,861,883,887,893,935,973,994,1078,1122,1131,1207,1208],depth_cutoff:[40,41],depthwis:[1159,1166,1195,1202],depthwise_conv2d:[203,343,472,608,796,1159],depthwiseconv2d:[1178,1195],deriv:[807,810,1028,1030,1031,1033,1035,1036,1037,1122,1124,1131,1178,1207,1211,1215,1217],descend:[840,844,851,852],descent:[1028,1033,1211,1216],describ:[40,41,1141,1142],descript:[840,845],design:[1178,1179],desir:[40,41,861,906,911,915,935,938,941,975,976,995,1027,1044,1049,1078,1141,1143,1144,1145,1147,1149],desired_aspect_ratio:[447,450,1044,1049],desired_percent_increas:1078,detail:1224,detect:[40,41,1122,1123,1130],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,817,818,819,820,822,823,825,826,829,831,835,836,837,840,841,842,843,845,855,856,857,861,896,898,899,908,911,915,916,922,925,926,927,934,935,937,938,941,942,943,974,977,981,982,1014,1024,1028,1034,1061,1068,1074,1075,1076,1077,1078,1159,1170],dev:[40,41,42,43,131,256,354,357,408,410,411,413,423,424,425,432,433,434,435,436,441,458,459,537,669,807,810,861,864,865,867,868,870,871,874,875,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,897,900,901,902,903,904,905,906,907,910,935,938,941,967,968,975,985,986,994,995,1001,1002,1027,1028,1043,1134,1135,1136,1137,1138,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],dev_clon:[40,41,861],dev_clone_arrai:861,dev_clone_it:861,dev_clone_nest:861,dev_dist:[40,41,861],dev_dist_arrai:861,dev_dist_it:861,dev_dist_nest:861,dev_from_str:[43,131,256,408,537,669,861],dev_mapp:861,dev_str:[40,41],dev_to_str:[131,256,408,537,669,861],dev_unifi:861,dev_unify_arrai:861,dev_unify_it:861,dev_unify_nest:861,dev_util:861,devclonedit:861,devcloneditem:861,devclonednest:861,devdistit:861,devdistitem:861,devdistnest:861,develop:[43,1178,1221,1224],deviat:[40,41,1134,1137,1141,1147,1176,1177,1209,1210],devic:[21,40,41,43,354,355,356,359,409,410,422,807,808,809,810,811,812,863,864,865,866,867,868,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,935,938,941,966,967,968,975,985,986,994,995,1001,1002,1027,1028,1043,1134,1135,1136,1137,1138,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],devmanag:[861,869],devmapp:[861,871],devmappermultiproc:861,diag:[840,844],diagon:[112,239,389,518,650,807,811,840,935,975],dict:[15,16,17,18,19,40,41,42,861,863,866,870,871,873,883,884,885,886,887,935,959,960,961,987,1074,1075,1076,1078,1122,1124,1125,1126,1129,1131,1184,1185],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,813,814,861,880,881,884,885,1051,1056,1078,1159,1168,1178,1221,1224],differenti:[1178,1221],dilat:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],dim:[40,41,840,844,935,994,1044,1045,1049,1078,1195,1206],dim_siz:[40,41,861,1078],dimens:[40,41,42,807,811,840,841,842,844,845,846,847,848,849,855,856,857,861,892,935,945,950,954,959,960,961,964,965,972,984,994,998,999,1009,1010,1013,1021,1023,1044,1048,1051,1054,1074,1075,1076,1077,1078,1134,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1156,1159,1160,1161,1162,1163,1164,1165,1166,1169,1172,1174,1175,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206],dimension:[40,41,458,840,842,844,845,855,856,857,935,1009,1010],direct:1078,directli:[43,1122,1131,1221,1224],directori:[935,1006,1017],discord:43,discret:[1172,1174],discuss:43,disk:[40,41,1044,1046],distanc:[935,938],distribut:[40,41,861,880,884,885,886,887,1078,1134,1135,1136,1137,1138,1159,1167,1195,1203,1207,1208],distribute_nest:1078,distributedarrai:[40,41],distrubt:[1172,1174],dive:[1178,1221],divid:[40,41,817,824,935,1009,1011,1061],dividend:[1061,1068],divis:[817,824,935,971,1004,1011,1012,1028,1030,1031,1035,1061,1068,1211,1212,1213],divisor:[1028,1030,1031,1035,1061,1068,1211,1212,1213],doc:1178,docstr:43,document:43,doe:[40,41,43,935,938,1009,1220],doesn:[1051,1056,1178],doing:43,domain:[817,818,819,822,823,829,831,835,836,837,838,1061,1062],don:[43,1178],done:43,door:1224,dot:[1051,1053,1159,1170,1171,1195,1206],down:1220,downscal:[935,948,949],drag:[1178,1224],draw:[1134,1135,1137,1138],drawn:[1134,1135,1136,1137,1138],drop:[1178,1224],dropout:[1159,1178,1195,1206],dropout_r:[1195,1206],ds_tune_step:861,dtype:[40,41,43,138,262,354,355,356,357,359,360,362,363,410,411,413,414,422,425,441,544,677,807,808,809,810,812,813,814,815,848,849,915,916,917,918,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,938,941,966,975,994,995,1027],dtype_bit:[138,262,410,544,677,911],dtype_from_str:[43,138,262,410,544,677,911],dtype_in:[410,419,420,421,911,917,922,923,924,925,926,927,934],dtype_to_str:[138,262,410,544,677,911],duplic:[40,41,43],dure:[40,41,43,840,842,859,860,935,1022,1028,1030,1031,1035,1074,1075,1076,1077,1207,1208,1211,1212,1213,1215],dynam:[43,410,415,859,860],each:[40,41,42,43,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,842,844,861,870,871,880,881,882,883,884,885,886,892,904,905,935,936,937,951,962,998,1009,1013,1016,1026,1028,1031,1033,1035,1036,1037,1044,1047,1061,1063,1068,1070,1071,1078,1122,1126,1134,1135,1141,1142,1159,1160,1161,1162,1163,1164,1165,1166,1167,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1221],eager:1221,easi:1224,easili:1178,econom:1224,ecosystem:1178,edg:[935,947,951,1026],effect:[1028,1037],effective_grad:[1028,1037],effici:1224,einop:[40,41,935,959,960,961],einops_rearrang:[40,41,935],einops_reduc:[40,41,935],einops_repeat:[40,41,935],einstein:[40,41,1141,1142],einsum:[40,41,189,331,460,598,776,1141],either:[40,41,43,817,829,831,835,840,842,935,958,987,990,992,1074,1075,1076,1077,1078,1195,1206,1207,1208,1221],eleg:1078,element:[40,41,458,807,811,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,842,846,847,853,854,855,856,857,861,882,886,892,911,915,935,936,938,940,942,943,947,948,949,955,956,962,975,976,989,991,998,1000,1009,1020,1025,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1078,1141,1142,1144,1146,1148,1151,1152,1153,1154,1155,1156,1157,1158,1159,1167,1195,1203],elementwis:[40,41],elementwise_affin:[1209,1210],elementwise_funct:[817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838],elemtn:[1134,1135],elif:1078,els:[43,935,944,958,963,1078],elsewher:[935,1025],emphas:1178,empti:[40,41,77,214,354,483,615,807,855,856,857,1051,1056,1078],enabl:[40,41,42,43,1178],encapsul:[813,815],encod:[935,965,1044,1046],end:[935,938,1178,1221],engag:43,ensur:43,entir:[40,41,855,856,857,861,905,1078,1178,1195,1204],entri:[40,41,935,985,986,1009,1010],entropi:[1172,1173,1174,1175],enumer:1078,environ:1178,eps:[360,813,814],epsilon:[1028,1030,1031,1035,1172,1173,1174,1175,1176,1177,1209,1210,1211,1212,1213],equal:[40,41,88,365,494,626,817,825,840,841,851,852,935,937,942,943,951,1009,1026,1061,1072,1134,1138],equality_matrix:[935,937],equat:[40,41,1141,1142],equival:[817,832,833,840,845,935,938,1061,1072],erf:[456,758,1061],error:[40,41,43,861,935,1010,1061,1069,1078,1151,1152,1207,1208,1211,1215],etc:[40,41,43,861,906,935,938,941,967,968,975,985,986,994,995,1001,1002,1027,1078,1134,1135,1136,1137,1138,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1224],euclidean:[840,845],euler:806,evalu:[40,41,817,829,830,831,834,855,856,857,935,990,1122,1123,1130],even:[43,1224],evenli:[40,41,935,938,985,986,1009],everi:[43,935,937,1224],exact:[40,41],exampl:[43,859,860,935,947,1013,1051,1056,1178,1220,1221,1224],example_input:[410,415,859,860],exc_tb:1078,exc_typ:1078,exc_val:1078,exce:[935,991],except:[40,41,44,47,855,856,857,935,938,944,950,958,1022,1078],excess_s:1078,excit:[1178,1221],exclud:[59,61,935,938,1134,1138],exclus:[40,41,410,417,430,442,444,935,955,982,1028,1034,1134,1136],execut:[43,935,1022,1221],execute_with_gradi:[169,308,442,578,738,1028,1178,1220],exist:[40,41,935,958,1078,1178,1211,1215,1224],exp:[758,1061],expand:[40,41,935,964,965],expand_dim:[40,41,262,677,935,1078],expect:[935,939],explain:[43,1221],explicitli:[43,1195,1204,1206,1207,1208,1221],expon:[935,1012],exponenti:[1061,1069,1070],expos:[935,941,952],express:[817,822,835,935,990],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1028,1032],eye:[1051,1053],fabian:1178,fabio:1178,factor:[840,844,861,870,903,904,905,1028,1030,1031,1035,1036,1078,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202,1211,1212,1213,1214],fail:43,falck:1178,fall:[1207,1208,1211,1215],fallback_to_non_compil:[1207,1208,1211,1215],fals:[15,18,19,40,41,42,59,66,67,68,69,70,408,410,417,418,430,437,440,442,443,444,451,452,817,825,826,832,833,840,845,848,849,851,852,853,854,855,856,857,861,879,892,900,905,910,911,918,919,920,921,935,937,955,958,963,965,972,982,987,1007,1009,1023,1025,1028,1031,1032,1033,1034,1035,1036,1037,1051,1054,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1141,1143,1144,1145,1146,1147,1148,1149,1184,1185,1207,1208,1211,1212,1213,1214,1215,1216],fan_in:1186,fan_mod:1186,fan_out:1186,far:[1122,1123,1130,1220],faster:[859,860],favourit:[1178,1220],feasibl:1224,feat_dim:[1159,1170,1171],fed:[861,905,1078],feed:[861,905,1078],few:43,field:1224,file:[40,41,43,935,1006,1017,1207,1208],filepath:[40,41],fill:[40,41,807,808,809,810,812,935,966,995,1134,1136],fill_valu:[410,422,935,966],filter:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202,1224],filter_s:[1195,1196,1197],filter_shap:[1195,1198,1199,1200,1201,1202],find:[40,41,43,1224],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,360,361,489,490,621,622,813],finish:[1178,1224],finit:[817,825],first:[40,41,43,458,817,820,824,827,828,833,840,841,842,844,859,860,861,892,935,942,950,954,962,985,986,1013,1015,1028,1032,1074,1075,1076,1077,1078,1122,1123,1130,1134,1140,1141,1146,1148,1195,1206,1207,1208,1211,1215,1221,1224],firstlayersiren:[1178,1186],firstli:[1221,1224],fist:[861,905,1078],fit:[40,41,408,410,442,447,451,455,456,458,935,998,1044,1049],fix:43,fkt:1224,flag:[40,41,43,1028,1034],flat:[40,41,935,998,1001],flat_list:[40,41],flatten:[40,41,840,845,848,849,935,965,998,1141,1143,1144,1145,1147,1149],flatten_key_chain:[40,41,1207,1208],flexibl:[1178,1221],flip:[40,41,118,244,395,524,656,846],float32:[43,410,425,911,915,923,924,935,938,941,975,995,1027],float_dtyp:[911,919,929],float_img_to_uint8_img:1044,floor:1078,floor_divid:[88,365,494,626,817],fluid:1224,folder:[43,1178],follow:[40,41,43,813,815,840,845,861,905,935,978,979,980,1011,1012,1028,1031,1033,1035,1036,1037,1078,1122,1126,1131,1159,1170,1171,1178,1195,1205,1211,1215],followng:[813,814],fomaml_step:1074,forget:[1028,1030,1031,1035,1211,1212,1213],fork:[935,992,1178,1179],forkserv:[935,992,1078],form:[15,16,17,18,19,40,41,807,811,840,841,935,941,1028,1031,1033,1035,1036,1037,1122,1124,1131,1159],format:[40,41,43,861,879,911,915,917,921,935,938,941,975,995,1027,1078,1141,1142,1178,1220,1221],format_fn:[40,41],format_key_chain:[40,41],forward:[1207,1208,1211,1215,1220],found:[40,41,42],fourier:[935,965],fourier_encod:935,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,245,247,250,253,254,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,314,315,316,318,319,320,321,323,324,327,328,329,330,332,333,334,335,336,337,338,339,342,344,345,346,347,348,349,350,355,356,357,358,359,361,362,363,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,396,398,401,403,405,406,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,484,485,486,487,488,490,491,492,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,525,527,530,532,534,535,538,539,540,541,542,543,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,579,580,581,582,584,585,586,588,589,590,594,595,596,597,599,600,601,602,603,604,605,609,610,611,616,617,618,619,620,622,623,624,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,651,652,653,654,655,657,659,662,664,666,667,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,739,740,741,742,743,745,746,747,749,750,751,752,753,754,756,757,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,775,777,778,779,780,781,782,783,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,808,809,810,811,812,814,815,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,841,842,843,844,845,847,849,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1177,1178,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1223,1224],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1078,framewrk:[935,992],free:43,freed:43,freeli:43,frequenc:[935,965],from:[40,41,42,43,807,810,817,837,840,841,846,847,853,854,855,856,857,861,870,871,905,911,917,935,958,967,968,975,999,1010,1018,1025,1028,1031,1035,1044,1048,1051,1056,1074,1075,1076,1077,1078,1122,1124,1131,1134,1135,1136,1137,1138,1141,1146,1148,1159,1167,1170,1178,1184,1185,1195,1203,1206,1211,1215,1220,1221],from_cal:[1207,1208],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,262,410,544,677,813,814,935,1051,1056,1178],full_matric:[840,844],fulli:[43,1178,1195,1205,1206,1220],func:[40,41,410,415,442,443,859,860,861,905,935,946,1028,1032,1078],further:[43,1224],furthermor:1224,futur:1224,gain:1186,gamma:[1176,1177],gather:[40,41,138,262,410,544,677,935,968],gather_nd:[40,41,138,262,410,544,677,935],gauss:[1061,1069],gaussian:[1151,1152],geglu:[1178,1181],gelu:[341,469,785,1151,1178,1181],gener:[23,40,41,43,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,458,859,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1034,1134,1136,1138,1139,1178,1211,1215],geometr:[935,965],get:[40,41,43,813,814,815,861,870,871,879,894,895,900,904,907,910,911,921,922,935,939,969,970,971,997,1078,1178,1195,1204,1224],get_all_arrays_in_memori:935,get_all_arrays_on_dev:861,get_framework:59,get_initial_st:[1195,1204],get_min_bas:935,get_min_denomin:935,get_mod_kei:[1207,1208],get_num_dim:[410,677,935],get_referrers_recurs:935,getfullargspec:1078,gist:1178,give:[43,935,999,1221],given:[40,41,43,807,808,846,847,861,894,900,903,904,905,907,910,911,915,935,938,941,947,955,956,968,985,986,995,998,1001,1002,1009,1016,1021,1023,1027,1028,1030,1031,1033,1035,1036,1037,1051,1053,1057,1061,1062,1078,1122,1127,1128,1134,1137,1138,1140,1141,1144,1146,1147,1148,1149,1159,1160,1161,1162,1163,1164,1165,1166,1184,1185,1224],global:[40,41,42,861,870,871,878,903,904,905,911,918,919,920,935,957,970,971,997,1003,1004,1005,1011,1012,1028,1043,1078,1176,1177,1209,1210],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1178,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],good:43,googl:1178,got:[43,1178],gpu0:43,gpu2:43,gpu:[861,896,899,1078],gpu_is_avail:[408,861,1078],grad:[1178,1211,1215,1220],gradient:[25,40,41,443,444,445,446,861,905,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1047,1074,1075,1076,1077,1178,1211,1212,1213,1214,1215,1216,1220,1224],gradient_descent_upd:[1028,1074,1075,1076,1077],gradient_imag:[172,313,447,583,744,1044],gradienttrack:[1028,1029],graph:[1028,1031,1033,1035,1036,1037,1207,1208],greater:[40,41,817,824,935,938,1010,1134,1138],greatest:[817,824],green:[40,41,42,1222,1223],grid:[935,990],group:[1044,1049],guid:[43,1178,1179,1224],gym:1178,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1224,half:[935,938,1078,1134,1138],hand:1178,handl:[40,41,42,43,859,860,861,877,879,888,889,900,907,910,1028,1031,1033,1035,1036,1037,1078,1211,1212,1213,1214,1215,1216],happen:43,has:[40,41,43,840,842,843,848,849,935,1013,1051,1056,1061,1064],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,935],hasattr:1078,have:[40,41,43,807,808,809,810,811,812,813,814,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,835,836,837,838,840,841,842,844,845,846,847,848,849,851,852,855,856,857,935,950,954,959,960,961,962,966,1013,1028,1034,1042,1061,1068,1078,1178,1220,1221],haven:43,hdf5:[40,41,1207,1208],head:[1159,1170,1195,1206],head_dim:[1195,1206],height:[1044,1049],height_cutoff:[40,41],help:[43,59,360,408,409,861,873,874,875,876,911,1028,1178,1186,1188,1189,1191,1192,1194],here:[43,1178],hidden:[1159,1169,1195,1204],hierarch:[935,952],hierarchi:[40,41],high:[40,41,458,1134,1136,1138],higher:[840,844,1028,1031,1033,1035,1036,1037],highest:[1134,1136],highest_util:1078,highest_util_nod:1078,highli:1178,highlight:1224,hint:43,hkt:1224,hold:[911,915,935,938,941,1001,1002],host:1178,hot:[935,994],how:[1178,1195,1206,1207,1208,1221,1224],howev:[43,1221],http:1224,hyperbol:[817,818,819,823,836,838,1061,1066,1067,1073,1151,1158],hypothet:[43,1224],icon:1178,idea:1178,ident:[40,41,43,138,262,410,544,677,935],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[806,813,814,817,837],if_exist:[40,41],ignor:[40,41,1211,1215],ignore_key_error:[40,41],ignore_miss:[1211,1215],ignore_non:[40,41],iii:43,iinfo:[83,220,360,489,621,813],imag:[27,448,449,450,935,984,1045,1046,1047,1048,1049,1050,1159,1160,1161,1162,1163,1165,1166,1178,1224],image_dim:[1044,1048],imkkhk:1224,immedi:[1178,1221,1224],implement:[43,817,818,819,822,823,829,830,831,835,836,838,851,852,1178,1221,1224],in_featur:[1159,1168],inadvert:43,includ:[40,41,43,840,845,855,856,857,935,938,974,1011,1012,1024,1122,1123,1134,1138,1195,1205,1206,1209,1210,1220],include_deriv:[1122,1124,1131],include_empti:[40,41],include_inf:[40,41,935,974,1024],include_nest:[1122,1123],include_self:[40,41],inclus:[43,1134,1136],incom:[1159,1168],increas:[861,883,887,893,935,951,964,1026,1078,1122,1131],increasingli:1224,increment:[935,979,1078],inde:1178,indent:[40,41,42],independ:[1134,1135],index:[40,41,410,458,848,849,851,852,935,940,967,968,990,1010,1013,1122,1125,1127,1128,1129,1132],index_nest:1122,indic:[40,41,410,423,424,434,435,436,840,845,848,849,851,852,935,940,967,968,976,994,1001,1002,1122,1123,1125,1127,1128,1129,1130,1132,1133,1134,1135,1151,1156,1159,1160,1161,1162,1163,1164,1165,1166,1176,1177,1195,1196,1197,1198,1199,1200,1201,1202,1207,1208],indices_wher:[138,262,410,677,935],indistinguish:[817,837],inevit:1224,inf:[40,41,840,845,935,974,983,1024,1061,1064],infer:[807,810,853,854,859,860,935,972,975,999,1007,1044,1048,1051,1056,1221,1224],infin:[817,818,819,821,822,823,824,825,829,831,835,836,837,838,840,845,855,856,857,935,983],infinit:[817,837],inform:[813,814,815,1028,1039],init_c:[1159,1169],init_h:[1159,1169],init_on_first_step:[1211,1215],initi:[40,41,42,43,59,360,408,409,861,873,874,875,876,911,1028,1078,1159,1169,1178,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1211,1215],initialz:[1207,1208],inner:[840,842,1074,1075,1076,1077],inner_batch_fn:[1074,1075,1076],inner_batch_shap:[1159,1168],inner_cost_fn:[1074,1075,1076],inner_grad_step:[1074,1075,1076,1077],inner_learning_r:[1074,1075,1076,1077],inner_optimization_step:[1074,1075,1076,1077],inner_v:[1074,1075,1076],innermost:[807,811,840,841],inp:1078,inplac:[40,41,935,944,977,981,1014,1028,1031,1033,1035,1036,1037,1184,1185,1211,1212,1213,1214,1215,1216],inplace_arrays_support:[410,935],inplace_decr:[138,262,410,544,677,935],inplace_incr:[138,262,410,544,677,935],inplace_oper:[0,11,12],inplace_upd:[40,41,138,262,410,544,677,935,1184,1185],inplace_variables_support:[410,935],input:[15,18,19,40,41,42,43,807,810,811,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,844,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,870,871,878,879,880,883,884,887,893,905,906,911,915,916,918,919,920,921,922,926,927,935,936,937,940,942,943,944,945,947,948,949,950,951,953,955,956,958,959,960,961,962,963,964,965,972,974,975,976,978,979,980,982,983,984,988,989,990,991,998,1000,1007,1008,1010,1013,1014,1015,1016,1018,1019,1020,1021,1023,1024,1026,1028,1032,1034,1039,1043,1044,1045,1046,1047,1048,1050,1051,1054,1056,1058,1059,1060,1061,1064,1066,1067,1068,1072,1073,1074,1075,1076,1077,1078,1134,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1176,1177,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1221],input_ax:[861,905,1078],input_channel:[1195,1196,1197,1198,1199,1200,1201,1204,1205],input_queu:1078,inputs_split:1078,insert:[848,849,935,964],insid:43,inspect:1078,inspir:1224,instal:1178,instanc:[15,16,17,18,19,40,41,43,458,861,870,1078,1184,1185,1217,1218],instead:[40,41,43,458,1141,1143,1144,1145,1146,1147,1148,1149,1224],int32:43,int64:[911,915,935,938,941,975,995,1027],int_dtyp:[911,920,930],integ:[40,41,458,813,815,817,820,821,824,840,845,855,856,857,911,927,935,938,1000,1009,1134,1136,1139],integr:1178,intend:43,inter:1178,interact:1178,interchang:[40,41,935,1015],interest:1178,interfac:[935,941,1221],intermedi:[40,41],intern:[40,41,861,1028,1042,1078,1122,1123,1130,1131,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1217,1218],interpol:[935,984],intersect:[1061,1062],interv:[40,41,855,856,857,935,938,947,985,986,1061,1063,1134,1138],introduc:1224,inv:[748,1051,1224],invalid:[855,856,857],invalid_dtyp:911,invers:[817,818,819,1051,1053,1055,1061,1062,1063,1064,1066,1224],invert:[1051,1053,1055],invest:1224,investig:43,invoc:[859,860],irrespect:1178,is_al:1078,is_arrai:[138,262,410,544,677,935,1078],is_float_dtyp:911,is_int_dtyp:911,is_mean:1078,is_sum:1078,is_vari:[169,308,442,578,738,1028],isfinit:[88,225,365,494,626,817],isinf:[262,544,677,935],isinst:1078,isnan:[88,225,365,494,626,817],isnumer:1078,issu:[1178,1179],issue_numb:43,item:[15,19,40,41,861,870,871,873,880,882,884,886,892,911,918,935,952,973,1011,1012,1078,1122,1126,1127,1128,1131,1132,1133,1178,1207,1208,1220],iter:[15,16,17,18,19,40,41,42,859,860,861,864,865,867,868,870,871,874,875,882,884,885,886,887,892,905,935,937,945,950,951,975,990,995,998,999,1002,1007,1009,1013,1016,1021,1026,1078,1122,1123,1124,1126,1130,1131],iterbal:[861,882,886,892,1078],its:[458,840,842,861,905,935,975,999,1015,1021,1078,1178],itself:[1122,1131],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,354,355,356,357,358,359,360,362,363,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,868,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1222,1223],ivy_backend:[40,41],ivy_bay:1224,ivy_test:43,ivyfcmodel:1220,ivyh:[40,41,42],ivymodul:[200,793],jame:1178,jax:[43,1028,1034,1178,1224],jax_concat:1178,jnp:1178,join:[40,41,935,950,1013,1078],journal:1178,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1178,1195,1204,1224],kaimingnorm:[1186,1190],kalman:1224,kalman_filt:1224,kalman_filter_step:1224,kalman_filter_upd:1224,keep:[40,41,861,906,935,1023,1078,1178,1179,1224],keep_inner_v:[1074,1075,1076],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1074,1075,1076],keepdim:[40,41,410,440,451,452,840,845,848,849,853,854,855,856,857,935,1023,1051,1054,1141,1143,1144,1145,1146,1147,1148,1149],kei:[15,16,17,40,41,42,43,861,873,935,952,1074,1075,1076,1078,1122,1125,1129,1159,1170,1171,1178,1184,1185,1195,1206,1211,1215],kept:[40,41,42,1074,1075,1076],kera:1224,kernel:[1159,1169],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,861,870,871,883,887,893,935,939,959,960,961,987,1078,1122,1126,1207,1208],keyword_color_dict:[40,41,42],kind:[813,814,815,1224],kwarg:[15,16,17,40,41,42,59,63,861,870,883,887,893,935,987,1078,1184,1185,1207,1208],kwarg_stateful_idx:[1207,1208],kwargs_clon:1078,kwargs_dist:1078,kwargs_uni:1078,label:[43,1172,1173,1174,1175],lamb:[1028,1035,1178,1211],lamb_upd:1028,lambda:[1078,1211,1214,1216,1220],lar:[1028,1035,1036,1178,1211],larger:[813,814,935,947],largest:[40,41,813,814,815],lars_upd:1028,last:[40,41,840,841,844,846,847,851,852,855,856,857,935,938,954,984,1009,1013,1051,1054,1141,1146,1148,1151,1156,1159,1169,1195,1205],later:[40,41,935,946],latest:[1195,1204],layer:[1028,1031,1033,1035,1037,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1176,1177,1178,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1224],layer_norm:1176,layernorm:[1178,1209],layerwis:[1028,1036,1211,1214],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1122,1123,1130],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1151,1152,1153],leaky_relu:[785,1151],learn:[853,854,1028,1031,1033,1035,1036,1037,1051,1056,1074,1075,1076,1077,1134,1140,1178,1211,1212,1213,1214,1215,1216,1221,1224],learnabl:[1176,1177,1209,1210],least:[43,840,842],leav:[15,18,19,40,41,1122,1123,1124,1130,1131],left:[40,41,43,848,849,1051,1054,1141,1143,1144,1145,1146,1147,1148,1149,1178],leftmost:[40,41],len:1078,length:[40,41,42,935,938,999,1010,1021],lenton2021ivi:1178,lenton:1178,less:[40,41,43,88,225,365,494,626,817,818,821,829,831,837,840,845,1078,1134,1138],less_equ:[88,365,494,626,817],less_util_node_str:1078,let:[1221,1224],level:1178,librari:[817,832,833,1178,1220,1224],lightweight:1178,like:[43,1028,1034,1134,1138,1178,1220,1221,1224],likewis:43,limit:[40,41,42,43,813,814,815,935,947,948,949],linalg:[29,1052,1053,1054,1055,1056,1057,1178],line:43,linear0:[1178,1220],linear1:1178,linear2:1220,linear:[935,965,984,1051,1151,1152,1153,1154,1159,1167,1178,1195,1196,1197,1198,1199,1200,1201,1202,1220],linear_algebra:[451,452,453,454,840,841,842,843,844,845],linear_resampl:[138,262,410,544,677,935],linearli:[935,965],link:[43,1178],linspac:[138,262,410,544,677,935,938],list:[15,18,19,40,41,354,355,356,359,807,808,809,812,846,847,855,856,857,861,870,871,880,881,883,884,885,887,890,891,905,935,938,941,943,990,1008,1009,1018,1023,1074,1075,1076,1078,1122,1123,1124,1126,1130,1131,1159,1160,1161,1162,1163,1164,1165,1166,1178,1179,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202],list_join:[40,41,42],list_stack:[40,41],liter:[840,845],littl:1221,load:[40,41],loaded_kwarg:1078,loader:1178,local:43,local_set:[935,973],locat:[43,935,983,1134,1135],log10:[88,365,494,626,817],log1p:[88,365,494,626,817],log2:[88,365,494,626,817],log:[758,817,830,840,843,935,986,1061,1078,1172,1173,1174,1175],logarithm:[817,829,830,831,840,843,1061,1071],logdet:[840,843],logic:[31,817,832,833,855,856,857,1059,1060,1178],logical_and:[322,755,1058],logical_not:[88,225,365,494,626,817],logical_or:[88,322,365,494,626,755,817,1058],logit:[1172,1175],logspac:[138,262,410,544,677,935],look:[43,1221,1224],loop:[1074,1075,1076,1077],loss:[1173,1174,1175,1178,1220],loss_fn:[1178,1220],lot:1221,low:[40,41,458,1134,1136,1138],lower:[40,41,43,807,811,935,989,1134,1138],lower_depth:[1207,1208],lowest:[15,18,19,40,41,1122,1131,1134,1136],lstm:[1159,1169,1178,1195],lstm_updat:[43,1159],machin:[813,814,815,853,854,1051,1056,1134,1140,1178,1221,1224],made:43,mai:[817,828,832,833,851,852,935,938,958,962,1178,1221,1224],main:[807,811,840,841,935,975,1178],mainli:1178,maintain:[43,851,852],make:[43,458,861,1078,1178,1221],maml:[1074,1075,1076],maml_step:1074,manag:[861,1078],manhattan:[840,845],mani:[40,41,43,935,1009,1178],manipulation_funct:[846,847],manner:[15,18,19,40,41,43,1122,1131],manual:[1122,1123,1130,1224],map:[40,41,42,861,870,935,983,1078,1122,1127,1128,1131,1195,1206,1220],map_cont:[40,41],map_nest_at_index:1122,map_nest_at_indic:1122,map_sequ:[40,41],mapper:[861,870,871,1078],mark:43,mask:[1159,1170,1171],master:43,match:[40,41,935,987],match_kwarg:935,math:[33,457,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1078,1178],mathbb:[1051,1057],mathbf:[1051,1057],mathemat:[806,840,845],matmul:[43,112,262,389,518,650,840,935,1224],matplotlib:1221,matric:[807,811,840,841,1159,1168],matrix:[40,41,807,811,840,841,842,935,937,948,988,1051,1052,1053,1054,1055,1056,1057,1159,1168,1195,1205],matrix_norm:[40,41,176,317,451,587,748,1051],matter:1178,max:[40,41,360,813,814,815,935,948,949,960,989,1001,1002,1078,1141,1143,1211,1213],max_batch_s:[40,41],max_chunk_s:[861,905,1078],max_depth:[40,41,861,865,868,875,883,887,893,935,973,1078,1122,1131],max_dev_dim_step_ratio:861,max_freq:[935,965],max_length:[40,41],max_node_dim_step_ratio:1078,max_norm:[40,41,935,948,949],max_split_factor_step_s:[861,1078],max_trust_ratio:[1028,1035,1211,1213],maxim:[1178,1221,1224],maximis:1178,maximum:[40,41,42,677,848,849,861,883,887,893,905,935,947,948,949,965,1028,1035,1078,1122,1131,1141,1143],mayb:[15,18,19],mdi:1078,mean:[40,41,458,861,890,891,892,893,905,935,960,1074,1075,1076,1077,1078,1122,1126,1134,1137,1141,1144,1147,1149,1186,1220,1224],measur:[1159,1170,1195,1206],mech:1178,mechan:[1178,1224],medic:1224,member:43,memori:[861,877,900,905,907,910,1078,1159,1169,1178],mention:43,merg:43,merge_with_upstream:43,meshgrid:[262,410,677,935],messag:[1222,1223],meta:[35,1075,1076,1077,1178],method:[40,41,42,43,458,935,941,952,990,1001,1002,1028,1035,1036,1078,1122,1123,1130,1131,1178,1195,1206,1207,1208,1221],might:[935,958,1224],min:[40,41,125,360,402,531,663,813,814,815,840,845,853,935,960,991,1001,1002,1011,1051,1056,1078,1141,1145],min_bas:[935,1012],min_denomin:[935,1011],min_dev_dim_s:861,min_node_dim_s:1078,min_sf_tune_step:[861,1078],min_unit_dev_tune_step:861,min_unit_node_tune_step:1078,mind:1178,mini:[1176,1177,1209,1210],minimum:[40,41,677,853,854,861,911,915,935,938,940,941,947,970,971,1003,1004,1011,1012,1078,1141,1145],miss:[1211,1215],ml_framework:[935,938,1051,1056],mod_depth:[1207,1208],mod_height:[1207,1208],mod_with_top_mod_key_chain:[1207,1208],mode:[40,41,451,453,840,844,859,860,861,890,891,892,893,905,1051,1056,1078,1221],model:[1178,1220],modul:[40,41,42,59,935,992,1078,1178,1179,1181,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1217,1218,1224],moment:[1028,1030,1031,1035,1211,1212,1213],more:[43,840,842,846,847,935,1013,1078,1178,1221,1224],more_util_node_str:1078,most:[40,41,1051,1056,1178,1224],move:[40,41,43,861,906,1078],much:[43,1178,1224],multi:[458,935,992,1159,1170,1195,1206],multi_head_attent:1159,multi_index_nest:1122,multi_map:[40,41],multi_nod:1078,multidev:[861,872,873,874,893],multidevcontain:[40,41],multidevic:[861,870],multidevit:[861,864,867,870,871,875],multidevitem:[861,863,866],multidevnest:[861,865,868],multiheadattent:[1178,1195],multinod:[1078,1082],multinodecontain:1078,multinodeit:1078,multinodeitem:1078,multinodenest:1078,multinomi:[182,326,458,593,769,1134],multipl:[40,41,855,856,857,935,987,1009,1051,1053,1141,1143,1144,1145,1146,1147,1149,1176,1177,1195,1205,1221],multipli:[40,41,935,955,1141,1146],multiprocess:[40,41,42,410,677,861,870,935,1078],must:[40,41,42,43,807,808,809,810,811,812,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,835,836,837,838,840,841,842,845,846,847,851,852,853,854,855,856,857,861,890,891,892,893,905,935,938,950,952,954,962,989,991,1002,1013,1061,1065,1068,1078,1134,1139,1211,1215],mutabl:[1122,1124,1131],mutlidevic:[861,870],mutlinod:1078,mw_tm1:[1028,1031,1035],mx_concat:1178,mxn:[807,811,840,841],mxnet:[1178,1224],my_func:43,mymodel:1178,name:[43,859,860,1220],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1221],nan:[40,41,43,806,817,818,819,821,822,823,825,826,829,831,835,836,837,855,856,857,935,974,1024],nativ:[15,17,18,19,40,41,43,861,877,879,888,889,900,907,910,911,916,923,924,1078,1178,1179,1184,1185],native_modul:[1184,1185],native_module_class:[1184,1185],nativearrai:[15,18,19,43,807,810,811,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,861,879,905,906,911,915,921,926,927,935,936,937,938,940,941,942,943,945,947,948,949,950,951,953,954,955,956,959,960,961,962,964,965,967,968,972,974,975,976,983,984,985,986,988,989,990,991,994,995,998,999,1000,1001,1002,1007,1009,1010,1013,1015,1016,1018,1019,1020,1021,1023,1024,1025,1026,1027,1078,1122,1124,1131],natur:[817,830,840,843,1061,1071,1224],ncdhw:[1159,1164,1165,1195,1200,1201],nchw:[1159,1162,1163,1166,1195,1198,1199,1202],ncw:[1159,1160,1161,1195,1196,1197],ndarrai:[354,355,356,357,358,359,360,362,363,458,935,1019],ndhwc:[1159,1164,1165,1195,1200,1201],nearest:[935,1000],need:[43,935,948,949,1159,1161,1163,1165,1178,1195,1197,1199,1201,1224],neg:[40,41,88,225,365,494,626,817,825,840,845,846,847,855,856,857,1141,1146,1148,1151,1153],negative_slop:1186,neither:1078,nest:[15,16,17,18,19,40,41,42,861,883,887,893,935,941,1018,1074,1075,1076,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1207,1208,1211,1212,1213,1214,1215,1216],nested_indices_wher:1122,nested_map:[1078,1122],network:[1159,1168,1178,1179,1181,1195,1207,1208,1224],neural:[1159,1178,1181,1195,1220],never:43,new_node_percent_mem:1078,new_node_util:1078,new_node_utils_kei:1078,new_std:[1176,1177,1209,1210],newli:[43,859,860,935,945,946],newlin:[40,41,42],newshap:[935,945,999],next:[813,814,1078,1207,1208,1211,1212,1213,1214,1215,1216],nhwc:[1159,1162,1163,1166,1195,1198,1199,1202],node:[40,41,1122,1123,1130],node_clon:1078,node_dist:1078,node_dist_arrai:1078,node_dist_it:1078,node_in:1078,node_mapp:1078,node_str:1078,node_to_str:1078,node_util:1078,nodedistit:1078,nodedistitem:1078,nodedistnest:1078,nodemanag:[1078,1089],nodemapp:1078,nodemappermultiproc:1078,noinspect:[862,912,913,914,1029,1078],non:[40,41,817,832,833,840,845,855,856,857,859,860,911,925,1207,1208,1211,1215,1221],none:[40,41,42,43,59,61,64,354,355,356,357,359,408,410,411,413,415,422,423,424,425,432,433,434,435,436,437,438,439,441,451,452,458,459,807,808,809,810,812,813,814,815,840,845,846,847,848,849,853,854,855,856,857,859,860,861,870,871,877,878,903,904,905,906,911,918,919,920,935,938,941,957,958,963,966,967,968,973,975,977,978,979,980,981,985,986,992,994,995,998,1001,1002,1003,1004,1009,1010,1011,1012,1021,1022,1027,1028,1031,1033,1035,1036,1037,1043,1044,1048,1051,1054,1056,1074,1075,1076,1077,1078,1122,1123,1126,1130,1131,1134,1135,1136,1137,1138,1141,1143,1144,1145,1146,1147,1148,1149,1159,1161,1163,1165,1168,1169,1170,1171,1176,1177,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],norm:[40,41,840,845,935,948,949,1051,1054,1177,1178,1210,1211,1213],normal:[1134,1137,1176,1177,1209,1210],normalized_idx:[1176,1177],normalized_shap:[1209,1210],notat:[40,41,1141,1142],note:[43,1051,1056],noth:[40,41,1221],notimplementederror:1078,now:[40,41,43,861,906,935,936,1078,1178,1195,1206,1207,1208,1220,1221,1224],np_concat:1178,np_finfo:360,ns_tune_step:1078,num:[410,432,433,935,985,986],num_arrai:[40,41],num_arrays_in_memori:935,num_arrays_on_dev:861,num_band:[935,965],num_channel:[1195,1202],num_chunk:1078,num_chunks_floor:1078,num_class:[1134,1135],num_cpu_cor:861,num_gpu:[131,408,861,1078],num_head:[1159,1170,1195,1206],num_kei:[1159,1170,1171],num_lay:[1195,1204],num_or_size_split:[40,41,410,437,935,1009],num_output:1078,num_queri:[1159,1170,1171],num_sampl:[410,431,458,459,935,984,1044,1045,1134,1135],num_task:[1074,1075,1076,1077],number:[40,41,42,806,813,814,815,817,821,824,840,843,844,855,856,857,859,860,861,897,898,899,911,922,926,927,935,938,947,951,964,965,972,975,984,985,986,989,993,998,1009,1016,1020,1024,1026,1074,1075,1076,1077,1078,1134,1135,1139,1141,1143,1144,1145,1147,1149,1159,1170,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1221,1224],numer:[43,817,821,824,825,826,827,832,833,834,840,842,935,970,971,1003,1004,1011,1012,1061,1068,1186],numhead:[1159,1170],numpi:[40,41,43,354,355,356,357,358,359,360,362,363,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,840,844,935,1019,1051,1056,1141,1142,1178,1220,1221,1224],nwc:[1159,1160,1161,1195,1196,1197],obj:[40,41],object:[40,41,42,59,360,813,814,861,911,915,935,938,941,1028,1122,1125,1127,1128,1129,1132,1133,1134,1140,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1207,1208],object_in:[410,413,935,941],observ:1078,obvious:43,occupi:[813,814,815,935,1001,1002],off:[840,841,935,938],offer:1178,offset:[840,841,1176,1177],often:1221,old:[40,41],on_init:[1195,1206,1207,1208],onc:[43,861,905,1078,1134,1135,1178],one:[40,41,43,840,842,845,846,847,848,849,861,890,891,892,893,905,911,917,935,975,987,994,1001,1002,1010,1013,1051,1054,1078,1141,1142,1143,1144,1145,1146,1147,1148,1149,1178,1221,1224],one_hot:[138,410,544,677,935],onearrai:[935,964],ones:[40,41,77,214,354,483,615,807,810,935,975,994,1178],ones_lik:[77,214,354,483,615,807],ongo:43,onli:[40,41,43,458,817,832,833,840,842,846,847,861,1051,1056,1078,1122,1123,1124,1130,1211,1212,1213,1214,1215,1216,1220,1221],onlin:[43,1178],onto:[861,890,891,906,1078,1122,1126,1131],oom:[861,1078],open:[935,938,1134,1138,1178,1224],opencv:1221,oper:[40,41,43,935,944,959,960,961,985,986,1014,1028,1031,1033,1035,1036,1037,1058,1059,1060,1159,1160,1161,1162,1163,1164,1165,1166,1168],operand:[40,41,817,818,819,821,822,823,829,831,835,836,837,1141,1142],oppos:[935,965],optim:[861,1028,1031,1033,1035,1036,1037,1074,1075,1076,1077,1078,1178,1212,1213,1214,1216,1220,1224],optimizer_upd:1028,option:[15,18,19,40,41,42,43,354,355,356,357,359,807,808,809,810,812,840,845,846,847,848,849,853,854,855,856,857,859,860,861,870,871,879,883,884,885,886,887,890,891,892,893,900,903,904,905,906,910,911,916,921,925,934,935,937,938,940,941,948,949,950,955,957,958,965,966,967,968,972,974,975,982,984,985,986,987,990,992,994,995,998,1001,1002,1005,1007,1009,1010,1011,1012,1013,1021,1023,1024,1027,1028,1031,1033,1034,1035,1036,1037,1039,1044,1048,1051,1054,1056,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1134,1135,1141,1143,1144,1145,1146,1147,1148,1149,1151,1152,1156,1159,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1221],ord:[840,844,845],order:[40,41,42,43,840,845,846,847,851,852,1028,1031,1033,1035,1036,1037,1051,1054,1074,1075,1076,1217,1218],ordered_node_util_kei:1078,org:1224,organ:43,origin:[40,41,42,935,999,1027,1051,1054],other:[40,41,43,859,860,935,937,938,975,1028,1032,1134,1138,1178,1220,1221,1224],otherwis:[15,16,17,18,19,40,41,817,825,826,840,845,848,849,855,856,857,861,878,911,918,919,920,935,944,1021,1022,1025,1028,1034,1039,1043,1074,1075,1076,1078,1141,1143,1144,1145,1147,1149],our:[43,1178,1224],out:[43,458,807,809,811,812,813,814,815,817,818,819,820,821,822,823,825,826,827,829,830,831,832,833,835,836,837,840,841,842,843,845,846,847,848,849,851,852,855,856,857,935,938,1061,1064,1159,1167,1169,1178,1195,1203],out_feat_dim:[1159,1170],out_featur:[1159,1167,1168],out_i:[817,825,826],outdat:1224,outer:[1074,1075,1076,1077],outer_batch_fn:[1074,1075,1076],outer_batch_shap:[1159,1168],outer_cost_fn:[1074,1075,1076],outer_v:[1074,1075,1076],outlin:1221,output:[40,41,43,807,808,809,810,812,846,847,861,870,871,905,935,938,946,966,975,998,1016,1028,1032,1061,1065,1078,1134,1136,1137,1138,1159,1161,1163,1165,1167,1169,1170,1171,1178,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206],output_ax:[861,905,1078],output_axi:1078,output_channel:[1195,1196,1197,1198,1199,1200,1201,1204,1205],output_queu:1078,output_shap:[1159,1161,1163,1165,1195,1197,1199,1201],outsid:[935,947],over:[40,41,840,845,855,856,857,1051,1054,1134,1138,1141,1143,1144,1145,1147,1149,1176,1177,1209,1210],overal:1221,overflow:[935,938],overhead:1221,overrid:[935,994,1027],overriden:[1211,1215],overwrit:[40,41,861,905,1078],overwrite_at_key_chain:[40,41],own:[1178,1221,1224],packag:[43,1221],pad:[935,951,965,1026,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],pad_width:[410,935,951,1026],page:1178,pair:[1159,1171],parallel:[861,870,871,1078],parallelis:[861,870,871,1078],param:[40,41,42,410,423,424,807,808,810,848,849,853,854,861,905,935,936,967,968,994,995,1078,1207,1208,1220],paramet:[15,16,17,18,19,40,41,42,43,807,808,810,817,824,828,834,838,840,841,844,853,854,859,860,861,870,871,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,900,903,904,905,906,907,910,911,915,916,917,921,922,923,924,925,926,927,934,935,937,938,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,958,959,960,961,962,963,964,965,966,967,968,972,974,975,976,978,979,980,982,983,984,985,986,987,988,989,990,991,992,995,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1039,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],parameter:[1134,1137,1138],pardo:1178,pars:[935,952],part:[807,811,1028,1031,1033,1035,1036,1037,1061,1064,1178,1207,1208,1221],partial:[40,41,43,1207,1208],particl:1224,particular:[43,1224],pass:[40,41,42,43,861,870,905,911,916,935,946,1028,1042,1074,1075,1076,1078,1184,1185,1207,1208,1211,1215,1217,1218],pattern:[40,41,935,959,960,961],peopl:43,per:[861,1078,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],percent_used_mem_on_dev:861,percent_used_mem_on_nod:1078,percentag:[861,900,1078],perf_count:1078,perform:[40,41,43,855,856,857,861,935,940,955,959,960,961,978,979,980,984,985,986,1028,1031,1033,1035,1036,1037,1044,1045,1074,1075,1076,1077,1078,1122,1127,1128,1141,1143,1144,1145,1146,1147,1148,1149,1151,1156,1159,1167,1169],period:43,permissable_step:1078,permit:43,permut:[458,935,1015,1021],perpendicular:[935,954],person:[43,1178],physci:1224,pickl:[40,41,1078],pickle_filepath:[40,41],pinv:[317,748,1051],pip:1178,pipelin:1220,pkk:1224,pkkm1:1224,pkm1km1:1224,place:[40,41,43,807,808,809,810,812,861,906,935,964,966,978,979,980,1078,1211,1212,1213,1214,1215,1216],placehold:[43,1122,1131],pleas:[43,458,1051,1056],point:[43,806,807,808,809,812,813,814,817,818,819,821,822,823,829,831,835,836,837,838,840,845,911,926,935,938,1061,1068],popul:[40,41,1134,1135],popular:1224,population_s:[458,459,1134,1135],portabl:[1178,1179],posit:[15,16,17,813,814,817,825,855,856,857,861,883,887,893,935,936,938,964,965,1078,1134,1139,1184,1185],possibi:[40,41],possibl:[43,935,987,1018,1044,1049,1224],post:[1176,1177],post_shap:[40,41],power:[935,970,1003,1012,1186],practic:1178,pre:[861,1078,1178],pre_shap:[40,41],precis:[813,814,817,837],pred:[1172,1173,1174,1175],predict:[1172,1173,1174,1175,1224],prepend:[840,842],preprint:1178,present:[40,41],preserv:[40,41,42,846,847,1028,1039],preserve_typ:[40,41,442,445,1028,1039],press:1178,prevent:[43,1028,1030,1031,1035,1078,1211,1212,1213],prevet:43,previou:[1028,1031,1035],previous:[935,946],prime:1178,print:[40,41,42,861,901,935,996,1178,1220],print_all_arrays_in_memori:935,print_all_arrays_on_dev:861,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1211,1215],prob:[458,459,1134,1135,1159,1167,1195,1203],probabl:[1134,1135,1159,1167,1195,1203],problem:[43,1224],process:[43,861,870,871,900,910,935,992,1078],process_specif:[861,900,910,1078],prod:[40,41,935,960],produc:[861,870,871,1078],product:[40,41,840,842,935,954,955,988,1141,1142,1159,1170,1171,1195,1206],profil:[131,256,408,537,669,861,1078],progress:43,project:[1178,1220,1221,1224],promot:[817,818,819,820,822,823,829,831,835,836,837,840,842,845,1061,1068],prompt:1178,properti:[40,41,360,861,873,1078,1207,1208,1211,1212,1213,1214,1216],provid:[40,41,43,846,847,848,849,855,856,857,859,860,861,878,911,918,919,920,925,934,935,958,994,1002,1027,1028,1031,1033,1035,1036,1037,1043,1078,1178,1195,1204,1211,1212,1213,1214,1215,1216,1221],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1051,1055],pull:[1178,1179],pure:[40,41,1178,1224],purpos:[43,1224],put:1078,pybroadexcept:1078,pyprotectedmemb:1078,pyshadowingnam:[862,912,913,914,1029,1078],python:[40,41,861,900,910,935,938,1078,1178],pytorch:[1028,1031,1033,1035,1036,1037,1051,1056,1178,1211,1212,1213,1214,1215,1216,1220,1221,1224],pyunresolvedrefer:1078,quadrant:[1061,1065],qualiti:43,queri:[40,41,861,894,904,1078,1159,1170,1171,1195,1206],query_dim:[1195,1206],query_kei:[40,41],queue:[40,41,42,861,870,871,935,997,1005,1078],queue_class:[861,870,871,1078],queue_load_s:[40,41,42],queue_timeout:[40,41,42,935,1078],quick:[458,1178],quickli:[43,1220],radian:[817,822,835,1061,1062,1063,1065,1072],rai:[1061,1062],rais:[40,41,855,856,857,935,944,970,1003,1010,1012,1022,1078,1207,1208,1211,1215],ram:[861,900,907,910,1078],randint:[182,326,458,593,769,1134],random:[37,40,41,459,1135,1136,1137,1138,1139,1140,1178],random_crop:1044,random_norm:[182,326,458,593,769,1134],random_uniform:[182,326,458,593,769,1134],randomli:[458,1044,1048,1159,1167,1195,1203],rang:[458,935,938,985,986,1061,1065,1078,1178,1220,1224],rank:[840,845,855,856,857,935,951,1023,1026],rate:[1028,1031,1033,1035,1036,1037,1074,1075,1076,1077,1195,1206,1211,1212,1213,1214,1215,1216],rather:[40,41,43,861,905,935,938,982,1028,1034,1078],ratio:[861,1028,1035,1044,1049,1078,1211,1213],raw:[40,41,1051,1056],raw_delta:1078,reach:[43,861,883,887,893,1078,1122,1131],read:[40,41],readi:[1078,1220],real:[1061,1062,1064],realiti:1221,rearrang:[40,41,935,959,961],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1074,1076],receiv:[43,861,870,871,935,939,987,1078,1195,1205],receivess:[861,1078],receivng:[1074,1077],recev:[1074,1075,1076],recognit:1224,recommend:[817,832,833,1178],rectifi:[1151,1153,1154],recurr:[1159,1169],recurrent_bia:[1159,1169],recurrent_kernel:[1159,1169],recurs:[40,41,1122,1123,1124,1130,1131],reduc:[40,41,848,849,855,856,857,861,905,935,960,1051,1056,1078,1141,1143,1144,1145,1146,1147,1148,1149],reduce_max:[40,41,189,331,460,598,776,1141],reduce_mean:[40,41,189,331,460,598,776,1141,1178,1220],reduce_min:[40,41,189,331,460,598,776,1141],reduce_prod:[40,41,189,331,460,598,776,1141],reduce_std:[40,41,331,1141],reduce_sum:[40,41,189,331,460,598,776,1078,1141],reduce_var:[40,41,189,331,460,598,776,1141],reduct:[39,40,41,410,435,436,855,856,857,935,960,1001,1002,1142,1143,1144,1145,1146,1147,1148,1149,1178],refactor:43,refer:[43,817,830,855,856,857,1028,1030,1031,1051,1057,1195,1205,1224],reflect:43,reflected_oper:[0,13,14],regard:[861,1078],regardless:[40,41,859,860],register_paramet:1220,reimplement:1224,rel:[840,841,846,847,851,852,1028,1031,1033,1035,1036,1037],rel_slice_obj:1078,relat:43,relev:[1211,1212,1213,1214,1215,1216],relu:[785,1151,1152,1153,1178,1220],remain:[43,935,999,1122,1126],remaind:[40,41,935,1009],remov:[40,41,43,840,841,842,848,849,935,1010,1074,1075,1076],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,846,847],rep:[935,1016],repeat:[40,41,43,262,677,935,961,1016,1078,1221],repeated_config_check:[861,1078],repeatedli:[1122,1129],repetit:[40,41,935,998,1016],replac:[40,41,43,458,459,935,947,1001,1002,1134,1135],repo:[43,1178],repositori:43,repres:[43,817,818,819,823,836,838,840,843,911,917,922,1159,1168],represent:[40,41,42,43,806,813,814,815,817,820,861,888,889,911,917,923,924,935,1008,1018,1078],reptil:[1074,1077],reptile_step:1074,request:[1178,1179],requir:[43,817,837,859,860,911,915,935,938,941,1184,1185],resampl:[935,984],reserv:43,reshap:[40,41,458,677,935],reshape_lik:[40,41],respect:[817,820,824,827,828,833,935,962,1028,1030,1031,1032,1033,1035,1036,1037,1051,1056,1061,1068,1074,1075,1076,1077],respond:43,respons:[43,1078],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,840,841,845,848,849,855,856,857,861,870,935,938,962,1001,1002,1013,1051,1054,1058,1059,1060,1061,1068,1078,1141,1143,1144,1145,1146,1147,1148,1149,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1178],ret:1078,ret_dict:1078,ret_fn:[861,870,871,1078],retain:[1028,1032],retain_grad:[442,443,1028,1032],retreiv:1078,retrn:[935,1008],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1074,1075,1076,1077],return_sequ:[1195,1204],return_st:[1195,1204],rev:[935,958],revers:[40,41,846,847,935,958,1021],review:43,right:[40,41,43],rk_e:1224,robot:1178,ronald:1178,root:[43,817,837],round:[262,410,677,817,821,824,837,935,938,1078],row:[935,975,1134,1135],rule:[935,938,1061,1068],run:[43,861,870,1028,1030,1031,1035,1074,1075,1076,1077,1078,1178,1179,1195,1206,1207,1208],safe:[861,870,1078],safety_factor:[861,1078],same:[15,16,17,40,41,43,807,810,811,817,821,840,841,844,846,847,848,849,851,852,861,870,871,905,906,911,915,935,936,950,967,968,994,1000,1001,1002,1013,1027,1028,1034,1039,1061,1064,1074,1075,1076,1078,1141,1142,1159,1160,1161,1162,1163,1164,1165,1166,1178,1195,1196,1197,1198,1199,1200,1201,1202,1220,1224],same_arrai:[40,41],sampl:[935,984,1044,1045,1134,1135,1137,1138,1159,1167,1178,1195,1203],satisfi:[935,941,1051,1053,1057],save:[40,41,935,1006,1017,1044,1046,1207,1208],save_dir:[408,409,861,876,1078],save_weight:[1207,1208],scalar:[840,845,935,947,994,1020,1024],scale:[861,903,904,1028,1036,1078,1159,1167,1170,1171,1176,1177,1195,1203,1206,1211,1214],scaled_dot_product_attent:1159,scatter:[935,994,1001,1002],scatter_flat:[138,262,410,544,677,935],scatter_nd:[138,262,410,544,677,935],scene:[1028,1031,1033,1035,1036,1037],schemat:1178,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[848,849],second:[40,41,817,820,824,827,828,833,840,841,842,861,892,935,942,954,962,997,1005,1015,1028,1030,1031,1035,1074,1076,1078,1211,1212,1213],secondli:1224,sector:[817,818,819],see:[59,360,408,409,458,817,820,827,833,840,845,855,856,857,861,873,874,875,876,911,935,938,985,986,1028,1061,1068,1178,1186,1188,1189,1191,1192,1194],seed:[40,41,182,458,769,1134],seed_valu:[40,41,458,1134,1139],seem:1178,seen_set:[935,973],select:[935,941,1010,1221,1224],self:[40,41,59,360,408,409,861,873,874,875,876,911,1028,1078,1178,1186,1188,1189,1191,1192,1194,1211,1215,1220,1224],sent:1078,seper:[43,935,965],seq:[40,41,42,1141,1142,1207,1208],sequenc:[15,16,17,40,41,42,43,458,859,860,861,870,871,880,881,882,883,884,885,886,887,890,891,905,911,915,935,938,941,943,945,950,951,975,987,990,995,998,999,1002,1009,1013,1016,1021,1026,1028,1032,1044,1048,1049,1051,1054,1078,1122,1133,1134,1136,1138,1141,1143,1144,1145,1146,1147,1148,1149,1159,1160,1161,1162,1163,1164,1165,1166,1176,1177,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1207,1208,1209,1210,1211,1215,1217,1218],sequenti:1178,seri:43,set:[15,18,19,40,41,848,849,851,852,861,890,891,903,904,905,935,937,957,975,1003,1004,1005,1006,1028,1031,1033,1034,1035,1036,1037,1051,1054,1078,1122,1123,1130,1132,1133,1134,1135,1139,1141,1143,1144,1145,1146,1147,1148,1149,1178,1195,1204,1211,1212,1213,1214,1215,1216,1221,1224],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:861,set_default_dtyp:911,set_default_float_dtyp:911,set_default_int_dtyp:911,set_default_nod:1078,set_exception_debug_mod:44,set_framework:[40,41,43,59,1078,1178,1220,1221,1224],set_ivy_backend:[40,41],set_min_bas:935,set_min_denomin:935,set_nest_at_index:1122,set_nest_at_indic:1122,set_queue_timeout:935,set_split_factor:[861,1078],set_stat:[1211,1212,1213,1214,1215,1216],set_tmp_dir:935,set_with_grad:1028,setter:1078,sever:1224,sgd:[1178,1211],shape0:1078,shape:[40,41,43,354,355,356,359,410,422,436,458,677,807,808,809,810,811,812,840,841,842,846,847,848,849,851,852,861,873,911,915,935,936,945,950,951,964,966,968,972,975,994,995,998,999,1000,1001,1002,1008,1010,1013,1026,1027,1044,1048,1051,1053,1056,1061,1064,1065,1078,1134,1136,1137,1138,1141,1142,1159,1161,1163,1165,1195,1197,1198,1199,1200,1201,1202,1209,1210],shape_slic:[40,41],shape_to_tupl:935,share:[40,41,1178,1221],shift:1078,should:[40,41,42,43,458,807,811,817,818,819,820,821,822,823,825,826,827,829,831,832,833,835,836,837,838,840,841,842,845,848,849,859,860,861,935,945,946,952,994,999,1028,1031,1033,1035,1036,1037,1061,1068,1078,1141,1142,1178],show:[40,41,1178,1224],show_mod_in_top_mod:[1207,1208],show_structur:[1207,1208],show_sub_contain:[40,41],show_v:[1207,1208],show_v_in_top_v:[1207,1208],shown:[40,41],shp:1078,shuffl:[40,41,182,458,769,1134],shuffle_h5_fil:[40,41],side:43,sigmoid:[785,1151,1178,1220],sign:[840,843],signatur:[43,59,360,408,409,410,442,447,451,455,456,458,861,873,874,875,876,911,1028,1186,1188,1189,1191,1192,1194],signific:1224,similar:[43,1159,1170,1195,1206],similarli:[1051,1056],simpl:[43,935,963,1178,1221,1224],simpler:43,simplest:1221,simpli:[40,41,43,1178,1221,1224],simultan:1178,sin:[88,225,365,494,626,817,935,965,1061,1072,1221],sinco:1221,sine:[817,819,835,836,1061,1063],singl:[40,41,859,860,861,870,871,890,891,892,893,935,1010,1020,1024,1044,1049,1078,1134,1137,1138,1141,1143,1144,1145,1146,1147,1148,1149,1178,1221,1224],singleton:[840,845,855,856,857],singular:[840,844],sinh:[88,225,365,494,626,817],siren:[1178,1186],situat:43,size:[40,41,42,410,435,840,841,844,848,849,855,856,857,861,884,885,886,887,903,904,905,935,938,945,985,986,1001,1009,1044,1048,1051,1054,1078,1134,1135,1137,1138,1141,1143,1144,1145,1146,1147,1148,1149,1195,1196,1197],size_ordered_arrai:[40,41],skew:[1051,1057],skinv:1224,skip:[40,41],slice:[40,41,935,967,968,1078,1122,1129],slice_kei:[40,41],slice_obj:[40,41,1078],slice_via_kei:[40,41],slide:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],slodget:840,slogdet:[112,239,389,518,650],slope:[1151,1153],small:[1172,1173,1174,1175,1176,1177,1178,1209,1210,1221],smaller:[935,947],smallest:[40,41,813,814,815,817,821,935,940],smallest_norm:[360,813,814],softmax:[198,469,785,1151,1159,1170,1171],softplu:[785,1151],solut:43,solv:1224,some:[40,41,43,935,938,1028,1030,1031,1033,1035,1036,1037,1042,1159,1167,1178,1195,1203,1221,1224],some_backend:43,some_namespac:43,someth:[43,1224],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,840,844,852,1078],sort_by_kei:[40,41],sorting_funct:[851,852],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,354,355,356,357,358,359,360,362,363,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,868,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1222,1223,1224],space:[935,938,965,985,986],spars:[1172,1175],sparse_cross_entropi:1172,spawn:[935,992],special:[43,817,818,819,821,822,823,829,831,835,836,837],specif:[40,41,43,817,832,833,861,903,935,952,959,960,961,992,1074,1075,1076,1077,1078,1134,1140,1178,1207,1208,1220,1221],specifc:[1134,1135],specifi:[40,41,807,808,809,811,812,840,841,845,846,847,848,849,851,852,855,856,857,861,880,881,882,883,884,885,886,887,890,891,895,897,901,904,905,906,911,915,917,935,938,940,941,947,950,951,966,967,968,974,985,986,1013,1023,1026,1051,1054,1078,1122,1127,1128,1132,1133,1141,1142,1143,1144,1145,1146,1147,1148,1149],sphinx:43,split:[40,41,138,262,410,544,677,861,870,884,885,886,887,903,904,905,935,987,1078],split_arg:1078,split_factor:[861,870,1078],split_func_cal:[861,1078],split_siz:1078,spread:[861,893,1078],sqrt:[88,225,365,494,626,817,840,845],squar:[817,837,840,843,935,975,1051,1053],squeez:[138,262,410,544,677,935],stabil:[851,852,935,1011,1012],stabl:[851,852,935,970,971,1003,1004,1011,1012],stable_divid:935,stable_pow:935,stack:[40,41,262,677,807,811,840,841,842,935,1044,1049,1122,1123,1130,1195,1204],stack_imag:[172,313,447,583,744,1044],stacked_dim_s:1078,stage:43,standard:[40,41,813,814,1134,1137,1141,1147,1176,1177,1178,1179,1209,1210],start:[40,41,43,408,409,410,411,432,433,458,861,876,935,938,985,986,1078,1178,1221],starting_index:[40,41],starting_split_factor:[861,1078],state:[1078,1159,1169,1178,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],statement:1221,static_argnam:[410,415,859,860],static_argnum:[410,415,859,860],statistical_funct:[853,854],std:[458,1134,1137],step:[40,41,410,411,861,935,938,985,986,1028,1030,1031,1033,1035,1036,1037,1074,1075,1076,1077,1078,1178,1211,1212,1213,1214,1215,1216,1220,1224],stephen:1178,stick:1178,still:[40,41,43],stochast:[1211,1216],stop:[40,41,408,409,410,411,432,433,861,876,905,935,938,985,986,1028,1031,1033,1035,1036,1037,1039,1074,1075,1076,1077,1078,1211,1212,1213,1214,1215,1216],stop_gradi:[40,41,308,442,578,738,861,905,1028,1031,1033,1035,1036,1037,1074,1075,1076,1077,1078,1211,1212,1213,1214,1215,1216],stopiter:1078,store:[40,41,935,965,1009,1028,1042,1207,1208],store_var:[1207,1208],str:[15,16,17,40,41,42,43,354,355,356,357,359,360,362,363,807,810,813,814,815,859,860,861,870,871,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,905,911,916,917,922,923,924,925,926,927,934,935,941,957,959,960,961,990,992,995,1001,1002,1051,1054,1056,1074,1075,1076,1077,1078,1122,1126,1141,1142,1184,1185,1195,1206,1207,1208],str_to_nod:1078,straight:1221,strength:[1178,1224],stride:[1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],string:[40,41,43,861,877,879,888,889,894,900,906,907,910,911,915,921,923,924,925,934,935,938,941,957,975,995,1027,1078,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202,1207,1208],structur:[40,41,42,43,935,952],structural_diff:[40,41],style:43,sub:[40,41,43,840,841,861,884,885,890,891,892,893,935,1009,1074,1075,1076,1077,1078],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1078,sub_mod:[1207,1208],sub_modul:[1217,1218],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1178,1179,1209,1210,1217,1218],subsequ:43,subset:43,substr:[40,41],suffici:[1051,1056],suggest:1178,suitabl:[1044,1049],sum:[40,41,410,435,436,840,845,861,890,891,892,893,905,935,956,960,1001,1002,1078,1141,1142,1148],summat:[40,41,1141,1142],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,245,247,250,253,254,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,314,315,316,318,319,320,321,323,324,327,328,329,330,332,333,334,335,336,337,338,339,342,344,345,346,347,348,349,350,355,356,357,358,359,361,362,363,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,396,398,401,403,405,406,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,484,485,486,487,488,490,491,492,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,519,520,521,522,523,525,527,530,532,534,535,538,539,540,541,542,543,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,579,580,581,582,584,585,586,588,589,590,594,595,596,597,599,600,601,602,603,604,605,609,610,611,616,617,618,619,620,622,623,624,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,651,652,653,654,655,657,659,662,664,666,667,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,739,740,741,742,743,745,746,747,749,750,751,752,753,754,756,757,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,775,777,778,779,780,781,782,783,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,847,849,852,854,856,857,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1177,1178,1182,1183,1185,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1223,1224],supports_inplac:935,suppos:1224,sure:43,svd:[112,239,389,518,650,840],swap:[40,41,935,1015],swapax:[40,41,544,677,935,1224],symmetr:[1051,1057],syntax:[408,410,442,447,451,455,456,458],tab:1178,take:[43,935,984],taken:[43,840,841,1141,1143,1144,1145,1147,1149],tan:[758,1061,1064],tangent:[817,838,1061,1064,1065,1066,1072,1073,1151,1158],tanh:[88,225,365,494,626,785,817,1061,1151],target:[40,41,861,877,880,881,882,883,884,885,886,887,890,891,892,893,906,1078,1178],target_dict:[40,41],task:[43,1074,1075,1076,1077],team:[43,1224],templat:1178,temporari:[935,1006,1017],tensor:[40,41,43,410,435,436,861,879,911,921,935,938,940,945,985,986,989,991,994,995,999,1001,1002,1009,1027,1078,1134,1135,1136,1159,1167,1169,1178,1195,1203,1205,1211,1212,1213,1214,1215,1216,1220,1221],tensorflow:[43,1051,1056,1159,1161,1163,1165,1178,1195,1197,1199,1201,1221,1224],term:[40,41,43,1159,1169,1178,1195,1205],termcolor:[40,41,42],termin:[40,41,42,1078],test:[43,817,825,826,855,856,857,911,926,927],test_array_api:43,tf_concat:1178,than:[40,41,43,813,814,817,818,821,824,829,831,837,840,842,845,846,847,861,905,935,938,947,982,989,1010,1013,1028,1034,1078,1134,1138,1178,1221],thei:[40,41,1061,1065,1074,1075,1076,1134,1135,1178,1217,1218,1221],them:[1178,1224],themselv:[1122,1123],therefor:43,thi:[40,41,42,43,817,832,833,840,843,848,849,861,883,887,893,900,905,910,935,938,965,997,999,1005,1028,1031,1033,1034,1035,1036,1037,1042,1051,1054,1078,1122,1126,1131,1141,1143,1144,1145,1146,1147,1148,1149,1159,1168,1178,1207,1208,1211,1212,1213,1214,1215,1216,1220,1221,1224],thing:[43,1178],those:[40,41,43,840,844,935,947,1028,1042,1078],though:43,thought:43,threshold:[935,989,991],through:[40,41,43],tick:43,tickbox:43,tile:[262,544,677,935],time:[43,935,1016,1028,1031,1035,1074,1075,1076,1077,1078,1134,1135,1159,1169,1195,1206,1207,1208,1224],timeout:[40,41,42,861,870,871,935,997,1005,1078],timestep:[1159,1169,1195,1204],titl:[43,1178],tmp_dir:935,tmp_dr:[935,1006],to_appli:[40,41],to_clon:[861,1078],to_dev:[40,41,131,256,408,537,669,861],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[861,1078],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1178],to_ivy_modul:[200,793,1178,1184],to_json:[40,41],to_kv_fn:[1159,1170],to_kv_v:[1159,1170],to_list:[40,41,410,677,935],to_multi_dev:[40,41],to_mut:[1122,1124,1131],to_n:[15,40,41,1178],to_nod:1078,to_numpi:[40,41,410,677,935,1178,1220],to_out_fn:[1159,1170],to_out_v:[1159,1170],to_q_fn:[1159,1170],to_q_v:[1159,1170],to_raw:[40,41],to_scalar:[410,677,935],todo:[1078,1178,1179],togeth:[40,41,1217,1218],tool:[1178,1221],top_mod:[1207,1208],topic:1224,torch:[43,859,860,1178,1220,1221,1224],torch_concat:1178,torchfcmodel:1220,total:[40,41,42,861,907,1078],total_mem_on_dev:861,total_mem_on_nod:1078,tpu:[861,908,1078],tpu_is_avail:[408,537,669,861,1078],trace:[40,41,935,982],track:[43,861,1078,1122,1131,1207,1208],track_submod_call_ord:[1207,1208],track_submod_ret:[1207,1208],trail:[1209,1210],train:[1028,1030,1031,1035,1178,1179],trainabl:[1028,1034,1178,1179,1184,1185,1207,1208,1217],trainer:1178,tran:1224,transform:[1159,1167,1168],transpos:[40,41,138,262,410,677,861,892,935,1078,1159,1161,1163,1165,1195,1197,1199,1201],travers:[15,18,19,40,41,1122,1131],treat:[40,41,859,860],tri:[40,41],triangular:[807,811],trigonometr:[1061,1062,1064],tril:[77,214,354,483,615,807],trim_kei:[40,41],trust:[1028,1035,1211,1213],truth:[817,827,828,935,962,1058,1059,1060],try_else_non:935,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[861,1078],tune_dev_alloc:861,tune_dev_split:861,tune_node_alloc:1078,tune_node_split:1078,tune_step:[861,1078],tupl:[15,16,17,18,19,40,41,43,354,355,356,359,807,808,809,812,840,844,845,846,847,853,854,855,856,857,859,860,935,951,965,966,1008,1026,1078,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1136,1141,1143,1144,1145,1146,1147,1148,1149],tutori:43,two:[40,41,807,811,840,841,842,843,844,935,938,942,954,988,1015,1051,1054],type:[15,18,40,41,42,43,59,362,363,408,409,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,835,836,837,838,840,841,842,845,846,847,851,852,855,856,857,861,873,874,875,876,888,889,893,905,911,915,916,917,921,922,923,924,925,926,927,934,935,936,938,941,950,952,962,966,975,982,994,995,1000,1014,1024,1027,1028,1034,1039,1061,1068,1078,1178,1186,1188,1189,1191,1192,1194,1207,1208,1221],types_to_iteratively_nest:[40,41,42],uint8:[1044,1046,1050],uint8_img_to_float_img:1044,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[817,820],underwai:43,unecessari:43,unfairli:43,unif:1078,unifi:[40,41,861,890,891,892,893,905,1078,1178],uniform:[40,41,1134,1135,1137,1138,1186,1188,1189,1192,1193],uniformli:[1134,1136,1138],unify_arrai:1078,unify_it:1078,unify_nest:1078,uniniti:[807,808],union:[15,18,19,40,41,43,354,355,356,357,359,360,362,363,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,879,884,885,886,887,905,906,911,915,916,917,921,922,923,924,925,926,927,934,935,936,937,938,940,941,942,943,945,947,948,949,950,951,953,954,955,956,959,960,961,962,964,965,966,967,968,972,974,975,976,983,984,985,986,988,989,990,991,994,995,998,999,1000,1001,1002,1007,1008,1009,1010,1013,1015,1016,1018,1019,1020,1021,1023,1024,1025,1026,1027,1078,1122,1123,1124,1130,1131],uniqu:[861,870,871,1074,1075,1076,1077,1078,1122,1126],unique_kwarg:1078,unit:[43,861,1061,1062,1063,1078,1151,1152,1153,1154],unitari:[840,844],unless:[935,994,1027],unlik:[861,1078],unnorm:[1134,1135],unpack:[935,1023],unrol:[1159,1169],unset:1221,unset_debug_mod:44,unset_default_devic:861,unset_default_dtyp:911,unset_default_float_dtyp:911,unset_default_int_dtyp:911,unset_framework:[59,1221],unset_with_grad:1028,unstack:[40,41,138,262,410,544,677,935],until:43,unus:[859,860],updat:[40,41,410,435,436,861,870,935,980,1001,1002,1028,1030,1031,1033,1035,1036,1037,1074,1075,1076,1078,1122,1127,1128,1132,1133,1159,1169,1178,1179,1184,1185,1211,1212,1213,1214,1215,1216,1221,1224],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1134,1138],upper_depth:[1207,1208],upstream:43,usabl:[1178,1224],usag:[861,905,1078],use:[40,41,42,43,458,861,870,871,896,908,935,998,1011,1012,1051,1056,1078,1159,1170,1176,1177,1178,1209,1210,1221,1224],used:[40,41,43,458,840,841,861,870,900,903,904,910,911,922,935,970,971,987,1001,1002,1003,1004,1027,1028,1035,1036,1051,1054,1074,1075,1076,1077,1078,1122,1131,1195,1206,1211,1213,1214,1220,1221],used_dev:[861,870],used_mem_on_dev:861,used_mem_on_nod:1078,used_node_str:1078,used_node_strs_dict:1078,useful:[40,41,861,905,1078,1159,1168,1178,1221],user:[1178,1195,1206,1207,1208,1221,1224],uses:1178,using:[40,41,43,1028,1030,1031,1122,1125,1129,1141,1142,1159,1167,1171,1178,1195,1203,1220,1221,1224],util:[861,894,1078],utility_funct:[855,856,857],v_with_top_v_key_chain:[1207,1208],val:[40,41,410,427,428,429,935,978,979,980,1003,1004],valid:[855,856,857,911,916,935,1011,1012,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],valid_dtyp:911,valu:[40,41,410,817,821,824,827,828,840,843,844,845,848,849,851,852,853,854,861,873,904,905,935,936,938,940,947,948,949,951,952,958,962,965,966,967,968,983,985,986,989,991,997,998,999,1000,1001,1002,1003,1004,1005,1021,1024,1025,1026,1028,1032,1035,1044,1050,1058,1059,1060,1061,1069,1070,1071,1074,1075,1076,1078,1122,1126,1127,1128,1132,1133,1134,1137,1138,1141,1143,1145,1159,1170,1171,1176,1177,1195,1206,1209,1210,1211,1213],value_is_nan:935,vanilla:[1074,1076],var_shap:1186,variabl:[15,16,17,18,19,40,41,308,442,578,738,935,944,978,979,980,981,982,1014,1028,1031,1032,1033,1034,1035,1036,1037,1039,1042,1074,1075,1076,1077,1159,1170,1176,1177,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],variable_data:[442,738,1028],varianc:[40,41,1141,1149,1224],varieti:1221,variou:[43,1178],vector:[40,41,451,454,840,842,844,845,935,949,954,1051,1057,1159,1168,1195,1205],vector_norm:[40,41,112,239,389,518,650,840],vector_to_skew_symmetric_matrix:[176,317,451,587,748,1051],verbos:1223,veri:[43,1178],verifi:43,via:[1122,1123,1130,1221],view:[1044,1049],vision:1178,visual:1221,volum:[1159,1164],vw_tm1:[1028,1031,1035],wai:[1221,1224],wait:[40,41,42,43],want:[43,1178,1221,1224],warn:[59,66,67,68,69,70],warp:[447,448,1044,1045],watch:1220,websit:43,weight:[1028,1030,1031,1033,1035,1036,1037,1159,1168,1169,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1207,1208,1211,1213,1214],weight_initi:[1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],weights_path:[1207,1208],well:[40,41,935,974],were:[40,41,1078],what:[43,1178],when:[40,41,42,43,840,844,861,935,946,1012,1025,1078,1178,1207,1208,1221,1224],where:[40,41,43,262,410,677,817,830,840,844,855,856,857,935,938,945,947,951,964,976,983,994,1026,1122,1123,1130,1134,1135],wherea:43,wherebi:[1122,1131],whether:[15,18,19,40,41,42,817,826,855,856,857,859,860,861,879,892,896,900,905,908,910,911,921,925,926,927,934,935,937,942,943,955,958,963,965,972,974,977,981,982,987,1007,1014,1023,1024,1028,1031,1032,1033,1034,1035,1036,1037,1039,1074,1075,1076,1077,1078,1122,1123,1124,1126,1130,1131,1134,1135,1151,1152,1159,1167,1178,1184,1185,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],which:[40,41,42,43,458,807,808,809,810,811,812,813,814,815,840,841,845,846,847,848,849,851,852,853,854,855,856,857,859,860,861,870,871,879,884,885,886,887,890,891,892,893,895,897,901,903,904,905,911,916,921,925,934,935,938,941,950,952,954,955,956,958,966,967,968,969,975,976,984,985,986,993,994,995,996,998,1001,1002,1009,1013,1023,1025,1027,1028,1031,1032,1033,1035,1036,1037,1039,1041,1042,1044,1046,1051,1054,1061,1065,1078,1122,1126,1127,1128,1132,1133,1134,1135,1136,1137,1138,1141,1143,1144,1145,1146,1147,1148,1149,1151,1156,1159,1170,1171,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1220,1221],whilst:43,whitespac:[40,41,42],who:43,whose:[807,811,817,818,819,822,823,835,836,838,840,841,846,847,935,941,946,1141,1142,1143,1144,1145,1147,1149],why:[1178,1179],width:[1044,1049],wiki:1224,wikipedia:1224,window:[1044,1049,1159,1160,1161,1162,1163,1164,1165,1166,1195,1196,1197,1198,1199,1200,1201,1202],wise:[40,41,817,820,824,827,828,832,833,935,947,962,989,991,1000,1028,1031,1033,1035,1037,1058,1059,1060,1061,1062,1063,1064,1065,1068,1069,1070,1071,1072,1151,1152,1153,1154,1155,1156,1157,1158],wish:1221,with_bia:[1195,1205],with_cal:[935,958],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1028,1038],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1078,with_partial_v:[1207,1208],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,410,437,935,1009,1078],with_to_kv_fn:[1195,1206],with_to_out_fn:[1195,1206],with_to_q_fn:[1195,1206],within:[15,18,19,43,840,844,935,938,1134,1138],without:[40,41,43,935,997,999,1005,1122,1124,1221],wonder:1178,word:[15,16,17,935,938,1134,1138,1184,1185],work:[43,1220],worker:[861,870,871,1078],worker_class:[861,870,871,1078],worker_kwarg:1078,would:[43,1151,1156,1178,1221,1224],wrap:[15,40,41,42,43,408,410,442,447,451,455,456,458,935,946,1028,1042,1178],write:[40,41,43,1178,1179,1224],written:[43,1178,1224],ws_new:[1028,1031,1033,1035,1036,1037],x1_i:[817,820,824,827,828,833,935,962,1061,1068],x2_i:[817,820,824,827,828,833,935,962,1061,1068],x_feat_dim:[1159,1170],x_i:[817,818,819,821,822,823,825,826,829,831,832,835,836,837,838],x_in:[1178,1220],x_inv:[1051,1053],x_max:[410,935,947],x_min:[410,935,947],x_sub:1078,xkk:1224,xkkm1:1224,xkm1km1:1224,xs0:1078,xs_t:1078,year:[1178,1224],yet:[1122,1131,1224],yield:[935,1025],you:[43,1178,1220,1221,1224],your:[1178,1179,1220,1221,1224],your_awesome_project:1221,yourself:[43,1178],yourslef:43,youtub:43,zero:[40,41,77,214,354,483,615,807,808,811,817,832,833,840,842,845,855,856,857,935,951,994,1001,1002,1026,1027,1028,1030,1031,1035,1036,1159,1167,1178,1186,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1211,1212,1213,1214],zero_pad:[262,410,544,677,935],zeros_lik:[138,262,410,544,677,935],zip:1078,zk_e:1224},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","floor_divide","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","floor_divide","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","floor_divide","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","floor_divide","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","floor_divide","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":958,"function":[77,83,88,111,118,120,122,123,125,127,214,220,225,238,244,246,248,249,251,252,354,360,365,388,395,397,399,400,402,404,483,489,494,517,524,526,528,529,531,533,615,621,626,649,656,658,660,661,663,665,807,813,817,839,846,848,850,851,853,855],Ones:1191,Using:1221,abs:[263,545,678,936],aco:[759,1062],acosh:[89,226,366,495,627,818],activ:[198,341,469,607,785,1151,1181],adam:1212,adam_step:1030,adam_upd:1031,algebra:[112,176,239,317,389,451,518,587,650,748,840],all:[128,253,405,534,666,856],all_equ:937,all_nested_indic:1123,ani:[129,254,406,535,667,857],api:[0,43,75,212,352,481,613,805],arang:[139,264,411,546,679,938],arg_nam:939,argmax:[121,247,398,527,659,849],argmin:[140,412,547,680,940],args_to_ivi:16,args_to_n:17,argsort:[124,250,401,530,662,852],arithmet:1,arrai:[0,3,43,75,141,212,265,352,413,481,548,613,681,805,941],array_equ:[266,682,942],arrays_equ:943,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[760,1063],asinh:[90,367,496,628,819],assert_supports_inplac:944,atan2:[762,1065],atan:[761,1064],atanh:[763,1066],attribut:5,backend:[43,73],bilinear_resampl:[173,314,448,584,745,1045],binary_cross_entropi:1173,bitwis:7,bitwise_and:[91,227,368,497,629,820],broadcast_to:[267,683,945],builder:51,cache_fn:946,cast:[142,268,414,549,684,915],ceil:[92,228,369,498,630,821],choleski:[749,1052],choose_random_framework:61,citat:1178,clear_framework_stack:62,clear_mem_on_dev:[671,877],clip:[269,685,947],clip_matrix_norm:948,clip_vector_norm:949,clone:1093,clone_arrai:1094,clone_it:1095,clone_nest:1096,clonedit:1080,cloneditem:1079,clonednest:1081,closest_valid_dtyp:916,code:1224,comparison:9,compil:[270,415,686,859,860],concaten:[143,271,416,550,687,950],constant:[76,213,353,482,614,806],constant_pad:[272,551,688,951],contain:[40,41],container_typ:[689,952],content:1178,contribut:43,conv1d:[204,344,473,797,1160,1196],conv1d_transpos:[205,345,474,798,1161],conv1dtranspos:1197,conv2d:[206,346,475,609,799,1162,1198],conv2d_transpos:[207,347,476,800,1163],conv2dtranspos:1199,conv3d:[208,348,477,610,801,1164,1200],conv3d_transpos:[209,349,478,802,1165],conv3dtranspos:1201,convers:15,convert:[200,793,1184],convert_dtyp:917,copy_arrai:[690,953],copy_nest:1124,core:[130,255,407,536,668,858],cos:[93,370,499,631,822],cosh:[94,371,500,632,764,823,1067],cprint:1223,creat:43,creation:[77,214,354,483,615,807],cross:[273,691,954],cross_entropi:1174,cumprod:[144,274,417,692,955],cumsum:[693,956],current_framework:63,current_framework_str:[694,957],data:[83,87,220,224,360,364,489,493,621,625,813,816],debug_mod:45,debugg:44,default_devic:878,default_dtyp:918,default_float_dtyp:919,default_int_dtyp:920,default_nod:1097,depthwise_conv2d:[210,350,479,611,803,1166],depthwiseconv2d:1202,design:43,dev:[133,258,539,672,879],dev_clon:880,dev_clone_arrai:881,dev_clone_it:882,dev_clone_nest:883,dev_dist:884,dev_dist_arrai:885,dev_dist_it:886,dev_dist_nest:887,dev_from_str:[134,259,540,673,888],dev_to_str:[135,260,541,674,889],dev_unifi:890,dev_unify_arrai:891,dev_unify_it:892,dev_unify_nest:893,dev_util:894,devclonedit:864,devcloneditem:863,devclonednest:865,devdistit:867,devdistitem:866,devdistnest:868,devic:[20,131,256,408,537,669,861],devmapp:870,devmappermultiproc:871,diagon:[113,240,390,519,651,841],distribute_nest:1098,divid:1068,document:1178,dropout:[1167,1203],dtype:[145,275,418,552,695,911,921],dtype_bit:[146,276,419,553,696,922],dtype_from_str:[147,277,420,554,697,923],dtype_to_str:[148,278,421,555,698,924],ecosystem:52,einops_rearrang:959,einops_reduc:960,einops_repeat:961,einsum:[190,332,461,599,777,1142],elementwis:[88,225,365,494,626,817],empti:[78,215,355,484,616,808],equal:[95,372,501,633,962],erf:[457,765,1069],execute_with_gradi:[170,309,443,579,739,1032],exist:963,exp:[766,1070],expand_dim:[279,699,964],finfo:[85,222,362,491,623,814],firstlayersiren:1188,flip:[119,245,396,525,657,847],float_img_to_uint8_img:1046,floor_divid:[96,373,502,634,824],fomaml_step:1075,fork:43,fourier_encod:965,framework:59,full:[149,280,422,556,700,966],func:72,gather:[150,281,423,557,701,967],gather_nd:[151,282,424,558,702,968],geglu:1182,gelu:[342,470,786,1152,1183],gener:[22,138,262,410,544,677,935],get_all_arrays_in_memori:969,get_all_arrays_on_dev:895,get_framework:64,get_min_bas:970,get_min_denomin:971,get_num_dim:[703,972],get_referrers_recurs:973,glorotuniform:1189,gpu_is_avail:[896,1099],gradient:[24,169,308,442,578,738,1028],gradient_descent_upd:1033,gradient_imag:[174,315,449,585,746,1047],gym:53,handler:59,has_nan:974,ident:[152,283,425,559,704,975],iinfo:[86,223,363,492,624,815],imag:[26,172,313,447,583,744,1044],index_nest:1125,indices_wher:[153,284,426,705,976],initi:1186,inplac:11,inplace_arrays_support:977,inplace_decr:[154,285,427,560,706,978],inplace_incr:[155,286,428,561,707,979],inplace_upd:[156,287,429,562,708,980],inplace_variables_support:981,inv:[750,1053],invalid_dtyp:925,is_arrai:[157,288,430,563,709,982],is_float_dtyp:926,is_int_dtyp:927,is_vari:[171,310,444,580,740,1034],isfinit:[97,229,374,503,635,825],isinf:[289,564,710,983],isnan:[98,230,375,504,636,826],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,804,1220,1221,1224],ivymodul:[201,794],jax:74,keep:43,lamb:1213,lamb_upd:1035,lar:1214,lars_upd:1036,layer:[203,343,472,608,796,1159,1195],layer_norm:1177,layernorm:1210,leaky_relu:[787,1153],less:[99,231,376,505,637,827],less_equ:[100,377,506,638,828],linalg:[28,1051],linear:[112,176,239,317,389,451,518,587,650,748,840,1168,1205],linear_resampl:[158,290,431,565,711,984],linspac:[159,291,432,566,712,985],list:43,log10:[101,378,507,639,829],log1p:[102,379,508,640,830],log2:[103,380,509,641,831],log:[767,1071],logic:[30,180,322,455,591,755,1058],logical_and:[323,756,1059],logical_not:[104,232,381,510,642,832],logical_or:[105,324,382,511,643,757,833,1060],logspac:[160,292,433,567,713,986],loss:1172,lstm:1204,lstm_updat:1169,maml_step:1076,manipul:[118,244,395,524,656,846],map:1126,map_nest_at_index:1127,map_nest_at_indic:1128,match_kwarg:987,math:[32,181,325,456,592,758,1061],matmul:[114,293,391,520,652,842,988],matrix_norm:[177,318,452,588,751,1054],maximum:[714,989],mech:54,memori:55,meshgrid:[294,715,990],meta:[34,1074],method:[111,238,388,517,649,839],min:[126,403,532,664,854],minimum:[716,991],model:56,modul:[1207,1208,1220],multi:1078,multi_head_attent:1170,multi_index_nest:1129,multidevcontain:42,multidevit:874,multidevitem:873,multidevnest:875,multiheadattent:1206,multinodeit:1084,multinodeitem:1083,multinodenest:1085,multinomi:[183,327,459,594,770,1135],multiprocess:[717,992],mxnet:211,nativ:1220,neg:[106,233,383,512,644,834],nest:1122,nested_indices_wher:1130,nested_map:1131,network:1220,next:1178,node:[1078,1100],node_dist:1101,node_dist_arrai:1102,node_dist_it:1103,node_str:1104,node_to_str:1105,node_util:1106,nodedistit:1087,nodedistitem:1086,nodedistnest:1088,nodemapp:1090,nodemappermultiproc:1091,norm:[1176,1209],num_arrays_in_memori:993,num_arrays_on_dev:897,num_cpu_cor:898,num_gpu:[136,899,1107],numpi:351,nutshel:1178,one_hot:[161,434,568,718,994],ones:[79,216,356,485,617,809,995],ones_lik:[80,217,357,486,618,810],oper:[1,3,7,9,11,13],optim:[1211,1215],optimizer_upd:1037,overview:1178,percent_used_mem_on_dev:900,percent_used_mem_on_nod:1108,pinv:[319,752,1055],portabl:1224,print_all_arrays_in_memori:996,print_all_arrays_on_dev:901,profil:[132,257,409,538,670,876,1092],pull:43,queue_timeout:997,randint:[184,328,595,771,1136],random:[36,182,326,458,593,769,1134],random_crop:1048,random_norm:[185,329,596,772,1137],random_uniform:[186,330,597,773,1138],reduce_max:[191,333,462,600,778,1143],reduce_mean:[192,334,463,601,779,1144],reduce_min:[193,335,464,602,780,1145],reduce_prod:[194,336,465,603,781,1146],reduce_std:[337,1147],reduce_sum:[195,338,466,604,782,1148],reduce_var:[196,339,467,605,783,1149],reduct:[38,189,331,460,598,776,1141],reflect:13,relu:[788,1154],repeat:[295,719,998],reptile_step:1077,request:43,reshap:[720,999],robot:57,round:[296,721,1000],run:1221,scaled_dot_product_attent:1171,scatter_flat:[162,297,435,569,722,1001],scatter_nd:[163,298,436,570,723,1002],search:[120,246,397,526,658,848],seed:[187,774,1139],sequenti:[1217,1218],set:[122,248,399,528,660,850],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:902,set_default_dtyp:928,set_default_float_dtyp:929,set_default_int_dtyp:930,set_default_nod:1109,set_exception_debug_mod:48,set_framework:65,set_min_bas:1003,set_min_denomin:1004,set_nest_at_index:1132,set_nest_at_indic:1133,set_queue_timeout:1005,set_split_factor:[903,1110],set_tmp_dir:1006,set_with_grad:1038,sgd:1216,shape:[724,1007],shape_to_tupl:1008,shuffl:[188,775,1140],sigmoid:[789,1155],signatur:[111,238,388,517,649,839],sin:[107,234,384,513,645,835],sinh:[108,235,385,514,646,836],siren:1192,slodget:843,slogdet:[115,241,392,521,653],softmax:[199,471,790,1156],softplu:[791,1157],sort:[123,249,400,529,661,851],sparse_cross_entropi:1175,split:[164,299,437,571,725,1009],split_factor:[904,1111],split_func_cal:[905,1112],sqrt:[109,236,386,515,647,837],squeez:[165,300,438,572,726,1010],stable_divid:1011,stable_pow:1012,stack:[301,727,1013],stack_imag:[175,316,450,586,747,1049],standard:43,statist:[125,251,402,531,663,853],stop_gradi:[311,445,581,741,1039],str_to_nod:1113,submodul:43,supports_inplac:1014,svd:[116,242,393,522,654,844],swapax:[573,728,1015],tan:[768,1072],tanh:[110,237,387,516,648,792,838,1073,1158],tensorflow:480,tile:[302,574,729,1016],tmp_dir:1017,to_dev:[137,261,542,675,906],to_ivi:18,to_ivy_modul:[202,795,1185],to_list:[730,1018],to_n:19,to_nod:1114,to_numpi:[731,1019],to_scalar:[732,1020],todo:43,torch:612,total_mem_on_dev:907,total_mem_on_nod:1115,tpu_is_avail:[543,676,908,1116],train:1220,trainabl:1220,transpos:[166,303,439,733,1021],tree:1178,tril:[81,218,358,487,619,811],try_else_non:1022,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,360,364,489,493,621,625,813,816],uint8_img_to_float_img:1050,unifi:1117,unify_arrai:1118,unify_it:1119,unify_nest:1120,unset_debug_mod:49,unset_default_devic:909,unset_default_dtyp:931,unset_default_float_dtyp:932,unset_default_int_dtyp:933,unset_framework:71,unset_with_grad:1040,unstack:[167,304,440,575,734,1023],updat:43,used_mem_on_dev:910,used_mem_on_nod:1121,util:[127,252,404,533,665,855],valid_dtyp:934,value_is_nan:1024,variabl:[312,446,582,742,1041],variable_data:[743,1042],vector_norm:[117,243,394,523,655,845],vector_to_skew_symmetric_matrix:[179,321,454,590,754,1057],verbos:1222,vision:58,where:[305,735,1025,1178],why:1224,with_grad:1043,wrapper:72,write:1221,your:43,zero:[82,219,359,488,620,812,1194],zero_pad:[306,576,736,1026],zeros_lik:[168,307,441,577,737,1027]}})