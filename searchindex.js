Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/floor_divide","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/floor_divide","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/floor_divide","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/floor_divide","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/floor_divide.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/floor_divide.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/floor_divide.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/floor_divide.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[827,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[385,0,0,"-"],creation_functions:[386,0,0,"-"],data_type_functions:[389,0,0,"-"],data_types:[393,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[387,2,1,""],zeros:[388,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[389,1,1,""],finfo:[391,2,1,""],iinfo:[392,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[389,3,1,""],bits:[389,3,1,""],eps:[389,3,1,""],max:[389,3,1,""],min:[389,3,1,""],smallest_normal:[389,3,1,""]},"ivy.functional.backends.numpy.core":{device:[430,0,0,"-"],general:[432,0,0,"-"],gradients:[466,0,0,"-"],image:[471,0,0,"-"],linear_algebra:[475,0,0,"-"],logic:[479,0,0,"-"],math:[480,0,0,"-"],random:[482,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[431,1,1,""],clear_mem_on_dev:[430,2,1,""],dev:[430,2,1,""],dev_from_str:[430,2,1,""],dev_to_str:[430,2,1,""],gpu_is_available:[430,2,1,""],num_gpus:[430,2,1,""],to_dev:[430,2,1,""],tpu_is_available:[430,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[431,3,1,""],start:[431,3,1,""],stop:[431,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[432,2,1,""],arange:[433,2,1,""],argmax:[434,2,1,""],argmin:[435,2,1,""],array:[436,2,1,""],asarray:[432,2,1,""],astype:[432,2,1,""],cast:[437,2,1,""],ceil:[432,2,1,""],clip:[432,2,1,""],compile:[438,2,1,""],concatenate:[439,2,1,""],constant_pad:[432,2,1,""],container_types:[432,2,1,""],copy_array:[432,2,1,""],cumprod:[440,2,1,""],current_framework_str:[432,2,1,""],dtype:[441,2,1,""],dtype_bits:[442,2,1,""],dtype_from_str:[443,2,1,""],dtype_to_str:[444,2,1,""],equal:[432,2,1,""],floor:[432,2,1,""],floormod:[432,2,1,""],full:[445,2,1,""],gather:[446,2,1,""],gather_nd:[447,2,1,""],get_num_dims:[432,2,1,""],identity:[448,2,1,""],indices_where:[449,2,1,""],inplace_arrays_supported:[432,2,1,""],inplace_decrement:[450,2,1,""],inplace_increment:[451,2,1,""],inplace_update:[452,2,1,""],inplace_variables_supported:[432,2,1,""],is_array:[453,2,1,""],linear_resample:[454,2,1,""],linspace:[455,2,1,""],logspace:[456,2,1,""],matmul:[432,2,1,""],meshgrid:[432,2,1,""],multiprocessing:[432,2,1,""],one_hot:[457,2,1,""],ones_like:[458,2,1,""],round:[432,2,1,""],scatter_flat:[459,2,1,""],scatter_nd:[460,2,1,""],shape:[432,2,1,""],split:[461,2,1,""],squeeze:[462,2,1,""],to_list:[432,2,1,""],to_numpy:[432,2,1,""],to_scalar:[432,2,1,""],transpose:[463,2,1,""],unstack:[464,2,1,""],where:[432,2,1,""],zero_pad:[432,2,1,""],zeros_like:[465,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[467,2,1,""],is_variable:[468,2,1,""],stop_gradient:[469,2,1,""],variable:[470,2,1,""],variable_data:[466,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[472,2,1,""],gradient_image:[473,2,1,""],stack_images:[474,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[476,2,1,""],qr:[477,2,1,""],vector_to_skew_symmetric_matrix:[478,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[481,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[483,2,1,""],randint:[482,2,1,""],random_normal:[482,2,1,""],random_uniform:[482,2,1,""],seed:[482,2,1,""],shuffle:[482,2,1,""]},"ivy.functional.ivy":{array_api:[828,0,0,"-"],core:[863,0,0,"-"],nn:[1204,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[829,0,0,"-"],creation_functions:[830,0,0,"-"],data_type_functions:[833,0,0,"-"],data_types:[836,0,0,"-"],elementwise_functions:[837,0,0,"-"],function_and_method_signatures:[849,0,0,"-"],linear_algebra:[850,0,0,"-"],manipulation_functions:[853,0,0,"-"],searching_functions:[855,0,0,"-"],set_functions:[856,0,0,"-"],sorting_functions:[857,0,0,"-"],statistical_functions:[859,0,0,"-"],utility_functions:[860,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[829,4,1,""],nan:[829,4,1,""],pi:[829,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[831,2,1,""],zeros:[832,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[834,2,1,""],iinfo:[835,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[838,2,1,""],bitwise_and:[839,2,1,""],cos:[840,2,1,""],cosh:[841,2,1,""],floor_divide:[842,2,1,""],isfinite:[843,2,1,""],isnan:[844,2,1,""],less:[845,2,1,""],log2:[846,2,1,""],logical_not:[847,2,1,""],sqrt:[848,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[851,2,1,""],vector_norm:[852,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[854,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[858,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[861,2,1,""],any:[862,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[864,0,0,"-"],compilation:[903,0,0,"-"],device:[905,0,0,"-"],dtype:[955,0,0,"-"],general:[979,0,0,"-"],gradients:[1078,0,0,"-"],image:[1094,0,0,"-"],linalg:[1101,0,0,"-"],logic:[1109,0,0,"-"],math:[1112,0,0,"-"],meta:[1128,0,0,"-"],multi_node:[1132,0,0,"-"],nest:[1176,0,0,"-"],random:[1188,0,0,"-"],reductions:[1195,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[865,2,1,""],builtin_add:[866,2,1,""],builtin_and:[867,2,1,""],builtin_bool:[868,2,1,""],builtin_contains:[869,2,1,""],builtin_deepcopy:[870,2,1,""],builtin_dir:[871,2,1,""],builtin_eq:[872,2,1,""],builtin_float:[873,2,1,""],builtin_floordiv:[874,2,1,""],builtin_ge:[875,2,1,""],builtin_getattr:[876,2,1,""],builtin_getattribute:[877,2,1,""],builtin_getitem:[878,2,1,""],builtin_gt:[879,2,1,""],builtin_int:[880,2,1,""],builtin_invert:[881,2,1,""],builtin_le:[882,2,1,""],builtin_lt:[883,2,1,""],builtin_mul:[884,2,1,""],builtin_ne:[885,2,1,""],builtin_neg:[886,2,1,""],builtin_or:[887,2,1,""],builtin_pos:[888,2,1,""],builtin_pow:[889,2,1,""],builtin_radd:[890,2,1,""],builtin_rand:[891,2,1,""],builtin_rfloordiv:[892,2,1,""],builtin_rmul:[893,2,1,""],builtin_ror:[894,2,1,""],builtin_rpow:[895,2,1,""],builtin_rsub:[896,2,1,""],builtin_rtruediv:[897,2,1,""],builtin_rxor:[898,2,1,""],builtin_setitem:[899,2,1,""],builtin_sub:[900,2,1,""],builtin_truediv:[901,2,1,""],builtin_xor:[902,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[904,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[905,1,1,""],DevClonedItem:[907,1,1,""],DevClonedIter:[908,1,1,""],DevClonedNest:[909,1,1,""],DevDistItem:[910,1,1,""],DevDistIter:[911,1,1,""],DevDistNest:[912,1,1,""],DevManager:[905,1,1,""],DevMapper:[914,1,1,""],DevMapperMultiProc:[915,1,1,""],MultiDev:[905,1,1,""],MultiDevItem:[917,1,1,""],MultiDevIter:[918,1,1,""],MultiDevNest:[919,1,1,""],Profiler:[920,1,1,""],clear_mem_on_dev:[921,2,1,""],default_device:[922,2,1,""],dev:[923,2,1,""],dev_clone:[924,2,1,""],dev_clone_array:[925,2,1,""],dev_clone_iter:[926,2,1,""],dev_clone_nest:[927,2,1,""],dev_dist:[928,2,1,""],dev_dist_array:[929,2,1,""],dev_dist_iter:[930,2,1,""],dev_dist_nest:[931,2,1,""],dev_from_str:[932,2,1,""],dev_to_str:[933,2,1,""],dev_unify:[934,2,1,""],dev_unify_array:[935,2,1,""],dev_unify_iter:[936,2,1,""],dev_unify_nest:[937,2,1,""],dev_util:[938,2,1,""],get_all_arrays_on_dev:[939,2,1,""],gpu_is_available:[940,2,1,""],num_arrays_on_dev:[941,2,1,""],num_cpu_cores:[942,2,1,""],num_gpus:[943,2,1,""],percent_used_mem_on_dev:[944,2,1,""],print_all_arrays_on_dev:[945,2,1,""],set_default_device:[946,2,1,""],set_split_factor:[947,2,1,""],split_factor:[948,2,1,""],split_func_call:[949,2,1,""],to_dev:[950,2,1,""],total_mem_on_dev:[951,2,1,""],tpu_is_available:[952,2,1,""],unset_default_device:[953,2,1,""],used_mem_on_dev:[954,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[905,3,1,""],da_tune_step:[905,3,1,""],dim_size:[905,3,1,""],ds_tune_step:[905,3,1,""],map:[905,3,1,""],repeated_config_check:[905,3,1,""],tune_step:[905,3,1,""],tuned:[905,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[914,3,1,""],map:[914,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[917,3,1,""],items:[917,3,1,""],keys:[917,3,1,""],shape:[917,3,1,""],values:[917,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[918,3,1,""],at_dev:[918,3,1,""],at_devs:[918,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[919,3,1,""],at_dev:[919,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[920,3,1,""],start:[920,3,1,""],stop:[920,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[955,1,1,""],DefaultFloatDtype:[955,1,1,""],DefaultIntDtype:[955,1,1,""],astype:[955,2,1,""],cast:[959,2,1,""],closest_valid_dtype:[960,2,1,""],convert_dtype:[961,2,1,""],default_dtype:[962,2,1,""],default_float_dtype:[963,2,1,""],default_int_dtype:[964,2,1,""],dtype:[965,2,1,""],dtype_bits:[966,2,1,""],dtype_from_str:[967,2,1,""],dtype_to_str:[968,2,1,""],invalid_dtype:[969,2,1,""],is_float_dtype:[970,2,1,""],is_int_dtype:[971,2,1,""],set_default_dtype:[972,2,1,""],set_default_float_dtype:[973,2,1,""],set_default_int_dtype:[974,2,1,""],unset_default_dtype:[975,2,1,""],unset_default_float_dtype:[976,2,1,""],unset_default_int_dtype:[977,2,1,""],valid_dtype:[978,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1004,2,1,""],abs:[980,2,1,""],all_equal:[981,2,1,""],arange:[982,2,1,""],arg_names:[983,2,1,""],argmax:[984,2,1,""],argmin:[985,2,1,""],array:[986,2,1,""],array_equal:[987,2,1,""],arrays_equal:[988,2,1,""],asarray:[979,2,1,""],assert_supports_inplace:[989,2,1,""],broadcast_to:[990,2,1,""],cache_fn:[991,2,1,""],ceil:[992,2,1,""],clip:[993,2,1,""],clip_matrix_norm:[994,2,1,""],clip_vector_norm:[995,2,1,""],concatenate:[996,2,1,""],constant_pad:[997,2,1,""],container_types:[998,2,1,""],copy_array:[999,2,1,""],cross:[1000,2,1,""],cumprod:[1001,2,1,""],cumsum:[1002,2,1,""],current_framework_str:[1003,2,1,""],einops_rearrange:[1005,2,1,""],einops_reduce:[1006,2,1,""],einops_repeat:[1007,2,1,""],equal:[1008,2,1,""],exists:[1009,2,1,""],expand_dims:[1010,2,1,""],flip:[1011,2,1,""],floor:[1012,2,1,""],floormod:[1013,2,1,""],fourier_encode:[1014,2,1,""],full:[1015,2,1,""],gather:[1016,2,1,""],gather_nd:[1017,2,1,""],get_all_arrays_in_memory:[1018,2,1,""],get_min_base:[1019,2,1,""],get_min_denominator:[1020,2,1,""],get_num_dims:[1021,2,1,""],get_referrers_recursive:[1022,2,1,""],has_nans:[1023,2,1,""],identity:[1024,2,1,""],indices_where:[1025,2,1,""],inplace_arrays_supported:[1026,2,1,""],inplace_decrement:[1027,2,1,""],inplace_increment:[1028,2,1,""],inplace_update:[1029,2,1,""],inplace_variables_supported:[1030,2,1,""],is_array:[1031,2,1,""],isinf:[1032,2,1,""],linear_resample:[1033,2,1,""],linspace:[1034,2,1,""],logspace:[1035,2,1,""],match_kwargs:[1036,2,1,""],matmul:[1037,2,1,""],maximum:[1038,2,1,""],meshgrid:[1039,2,1,""],minimum:[1040,2,1,""],multiprocessing:[1041,2,1,""],num_arrays_in_memory:[1042,2,1,""],one_hot:[1043,2,1,""],ones:[1044,2,1,""],ones_like:[1045,2,1,""],print_all_arrays_in_memory:[1046,2,1,""],queue_timeout:[1047,2,1,""],repeat:[1048,2,1,""],reshape:[1049,2,1,""],round:[1050,2,1,""],scatter_flat:[1051,2,1,""],scatter_nd:[1052,2,1,""],set_min_base:[1053,2,1,""],set_min_denominator:[1054,2,1,""],set_queue_timeout:[1055,2,1,""],set_tmp_dir:[1056,2,1,""],shape:[1057,2,1,""],shape_to_tuple:[1058,2,1,""],split:[1059,2,1,""],squeeze:[1060,2,1,""],stable_divide:[1061,2,1,""],stable_pow:[1062,2,1,""],stack:[1063,2,1,""],supports_inplace:[1064,2,1,""],swapaxes:[1065,2,1,""],tile:[1066,2,1,""],tmp_dir:[1067,2,1,""],to_list:[1068,2,1,""],to_numpy:[1069,2,1,""],to_scalar:[1070,2,1,""],transpose:[1071,2,1,""],try_else_none:[1072,2,1,""],unstack:[1073,2,1,""],value_is_nan:[1074,2,1,""],where:[1075,2,1,""],zero_pad:[1076,2,1,""],zeros_like:[1077,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1078,1,1,""],adam_step:[1080,2,1,""],adam_update:[1081,2,1,""],execute_with_gradients:[1082,2,1,""],gradient_descent_update:[1083,2,1,""],is_variable:[1084,2,1,""],lamb_update:[1085,2,1,""],lars_update:[1086,2,1,""],optimizer_update:[1087,2,1,""],set_with_grads:[1088,2,1,""],stop_gradient:[1089,2,1,""],unset_with_grads:[1090,2,1,""],variable:[1091,2,1,""],variable_data:[1092,2,1,""],with_grads:[1093,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1078,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1095,2,1,""],float_img_to_uint8_img:[1096,2,1,""],gradient_image:[1097,2,1,""],random_crop:[1098,2,1,""],stack_images:[1099,2,1,""],uint8_img_to_float_img:[1100,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1102,2,1,""],inv:[1103,2,1,""],matrix_norm:[1104,2,1,""],pinv:[1105,2,1,""],qr:[1106,2,1,""],svd:[1107,2,1,""],vector_to_skew_symmetric_matrix:[1108,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1110,2,1,""],logical_or:[1111,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1113,2,1,""],acosh:[1114,2,1,""],asin:[1115,2,1,""],atan2:[1117,2,1,""],atan:[1116,2,1,""],atanh:[1118,2,1,""],cosh:[1119,2,1,""],divide:[1120,2,1,""],erf:[1121,2,1,""],exp:[1122,2,1,""],log:[1123,2,1,""],sin:[1124,2,1,""],sinh:[1125,2,1,""],tan:[1126,2,1,""],tanh:[1127,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1129,2,1,""],maml_step:[1130,2,1,""],reptile_step:[1131,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1132,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1177,2,1,""],copy_nest:[1178,2,1,""],index_nest:[1179,2,1,""],map:[1180,2,1,""],map_nest_at_index:[1181,2,1,""],map_nest_at_indices:[1182,2,1,""],multi_index_nest:[1183,2,1,""],nested_indices_where:[1184,2,1,""],nested_map:[1185,2,1,""],set_nest_at_index:[1186,2,1,""],set_nest_at_indices:[1187,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1189,2,1,""],randint:[1190,2,1,""],random_normal:[1191,2,1,""],random_uniform:[1192,2,1,""],seed:[1193,2,1,""],shuffle:[1194,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1196,2,1,""],reduce_max:[1197,2,1,""],reduce_mean:[1198,2,1,""],reduce_min:[1199,2,1,""],reduce_prod:[1200,2,1,""],reduce_std:[1201,2,1,""],reduce_sum:[1202,2,1,""],reduce_var:[1203,2,1,""]},"ivy.functional.ivy.nn":{activations:[1205,0,0,"-"],layers:[1213,0,0,"-"],losses:[1226,0,0,"-"],norms:[1230,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1206,2,1,""],leaky_relu:[1207,2,1,""],relu:[1208,2,1,""],sigmoid:[1209,2,1,""],softmax:[1210,2,1,""],softplus:[1211,2,1,""],tanh:[1212,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1214,2,1,""],conv1d_transpose:[1215,2,1,""],conv2d:[1216,2,1,""],conv2d_transpose:[1217,2,1,""],conv3d:[1218,2,1,""],conv3d_transpose:[1219,2,1,""],depthwise_conv2d:[1220,2,1,""],dropout:[1221,2,1,""],linear:[1222,2,1,""],lstm_update:[1223,2,1,""],multi_head_attention:[1224,2,1,""],scaled_dot_product_attention:[1225,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1227,2,1,""],cross_entropy:[1228,2,1,""],sparse_cross_entropy:[1229,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1231,2,1,""]},"ivy.graph_compiler":{compiler:[1232,0,0,"-"],globals:[1235,0,0,"-"],graph:[1238,0,0,"-"],helpers:[1240,0,0,"-"],op_logging:[1241,0,0,"-"],param:[1242,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1233,2,1,""],show_graph:[1234,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1236,2,1,""],log_global_inference_rel_times:[1237,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1238,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1238,3,1,""],add_fn_to_dict:[1238,3,1,""],add_param:[1238,3,1,""],compiled:[1238,3,1,""],connect:[1238,3,1,""],debug_info:[1238,3,1,""],get_param:[1238,3,1,""],get_param_recursive:[1238,3,1,""],include_generators:[1238,3,1,""],increment_param_count:[1238,3,1,""],log_all_ops:[1238,3,1,""],params_all_empty:[1238,3,1,""],save_debug_info:[1238,3,1,""],set_param:[1238,3,1,""],show:[1238,3,1,""],show_debug_info:[1238,3,1,""],update_inference_times:[1238,3,1,""],with_array_caching:[1238,3,1,""]},"ivy.graph_compiler.param":{Param:[1242,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1242,3,1,""],count:[1242,3,1,""],depth:[1242,3,1,""],get:[1242,3,1,""],is_var:[1242,3,1,""],ptype:[1242,3,1,""],set:[1242,3,1,""],set_count:[1242,3,1,""],shape:[1242,3,1,""]},"ivy.stateful":{activations:[1247,0,0,"-"],converters:[1250,0,0,"-"],initializers:[1252,0,0,"-"],layers:[1261,0,0,"-"],module:[1273,0,0,"-"],norms:[1275,0,0,"-"],optimizers:[1277,0,0,"-"],sequential:[1283,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1248,1,1,""],GELU:[1249,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1248,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1249,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1251,2,1,""]},"ivy.stateful.initializers":{Constant:[1252,1,1,""],FirstLayerSiren:[1254,1,1,""],GlorotUniform:[1255,1,1,""],KaimingNormal:[1252,1,1,""],Ones:[1257,1,1,""],Siren:[1258,1,1,""],Uniform:[1252,1,1,""],Zeros:[1260,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1260,3,1,""]},"ivy.stateful.layers":{Conv1D:[1262,1,1,""],Conv1DTranspose:[1263,1,1,""],Conv2D:[1264,1,1,""],Conv2DTranspose:[1265,1,1,""],Conv3D:[1266,1,1,""],Conv3DTranspose:[1267,1,1,""],DepthwiseConv2D:[1268,1,1,""],Dropout:[1269,1,1,""],LSTM:[1270,1,1,""],Linear:[1271,1,1,""],MultiHeadAttention:[1272,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1267,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1269,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1270,3,1,""],get_initial_state:[1270,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1271,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1272,3,1,""]},"ivy.stateful.module":{Module:[1274,1,1,""]},"ivy.stateful.module.Module":{__init__:[1274,3,1,""],build:[1274,3,1,""],build_mode:[1274,3,1,""],built:[1274,3,1,""],check_submod_rets:[1274,3,1,""],compile_graph:[1274,3,1,""],compile_on_next_step:[1274,3,1,""],get_mod_key:[1274,3,1,""],mod_depth:[1274,3,1,""],mod_height:[1274,3,1,""],mod_with_top_mod_key_chain:[1274,3,1,""],save_weights:[1274,3,1,""],show_graph:[1274,3,1,""],show_mod_in_top_mod:[1274,3,1,""],show_structure:[1274,3,1,""],show_v_in_top_v:[1274,3,1,""],sub_mods:[1274,3,1,""],track_submod_call_order:[1274,3,1,""],track_submod_rets:[1274,3,1,""],v_with_top_v_key_chains:[1274,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1276,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1276,3,1,""]},"ivy.stateful.optimizers":{Adam:[1278,1,1,""],LAMB:[1279,1,1,""],LARS:[1280,1,1,""],Optimizer:[1281,1,1,""],SGD:[1282,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1281,3,1,""],compile_graph:[1281,3,1,""],compile_on_next_step:[1281,3,1,""],set_state:[1281,3,1,""],show_graph:[1281,3,1,""],step:[1281,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.sequential":{Sequential:[1284,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1284,3,1,""]},"ivy.verbosity":{cprint:[1289,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1288,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1277,1278,1279],"02886":1244,"100":[1132,1244,1286],"141592653589793":829,"2021":1244,"2102":1244,"360":[837,840,1112,1124,1126],"718281828459045":829,"754":[829,833,834,837,848],"999":[1078,1080,1081,1085,1277,1278,1279],"abstract":[905,920,1244,1277,1281],"boolean":[40,41,837,839,844,847,905,940,952,955,969,978,979,981,987,988,1023,1025,1026,1030,1031,1032,1064,1074,1078,1084,1109,1110,1111,1128,1129,1130,1132],"break":43,"case":[15,18,19,40,41,42,43,837,838,905,944,951,954,979,982,1049,1051,1052,1101,1104,1106,1132,1176,1179,1183,1244,1261,1272,1273,1274,1277,1281,1290],"catch":[979,1004],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,389,430,431,833,835,905,907,908,909,910,911,912,914,915,917,918,919,920,932,933,955,979,983,1036,1078,1092,1132,1176,1178,1185,1226,1228,1229,1238,1242,1244,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],"default":[15,18,19,40,41,42,43,830,831,832,850,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,927,928,929,930,931,934,935,936,937,944,947,948,949,954,955,962,963,964,965,979,981,982,984,985,994,995,996,997,1000,1001,1002,1011,1014,1015,1016,1021,1023,1024,1033,1035,1036,1039,1041,1044,1047,1048,1051,1052,1055,1057,1059,1061,1062,1071,1073,1074,1078,1081,1083,1084,1085,1086,1087,1089,1093,1101,1104,1106,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1188,1189,1191,1192,1195,1197,1198,1199,1200,1201,1202,1203,1205,1206,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],"final":[40,41,43,979,1014,1034,1035,1132,1261,1272,1287],"float":[40,41,42,43,829,830,831,832,833,834,837,838,848,850,852,864,883,889,905,914,915,938,944,947,951,954,955,963,970,979,982,994,995,997,1014,1015,1019,1020,1035,1053,1054,1055,1061,1062,1078,1080,1081,1083,1085,1086,1087,1094,1096,1100,1112,1120,1128,1129,1130,1131,1132,1188,1191,1192,1205,1207,1213,1221,1224,1225,1226,1227,1228,1229,1230,1231,1261,1269,1272,1275,1276,1277,1278,1279,1280,1281,1282],"function":[15,40,41,43,387,388,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,829,831,832,834,835,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1244,1247,1248,1249,1277,1280,1281,1282,1286,1287,1290],"import":[43,1244,1287,1290],"int":[40,41,42,43,386,387,388,482,830,831,832,833,834,835,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,927,928,929,930,931,934,935,936,937,942,943,949,955,964,966,971,979,984,985,990,996,997,1001,1002,1005,1006,1007,1010,1011,1014,1015,1016,1021,1024,1033,1034,1035,1043,1044,1048,1049,1051,1052,1057,1058,1059,1060,1063,1065,1066,1071,1073,1076,1078,1080,1081,1085,1094,1098,1099,1101,1104,1128,1129,1130,1131,1132,1176,1185,1188,1189,1190,1192,1193,1195,1197,1198,1199,1200,1201,1202,1203,1205,1210,1213,1214,1215,1216,1217,1218,1219,1220,1224,1226,1228,1229,1230,1231,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1275,1276],"long":[1213,1223],"new":[40,41,43,482,830,831,832,837,841,846,955,959,979,980,990,1005,1006,1007,1010,1014,1015,1016,1017,1044,1049,1051,1052,1053,1054,1061,1062,1063,1078,1081,1083,1085,1086,1087,1094,1096,1098,1100,1112,1114,1118,1119,1125,1127,1132,1176,1186,1187,1188,1189,1230,1231,1244,1250,1251,1261,1271,1275,1276,1277,1278,1279,1280,1281,1282,1287,1290],"public":[979,998],"return":[15,16,17,18,19,40,41,42,43,482,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,943,944,948,949,950,951,952,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1048,1049,1050,1051,1052,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1244,1250,1251,1261,1270,1271,1277,1281,1286,1287,1290],"short":[1213,1223,1244,1290],"static":[40,41,903,904],"super":1132,"true":[40,41,42,432,438,466,469,482,483,837,843,850,852,857,858,860,861,862,903,904,905,979,981,989,991,1009,1014,1023,1025,1074,1075,1078,1081,1083,1084,1085,1086,1087,1089,1101,1104,1128,1129,1130,1131,1132,1176,1177,1184,1188,1189,1195,1197,1198,1199,1200,1201,1202,1203,1205,1206,1213,1221,1226,1227,1228,1229,1232,1233,1234,1238,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],"try":[40,41,979,1072,1132],"var":[40,41,1128,1129,1130,1290],"while":[40,41,42,1132],AND:[837,839,860,861,1109,1110],But:1290,For:[43,837,838,979,982,993,1063,1078,1084,1092,1101,1106,1112,1113,1244,1250,1251,1287,1290],Its:[1112,1116],NOT:[837,847],Not:829,One:[40,41,43,979,1006,1049,1188,1190,1290],Ones:[1244,1252],PRs:43,Such:[979,998],That:1287,The:[15,16,17,18,19,40,41,42,43,837,838,839,840,842,843,845,848,850,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,966,967,968,969,978,979,982,986,987,990,991,994,995,996,997,999,1000,1003,1004,1008,1011,1014,1016,1017,1024,1027,1028,1029,1031,1033,1035,1037,1039,1041,1044,1045,1048,1049,1051,1052,1053,1054,1055,1058,1059,1060,1061,1062,1063,1066,1074,1077,1078,1080,1081,1083,1085,1086,1087,1089,1092,1094,1096,1098,1100,1101,1104,1106,1107,1112,1113,1115,1116,1120,1121,1122,1123,1124,1126,1128,1129,1130,1131,1132,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1287,1290],There:[43,1244,1287],These:[43,1244],Used:[1176,1177,1184,1273,1274],Using:[1244,1245,1290],With:[40,41,1101,1104,1195,1197,1198,1199,1200,1201,1202,1203,1244,1286,1290],__array__:[979,986],__call__:[1261,1272,1273,1274],__del__:1132,__dict__:[1132,1287],__enter__:1132,__exit__:1132,__getitem__:1132,__getstate__:1132,__init__:[40,41,42,43,59,60,81,209,389,390,430,431,511,639,905,906,913,914,915,916,917,918,919,920,955,956,957,958,1078,1079,1132,1136,1143,1238,1239,1242,1243,1244,1247,1248,1249,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],__iter__:1132,__len__:1132,__next__:1132,__pow__:43,__repr__:1132,_assign_vari:1286,_axi:1132,_base:[1176,1177,1184],_compute_node_da_ratio:1132,_compute_node_strs_da:1132,_concat_unify_arrai:1132,_counter:1132,_cur_framework:[43,1132],_da_direct:1132,_da_directions_flip:1132,_da_step_tim:1132,_da_tim:1132,_da_tune_count:1132,_data:1132,_delta_da_dim_s:1132,_delta_sf:1132,_dict:1132,_dim_siz:1132,_first_da_tune_step:1132,_first_ns_tune_step:1132,_fn:1132,_forward:[1244,1286],_get_kalman_param:1290,_get_prior:1290,_get_some_model:1290,_handle_flat_arrays_in_out:43,_index:[1176,1177,1184],_input_queu:1132,_length:1132,_max_depth:1132,_max_node_dim_step_ratio:1132,_max_node_dim_step_s:1132,_max_split_factor_step_s:1132,_mean_unify_arrai:1132,_min_bas:[979,1062,1230,1231,1275,1276],_min_denomin:[979,1061],_min_node_dim_s:1132,_min_sf_tune_step:1132,_min_unit_node_tune_step:1132,_model:1290,_native_wrapp:43,_node_mapp:1132,_node_percent_mem:1132,_node_str:1132,_node_str_da_ratio:1132,_node_strs_da:1132,_node_strs_kei:1132,_node_strs_n:1132,_node_util:1132,_ns_step_tim:1132,_ns_time:1132,_ns_tune_count:1132,_num_nod:1132,_num_work:1132,_observed_config:1132,_output_queu:1132,_paramet:1286,_percent_mem_inc_per_sf:1132,_percent_mem_inc_per_unit_da_dim:1132,_percent_util_inc_per_unit_da_dim:1132,_ret_fn:1132,_safety_factor:1132,_save_dir:1132,_shift_da_split:1132,_shift_n:1132,_slice:1132,_step:[1277,1281],_sum_unify_arrai:1132,_timeout:1132,_tune:1132,_tune_da:1132,_tune_n:1132,_tune_step:1132,_unit_da_tune_count:1132,_unroll_step:1290,_with_node_mappig:1132,_worker:1132,_worker_class:1132,_worker_fn:1132,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,905,914,920,1132,1273,1274,1277,1281],abil:1244,abl:[40,41],about:[833,834,835],abov:[43,1188,1190],above_height:[40,41],abs:[289,432,559,688,850,852,979,1132],absolut:[40,41,979,980],abstractmethod:1132,accept:[15,43,1244],access:[40,41,43,1287],accord:[40,41,833,834,979,997,1016,1051,1052,1071,1076],accordingli:[850,852,860,861,862],accur:[59,389,430,431,905,917,918,919,920,955,1078,1238,1242,1252,1254,1255,1257,1258,1260],aco:[777,1112],acosh:[777,1112],across:[40,41,905,914,915,924,925,927,928,929,930,931,937,947,948,979,984,985,987,988,1132,1176,1180],activ:[1206,1207,1208,1209,1210,1211,1212,1244,1248,1249],actual:1287,adam:[1078,1080,1081,1085,1244,1277,1279,1286],adam_step:1078,adam_upd:1078,adapt:[1078,1086,1277,1280],add:[40,41,43,1132,1226,1227,1228,1229,1230,1231,1244,1275,1276,1287],add_fn_to_dict:1238,add_param:1238,added:[43,979,1061,1062,1283,1284],adding:[979,990],addit:[40,41,43,979,1005,1006,1007,1230,1231,1261,1271],adher:43,adjac:[979,982],adopt:[979,998],affect:[979,982],affin:[1275,1276],after:[837,848,979,1033,1078,1081,1082,1083,1085,1086,1087,1094,1095,1230,1231,1277,1278,1279,1280,1281,1282,1290],after_1:[979,997,1076],after_n:[979,997,1076],again:43,against:[40,41,1101,1104,1195,1197,1198,1199,1200,1201,1202,1203],agnost:[43,1244,1286,1287],aim:1290,algebra:1101,algorithm:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268,1290],align:[40,41,43,979,990],aliv:[905,939,941,945,979,1018,1042,1046],all:[15,16,17,18,19,40,41,43,107,231,417,538,666,850,852,853,854,860,903,904,905,914,939,945,979,980,981,987,988,998,1011,1018,1024,1046,1060,1101,1106,1128,1129,1130,1131,1132,1176,1177,1178,1184,1185,1188,1189,1192,1195,1197,1198,1199,1200,1201,1202,1203,1213,1223,1244,1287,1290],all_depth:[40,41],all_equ:979,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1176,all_tru:[40,41],alloc:[905,1132],allow:[979,1034,1035,1036,1273,1274],allow_dupl:[979,1036],alon:[905,944,954,1132,1244],along:[40,41,43,482,850,851,852,853,854,857,858,860,861,862,905,928,929,930,931,934,935,936,937,949,979,996,1001,1002,1011,1016,1033,1034,1035,1048,1059,1063,1066,1073,1101,1104,1128,1129,1130,1131,1132,1188,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203],alongsid:[1286,1287],alpha:[1205,1207],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,905,1132],also:[40,41,43,979,982,1078,1081,1128,1129,1130,1131,1176,1177,1178,1184,1185,1213,1222,1261,1271,1286],altern:1286,alwai:[40,41,43,1078,1084,1089],among:[40,41],amount:[905,951,1132,1244],angl:[1112,1113,1117],ani:[15,16,17,18,19,40,41,43,107,231,417,538,666,860,903,904,905,907,910,914,915,917,926,927,930,931,936,979,981,982,986,1004,1005,1006,1007,1008,1009,1023,1031,1036,1061,1062,1078,1082,1132,1176,1177,1180,1184,1185,1186,1187,1188,1192,1244,1250,1251,1273,1274,1286,1287,1290],anoth:[40,41,43,955,961,1244],another_backend:43,anyth:[43,1290],anywai:43,apart:43,api:[1244,1245],appear:[979,1010],append:[40,41,1132],appli:[15,18,19,40,41,837,847,979,1005,1006,1007,1078,1085,1086,1101,1107,1109,1110,1111,1128,1129,1130,1176,1180,1183,1185,1205,1206,1207,1208,1209,1210,1211,1212,1213,1222,1224,1225,1230,1231,1244,1247,1248,1249,1275,1276],applic:[1176,1180,1185,1213,1224,1225,1244,1290],approxim:[43,837,838,846,864,889,1205,1206],arang:[127,289,432,482,559,688,979,1034,1035],arbitrari:[40,41,905,934,935,937,1132],arc:[1112,1117],arcco:[1112,1113],arctan:[1112,1116],area:[837,838,1244],arg:[15,16,17,40,41,43,59,63,905,914,927,931,937,949,979,1005,1006,1007,1052,1132,1232,1233,1234,1238,1250,1251,1273,1274],arg_nam:979,arg_stateful_idx:[1232,1233,1234,1238,1273,1274],argmax:[127,432,559,688,979],argmin:[127,432,559,688,979],args_clon:1132,args_dist:1132,args_to_ivi:[15,1244],args_to_n:[15,1244],args_uni:1132,argsort:[104,228,414,535,663,857],argument:[15,16,17,18,19,40,41,42,43,59,63,903,904,905,914,915,927,931,937,979,982,983,991,1004,1036,1052,1112,1113,1132,1176,1180,1250,1251,1273,1274],aris:[1244,1290],arithmet:[43,1195,1198,1201,1203],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:482,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,127,289,432,482,559,688,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,883,889,905,923,924,925,928,929,930,931,934,935,936,937,939,941,945,949,950,955,959,965,970,971,979,980,981,982,984,985,987,988,989,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1021,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1037,1038,1039,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1057,1059,1060,1063,1064,1065,1066,1068,1069,1070,1071,1073,1074,1075,1076,1077,1078,1080,1081,1084,1085,1089,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1132,1176,1178,1185,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1244,1245,1261,1269,1270,1272,1277,1281,1286,1287],arrang:[979,1005],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,386,387,388,389,391,392,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862],array_api_methods_to_test:43,array_builtin:[43,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902],array_equ:[289,688,979],array_lik:[482,979,986],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,979],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1244],arraywithgener:[22,1244],arraywithgradi:[24,1244],arraywithimag:[26,1244],arraywithlinalg:[28,1244],arraywithlog:[30,1244],arraywithmath:[32,1244],arraywithmeta:[34,1244],arraywithrandom:[36,1244],arraywithreduct:[38,1244],arriv:[40,41,42],articl:1244,arxiv:1244,as_arrai:[40,41,979,1021,1057],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[430,432,441,905,923,955,962,963,964,965],as_tensor:432,as_vari:[40,41],as_zero:[40,41],asarrai:[432,979],asin:[777,1112],asinh:[85,394,515,643,837],aspect:[1094,1099],assert:[40,41,979,989,1132],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:979,associ:[43,1101,1108],assum:[1287,1290],astyp:[432,955],asynchron:[40,41,42],at_dev:[40,42,905,918,919],at_kei:[40,41],at_key_chain:[40,41],at_nod:1132,atan2:[777,1112],atan:[777,1112],atanh:[777,1112],attent:[43,1213,1224,1225,1261,1272],attribut:[0,6,40,41,833,834,835,979,1045,1077],audienc:[1244,1287],author:1244,avail:[40,41,43,905,940,942,943,952,979,1006,1132],averag:[1078,1080,1081,1085,1128,1129,1130,1195,1198],average_across_step:[1128,1129,1130],avoid:[905,1132,1287],axes:[40,41,43,432,463,475,476,850,852,853,854,860,861,862,905,949,979,984,985,997,1010,1011,1065,1071,1076,1101,1104,1132,1195,1197,1198,1199,1200,1201,1202,1203],axes_length:[40,41,979,1005,1006,1007],axi:[40,41,432,434,435,439,440,446,454,455,456,461,462,464,850,851,852,853,854,857,858,860,861,862,905,907,910,917,928,929,930,931,934,935,936,937,949,979,984,985,996,997,1000,1001,1002,1010,1011,1016,1033,1034,1035,1048,1059,1060,1063,1065,1066,1073,1076,1132,1188,1194,1195,1197,1198,1199,1200,1201,1202,1203,1205,1210,1226,1228,1229],axis0:[40,41,979,1065],axis1:[40,41,850,851,979,1065],axis2:[850,851],back:[43,1273,1274,1277,1281],backend:[15,17,19,40,41,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,905,940,943,952,955,961,969,978,979,1026,1030,1078,1081,1083,1085,1086,1087,1092,1132,1244,1245,1250,1251,1277,1278,1279,1280,1281,1282,1286,1287,1290],backend_nam:43,background:[1244,1287],backprop:1290,backward:[860,861,862,1286],band:[979,1014],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,389,430,431,432,456,837,846,864,889,905,907,908,909,910,911,912,914,915,917,918,919,920,955,979,1019,1035,1053,1062,1078,1132,1195,1196,1238,1242,1244,1247,1248,1249,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1290],batch:[40,41,850,852,905,947,948,979,1011,1014,1024,1094,1098,1101,1107,1128,1129,1130,1131,1132,1213,1222,1230,1231,1275,1276],batch_shap:[432,448,979,1011,1024,1043,1094,1095,1096,1097,1098,1099,1100,1101,1108,1188,1189,1213,1223,1224,1225,1261,1270],batch_siz:[482,483,1132,1188,1189,1213,1214,1215,1216,1217,1218,1219,1220],bayesian:1290,becaus:[43,979,982],becom:[979,993,1112,1117,1290],been:[979,1005,1006,1007,1188,1189],befor:[40,41,43,905,949,1128,1129,1130,1132,1176,1185,1195,1197,1198,1199,1200,1201,1202,1203,1213,1224,1225,1290],before_1:[979,997,1076],before_n:[979,997,1076],begin:[1176,1177,1184,1287],behaviour:[43,1290],behind:[1078,1081,1083,1085,1086,1087,1244],being:[40,41,43,979,982,1047,1055,1132],belong:[40,41],below:[43,1244,1287,1290],below_depth:[40,41],benefit:1244,bernoul:[1213,1221,1261,1269],best:[43,979,1036,1244],beta1:[1078,1080,1081,1085,1277,1278,1279],beta2:[1078,1080,1081,1085,1277,1278,1279],beta:[1230,1231],between:[40,41,42,833,834,979,982,1101,1106,1176,1180,1188,1190,1226,1228,1229,1277,1279],bia:[1213,1222,1223,1261,1262,1263,1264,1265,1266,1267,1268,1271],bias_initi:[1261,1262,1263,1264,1265,1266,1267,1268,1271],bilinear:[1094,1095],bilinear_resampl:[163,344,471,602,762,1094],bilinearli:[1094,1095],binari:[837,839,1226,1227],binary_cross_entropi:1226,bit:[389,833,834,835,955,966,1094,1096,1100,1244],bitwis:[837,839],bitwise_and:[85,213,394,515,643,837],bitwise_oper:[0,7,8],block:[1244,1287],bool:[15,18,19,40,41,42,43,837,843,845,850,852,857,858,860,861,862,864,883,903,904,905,923,936,940,944,949,952,954,955,965,979,981,987,988,1001,1004,1008,1009,1014,1021,1023,1031,1036,1057,1059,1073,1074,1075,1078,1081,1082,1083,1084,1085,1086,1087,1089,1101,1104,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1188,1189,1195,1197,1198,1199,1200,1201,1202,1203,1205,1206,1213,1221,1250,1251,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],both:[43,979,1000],bottom:1244,boundari:[40,41,1188,1192],branch:[43,903,904],brittl:43,broadcast:[40,41,43,837,839,850,852,860,861,862,864,883,889,979,990,1008,1038,1039,1040,1048,1101,1104,1112,1117,1120,1195,1197,1198,1199,1200,1201,1202,1203],broadcast_to:[289,688,979],build:[1132,1244,1261,1272,1273,1274],build_mod:[1261,1272,1273,1274],builder:1244,built:[905,979,982,1132,1261,1272,1273,1274],builtin:43,builtin_ab:[244,864],builtin_add:[244,864],builtin_and:[244,864],builtin_bool:[244,864],builtin_contain:[244,864],builtin_deepcopi:[244,864],builtin_dir:[244,864],builtin_eq:[244,864],builtin_float:[244,864],builtin_floordiv:[244,864],builtin_g:[244,864],builtin_getattr:[244,864],builtin_getattribut:[244,864],builtin_getitem:[244,864],builtin_gt:[244,864],builtin_int:[244,864],builtin_invert:[244,864],builtin_l:[244,864],builtin_lt:[244,547,675,864],builtin_mul:[244,864],builtin_n:[244,864],builtin_neg:[244,864],builtin_or:[244,864],builtin_po:[244,864],builtin_pow:[43,244,864],builtin_radd:[244,864],builtin_rand:[244,864],builtin_rfloordiv:[244,864],builtin_rmul:[244,864],builtin_ror:[244,864],builtin_rpow:[244,864],builtin_rsub:[244,864],builtin_rtruediv:[244,864],builtin_rxor:[244,864],builtin_setitem:[244,864],builtin_some_op:43,builtin_sub:[244,864],builtin_truediv:[244,864],builtin_xor:[244,864],bypass:1287,cach:[905,921,979,991],cache_fn:979,calcul:[40,41,42,43,837,838,846,848,864,889,1112,1120],call:[43,905,949,979,1047,1055,1072,1078,1082,1132,1176,1177,1180,1184,1261,1272,1273,1274,1277,1281,1287,1290],callabl:[40,41,903,904,905,914,915,949,979,991,1004,1006,1036,1072,1128,1129,1130,1131,1132,1176,1180,1181,1182,1184,1185,1213,1224],can:[43,905,947,948,949,979,1049,1094,1096,1132,1244,1286,1287,1290],cancel_join_thread:1132,captur:1244,cast:[40,41,127,289,432,559,688,955,979,996,1094,1096,1100],catch_except:[979,1004],categori:43,caus:43,ceil:[289,432,688,979,982],cell:[1213,1223,1261,1270],certain:[40,41,979,982,1034,1035],chain:[40,41,1128,1129,1130,1283,1284],chang:[43,905,979,1049,1132,1176,1178,1185,1244,1286],channel:[979,1014,1094,1096,1097,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],check:[15,16,17,18,19,40,41,43,905,944,954,955,960,969,978,979,989,1009,1023,1031,1064,1074,1078,1084,1132,1176,1177,1184,1244,1287],check_nest:[1176,1184],check_shap:[40,41],check_submod_ret:[1273,1274],check_typ:[40,41],choic:[1244,1287],choleski:[766,1101],choos:[979,1075,1101,1106,1112,1117,1244],choose_random_framework:59,chosen:[40,41,979,982,1075],chunk:[905,947,948,949,1132],chunk_siz:[905,949,1132],circl:[1112,1113,1115],clark:1244,clear:[905,921,1132],clear_framework_stack:59,clear_mem_on_dev:[430,680,905],click:1244,clip:[40,41,289,432,688,979,994,995,1038,1040,1244],clip_matrix_norm:979,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,979],clipped_delta:1132,clone:[40,41,905,924,925,926,927,1132],clone_arrai:1132,clone_it:1132,clone_nest:1132,clonedit:1132,cloneditem:1132,clonednest:1132,close:[43,1094,1099,1112,1115,1132,1290],closest:[955,960],closest_valid_dtyp:955,code:[40,41,42,43,482,1244,1245,1286,1287],codebas:[905,947,948,1132,1244,1287,1290],codomain:[837,838,848],collect:[15,40,41,430,432,466,471,475,479,480,482,864,903,905,955,979,1078,1094,1101,1109,1112,1132,1176,1188,1195,1205,1213,1226,1230,1247,1261,1275,1277],color:[40,41,42,1288,1289],column:[979,1024],combin:[40,41,42,1094,1099,1244,1290],combined_batch_s:1132,come:1287,command:1244,comment:43,commit:1290,common:[40,41,43,1112,1117],common_key_chain:[40,41],commun:[43,1244,1287],compar:[40,41,979,981,987,988],comparison_oper:[0,9,10],compat:[43,837,839,850,852,860,861,862,864,883,889,979,1008,1049,1112,1120,1244,1290],compil:[289,432,688,1233,1234,1238,1244,1273,1274,1277,1278,1279,1280,1281,1282],compile_graph:[1232,1244,1273,1274,1277,1281],compile_on_next_step:[1273,1274,1277,1278,1279,1280,1281,1282],complet:[40,41,1101,1106,1132],complex:[1287,1290],compon:[979,1000],composit:43,comput:[40,41,837,839,840,842,845,847,850,852,864,883,905,949,979,994,995,1001,1002,1008,1037,1078,1080,1081,1082,1083,1085,1086,1087,1089,1091,1094,1097,1101,1102,1103,1104,1105,1106,1109,1110,1111,1112,1113,1115,1116,1117,1121,1122,1123,1124,1126,1176,1180,1195,1196,1197,1198,1199,1200,1201,1202,1203,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1226,1227,1228,1229],concat:[40,41,905,934,935,936,937,949,979,1014,1132],concaten:[40,41,127,289,432,559,688,979,1014,1132,1244],concatten:[40,41,905,934,935,936,937,949,1132],condit:[432,903,904,979,1075,1176,1184],conditon:[1176,1184],config:[40,41,1132],config_list:1132,configur:[40,41],conflict:43,conform:43,conjunct:1287,connect:[1238,1261,1271,1272],consid:[40,41,1101,1106,1286,1290],consist:[40,41,905,937,1132,1195,1196,1273,1274,1287],constant:[905,914,915,979,997,1132,1176,1180,1226,1227,1228,1229,1230,1231,1252,1253,1257,1260,1273,1274,1275,1276,1287],constant_kwarg:1132,constant_pad:[289,432,559,688,979],constitu:[40,41],construct:[979,1066,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],constructor:[40,41,42,979,983,1283,1284],consum:[905,1132],cont_feat_dim:[1213,1224],contaienr:[40,41],contain:[15,18,19,42,43,830,831,832,837,838,839,842,843,845,846,848,850,852,857,858,860,861,862,864,883,889,905,924,928,949,955,959,979,980,984,985,993,994,995,998,1008,1023,1038,1040,1050,1061,1062,1078,1080,1081,1083,1085,1086,1087,1112,1120,1128,1129,1130,1131,1132,1188,1189,1195,1197,1198,1199,1201,1203,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[432,688,979],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[432,979,1041,1213,1224,1261,1272],context_dim:[1261,1272],contextmanag:[59,60],continu:[43,1132,1287],contract:[40,41,1195,1196],contribut:[1244,1245],contributor:[43,1244],control:1244,conv1d:[194,375,496,819,1213,1244,1261],conv1d_transpos:[194,375,496,819,1213],conv1dtranspos:[1244,1261],conv2d:[194,375,496,628,819,1213,1244,1261],conv2d_transpos:[194,375,496,819,1213],conv2dtranspos:[1244,1261],conv3d:[194,375,496,628,819,1213,1244,1261],conv3d_transpos:[194,375,496,819,1213],conv3dtranspos:[1244,1261],convent:[40,41,1195,1196],conver:[905,921,932,944,951,954,1132],convers:[16,17,18,19,40,41,1132,1244],convert:[15,16,17,18,19,40,41,43,905,932,933,955,961,967,968,979,1058,1069,1070,1094,1096,1100,1101,1108,1132,1176,1178,1185,1244,1251],convert_dtyp:955,convolut:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],cool:43,cooler:43,coordin:[979,1039,1112,1113,1115,1117],copi:[40,41,482,979,999,1132,1176,1178],copy_arrai:[432,688,979],copy_nest:1176,core:[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1244],corner:43,correct:[43,1244,1287],correctli:[40,41,1101,1104,1112,1117,1195,1197,1198,1199,1200,1201,1202,1203],correspond:[40,41,43,864,889,979,996,1188,1189],cos:[85,394,515,643,837,979,1014,1112,1113,1126,1287],cosh:[85,394,515,643,777,837,1112],cosin:[837,840,841,1112,1113,1114,1119],cost:[1078,1080,1081,1083,1085,1086,1087,1128,1129,1130,1131],cost_fn:[1128,1131],could:1290,count:[40,41,853,854,860,861,862,1132,1195,1200,1202,1242],cprint:1288,cpu:[40,41,43,905,942,944,950,951,954,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1077,1132,1188,1189,1190,1191,1192,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1286,1287],creat:[40,41,830,831,832,905,914,915,979,982,986,1015,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1068,1077,1078,1091,1132,1188,1189,1190,1191,1192,1244,1245,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],create_if_abs:[40,41],create_vari:1252,creation:[40,41,42,43],creation_funct:[386,387,388,830,831,832],crop:[1094,1098],crop_siz:[1094,1098],cross:[289,688,979,1226,1227,1228,1229],cross_entropi:1226,cuda:[40,41,905,914,933,950,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1077,1132,1188,1189,1190,1191,1192,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],cumprod:[127,289,432,688,979],cumsum:[688,979],cumul:[979,1001,1002],current:[40,41,42,43,905,914,938,939,941,945,955,961,969,978,979,1003,1018,1026,1030,1042,1046,1132,1176,1177,1184,1244,1290],current_framework:59,current_framework_str:[432,688,979,1132],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1238,d_in:[1213,1214,1215,1216,1217,1218,1219],d_out:[1213,1214,1215,1216,1217,1218,1219],da_can_termin:1132,da_dim_s:[905,1132],da_direct:1132,da_tune_step:[905,1132],dai:1290,daniel:1244,data:[40,41,42,43,830,831,832,834,835,837,838,839,842,843,845,848,850,852,853,854,860,861,862,864,883,889,905,907,908,909,910,911,912,917,918,919,933,955,959,960,961,965,966,967,968,969,970,971,978,979,982,986,1008,1015,1024,1031,1044,1045,1049,1060,1064,1077,1078,1084,1092,1112,1120,1132,1213,1222,1244],data_format:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],data_type_funct:[389,391,392,833,834,835],dataset:[40,41],datatyp:[40,41,955,960,970,971],dcdw:[1078,1080,1081,1083,1085,1086],debug_info:1238,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1078,1085,1086,1277,1279,1280],decay_lambda:[1078,1085,1086,1277,1279,1280],decid:[40,41,1290],decompos:[1101,1102,1106],decomposit:[1101,1102,1106,1107],decor:43,decrement:[979,1027],dedic:[1078,1092,1250,1251],deep:[40,41,1244],deep_copi:[40,41],deeper:[905,927,931,937,1132,1176,1185,1244],deepli:[1176,1178],def:[43,60,81,209,390,511,639,906,913,916,956,957,958,1079,1132,1136,1143,1239,1243,1244,1253,1256,1259,1286,1287,1290],default_dev:43,default_devic:905,default_dtyp:[43,955],default_float_dtyp:955,default_int_dtyp:955,default_key_color:[40,41,42],default_nod:1132,default_rng:482,default_v:[979,1004],defaultdevic:[905,906],defaultdtyp:[955,956],defaultfloatdtyp:[955,957],defaultintdtyp:[955,958],defer:43,defin:[43,979,1000,1043,1045,1077,1188,1190],degre:[837,840,1112,1124,1126],del:1132,delta:[1078,1080,1132,1238],delta_dim_s:1132,delta_percent_mem:1132,delta_sf:1132,delta_util:1132,demo:1244,denomin:[979,1013,1020,1054,1061,1062,1230,1231,1275,1276],dens:[1261,1271],depend:[43,837,838,846,864,889,979,1075,1101,1107,1244],depth:[40,41,432,457,905,927,931,937,979,1022,1043,1132,1176,1185,1238,1242,1273,1274],depth_cutoff:[40,41],depthwis:[1213,1220,1261,1268],depthwise_conv2d:[194,375,496,628,819,1213],depthwiseconv2d:[1244,1261],deriv:[1078,1080,1081,1083,1085,1086,1087,1176,1178,1185,1244,1273,1277,1281,1283],descend:[857,858,1101,1107],descent:[1078,1083,1277,1282],describ:[40,41,1195,1196],descript:[850,852],design:[1244,1245],desir:[40,41,905,950,955,959,979,982,986,1024,1025,1044,1045,1077,1094,1099,1132,1195,1197,1198,1199,1201,1203],desired_aspect_ratio:[471,474,1094,1099],desired_percent_increas:1132,detail:1290,detect:[40,41,1176,1177,1184],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,837,838,839,843,848,850,852,860,861,862,864,889,905,940,942,943,952,955,959,960,966,969,970,971,978,979,981,982,986,987,988,1023,1026,1030,1031,1064,1074,1078,1084,1112,1120,1128,1129,1130,1131,1132,1213,1224],dev:[40,41,42,43,120,283,430,432,433,436,446,447,448,455,456,457,458,459,460,465,482,483,552,680,905,908,909,911,912,914,915,918,919,921,922,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,941,944,945,946,947,948,949,950,951,954,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1077,1078,1093,1188,1189,1190,1191,1192,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],dev_clon:[40,41,905],dev_clone_arrai:905,dev_clone_it:905,dev_clone_nest:905,dev_dist:[40,41,905],dev_dist_arrai:905,dev_dist_it:905,dev_dist_nest:905,dev_from_str:[43,120,283,430,552,680,905],dev_mapp:905,dev_str:[40,41],dev_to_str:[120,283,430,552,680,905],dev_unifi:905,dev_unify_arrai:905,dev_unify_it:905,dev_unify_nest:905,dev_util:905,devclonedit:905,devcloneditem:905,devclonednest:905,devdistit:905,devdistitem:905,devdistnest:905,develop:[43,1244,1287,1290],deviat:[40,41,1188,1191,1195,1201,1230,1231,1275,1276],devic:[21,40,41,43,386,387,388,431,432,445,830,831,832,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,979,982,986,1015,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1077,1078,1093,1188,1189,1190,1191,1192,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],devmanag:[905,913],devmapp:[905,915],devmappermultiproc:905,diag:[1101,1107],diagon:[97,221,407,528,656,850,979,1024],dict:[15,16,17,18,19,40,41,42,905,907,910,914,915,917,927,928,929,930,931,979,1005,1006,1007,1036,1128,1129,1130,1132,1176,1178,1179,1180,1183,1185,1250,1251],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,833,834,905,924,925,928,929,1101,1106,1132,1213,1222,1244,1287,1290],differenti:[1244,1287],dilat:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],dim:[40,41,43,979,1043,1094,1095,1099,1101,1107,1132,1261,1272],dim_siz:[40,41,905,1132],dimens:[40,41,42,850,851,852,853,854,860,861,862,905,936,979,990,996,1000,1005,1006,1007,1010,1014,1021,1033,1043,1048,1049,1059,1060,1063,1071,1073,1094,1098,1101,1104,1107,1128,1129,1130,1131,1132,1188,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1210,1213,1214,1215,1216,1217,1218,1219,1220,1223,1226,1228,1229,1261,1262,1263,1264,1265,1266,1267,1268,1271,1272],dimension:[40,41,482,850,852,860,861,862,979,1059,1060,1101,1107],direct:1132,directli:[43,1176,1185,1287,1290],directori:[979,1056,1067],discret:[1226,1228],disk:[40,41,1094,1096],distanc:[979,982],distribut:[40,41,905,924,928,929,930,931,1132,1188,1189,1190,1191,1192,1213,1221,1261,1269,1273,1274],distribute_nest:1132,distributedarrai:[40,41],distrubt:[1226,1228],dive:[1244,1287],divid:[40,41,979,1059,1061,1112],dividend:[1112,1120],divis:[979,1013,1020,1054,1061,1062,1078,1080,1081,1085,1112,1120,1277,1278,1279],divisor:[1078,1080,1081,1085,1112,1120,1277,1278,1279],doc:1244,docstr:43,doe:[40,41,43,979,982,1059,1286],doesn:[1101,1106,1244],doing:43,domain:[837,838,848,1112,1113],don:1244,done:43,door:1290,dot:[1101,1103,1213,1224,1225,1261,1272],down:1286,downscal:[979,994,995],drag:[1244,1290],draw:[1188,1189,1191,1192],drawn:[1188,1189,1190,1191,1192],drop:[1244,1290],dropout:[1213,1244,1261,1272],dropout_r:[1261,1272],ds_tune_step:905,dtype:[40,41,43,127,289,386,387,388,389,391,392,432,433,436,437,445,448,458,465,559,688,830,831,832,833,834,835,837,842,959,960,961,962,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,982,986,1015,1024,1043,1044,1045,1077],dtype_bit:[127,289,432,559,688,955],dtype_from_str:[43,127,289,432,559,688,955],dtype_in:[432,442,443,444,955,961,966,967,968,969,970,971,978],dtype_to_str:[127,289,432,559,688,955],duplic:[40,41],dure:[40,41,43,903,904,979,1072,1078,1080,1081,1085,1128,1129,1130,1131,1273,1274,1277,1278,1279,1281],dynam:[432,438,903,904],each:[40,41,42,43,837,838,839,842,843,845,846,848,857,858,864,883,889,905,914,915,924,925,926,927,928,929,930,936,948,949,979,980,981,997,1008,1048,1059,1063,1066,1076,1078,1081,1083,1085,1086,1087,1094,1097,1101,1107,1112,1115,1120,1122,1123,1132,1176,1180,1188,1189,1195,1196,1213,1214,1215,1216,1217,1218,1219,1220,1221,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287],eager:1287,easi:1290,easili:1244,econom:1290,ecosystem:1244,edg:[979,993,997,1076],effect:[1078,1087],effective_grad:[1078,1087],effici:1290,einop:[40,41,979,1005,1006,1007],einops_rearrang:[40,41,979],einops_reduc:[40,41,979],einops_repeat:[40,41,979],einstein:[40,41,1195,1196],einsum:[40,41,180,363,484,618,799,1195],either:[40,41,43,979,1004,1036,1039,1041,1128,1129,1130,1131,1132,1261,1272,1273,1274,1287],eleg:1132,element:[40,41,43,482,837,838,839,840,841,842,843,845,846,847,848,853,854,857,858,860,861,862,864,883,889,905,926,930,936,955,959,979,980,982,984,985,987,988,992,993,994,995,1001,1002,1008,1011,1012,1013,1024,1025,1038,1040,1048,1050,1059,1070,1075,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1132,1195,1196,1198,1200,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1221,1261,1269],elementwis:[40,41],elementwise_affin:[1275,1276],elementwise_funct:[837,838,839,840,841,842,843,844,845,846,847,848],elemtn:[1188,1189],elif:1132,els:[979,989,1004,1009,1132],elsewher:[979,1075],emphas:1244,empti:[40,41,1101,1106,1132],enabl:[40,41,42,43,1244],encapsul:[833,835],encod:[837,842,979,1014,1094,1096],end:[979,982,1244,1287],ensur:43,entir:[40,41,860,861,862,905,949,1132,1244,1261,1270],entri:[40,41,979,1011,1034,1035,1059,1060],entropi:[1226,1227,1228,1229],enumer:1132,environ:1244,eps:[389,833,834],epsilon:[1078,1080,1081,1085,1226,1227,1228,1229,1230,1231,1275,1276,1277,1278,1279],equal:[40,41,432,559,688,837,840,843,979,981,987,988,997,1059,1076,1112,1124,1126,1188,1192],equality_matrix:[979,981],equat:[40,41,1195,1196],equival:[850,852,979,982,1112,1126],erf:[480,777,1112],error:[40,41,43,905,979,1060,1112,1121,1132,1205,1206,1273,1274,1277,1281],essenti:43,etc:[40,41,43,905,950,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1077,1132,1188,1189,1190,1191,1192,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1290],euclidean:[850,852],euler:829,evalu:[40,41,837,846,860,861,862,979,1039,1176,1177,1184],even:[43,1290],evenli:[40,41,979,982,1034,1035,1059],everi:[979,981,1290],exact:[40,41],exampl:[43,903,904,979,993,1063,1101,1106,1244,1286,1287,1290],example_input:[432,438,903,904],exc_tb:1132,exc_typ:1132,exc_val:1132,exce:[979,1040],except:[40,41,44,47,860,861,862,979,982,989,996,1004,1072,1132],excess_s:1132,excit:[1244,1287],exclud:[59,61,979,982,1188,1192],exclus:[40,41,432,440,453,466,468,979,1001,1031,1078,1084,1188,1190],execut:[43,979,1072,1287],execute_with_gradi:[160,339,466,597,756,1078,1244,1286],exist:[40,41,979,1004,1132,1244,1277,1281,1290],exp:[777,1112],expand:[40,41,979,1010,1014],expand_dim:[40,41,289,688,979,1132],expect:[979,983],explain:[43,1287],explicitli:[43,1261,1270,1272,1273,1274,1287],expon:[43,864,889,979,1062],exponenti:[43,864,889,1112,1121,1122],expos:[979,986,998],express:[979,1039],exsit:[40,41],extend:43,extra:[40,41,42,1078,1082],extract:[850,851],eye:[1101,1103],fabian:1244,fabio:1244,factor:[905,914,947,948,949,1078,1080,1081,1085,1086,1101,1107,1132,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268,1277,1278,1279,1280],fail:43,falck:1244,fall:[1273,1274,1277,1281],fallback_to_non_compil:[1273,1274,1277,1281],fals:[15,18,19,40,41,42,59,66,67,68,69,70,430,432,440,441,453,461,464,466,467,468,475,476,837,843,850,852,857,858,860,861,862,905,923,936,944,949,954,955,962,963,964,965,979,981,1001,1004,1009,1014,1021,1031,1036,1057,1059,1073,1075,1078,1081,1082,1083,1084,1085,1086,1087,1101,1104,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1195,1197,1198,1199,1200,1201,1202,1203,1232,1233,1234,1238,1242,1250,1251,1273,1274,1277,1278,1279,1280,1281,1282],fan_in:1252,fan_mod:1252,fan_out:1252,far:[1176,1177,1184,1286],faster:[903,904],favourit:[1244,1286],feasibl:1290,feat_dim:[1213,1224,1225],fed:[905,949,1132],feed:[905,949,1132],few:43,field:1290,file:[40,41,43,979,1056,1067,1273,1274],filepath:[40,41],fill:[40,41,830,831,832,979,1015,1044,1188,1190],fill_valu:[432,445,979,1015],filter:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268,1290],filter_s:[1261,1262,1263],filter_shap:[1261,1264,1265,1266,1267,1268],find:[40,41,1290],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,208,209,389,390,510,511,638,639,833],finish:[1244,1290],finit:[837,843],first:[40,41,43,482,837,839,903,904,905,936,979,987,996,1000,1008,1034,1035,1063,1065,1078,1082,1101,1107,1128,1129,1130,1131,1132,1176,1177,1184,1188,1194,1195,1200,1202,1261,1272,1273,1274,1277,1281,1287,1290],firstlayersiren:[1244,1252],firstli:[1287,1290],fist:[905,949,1132],fit:[40,41,430,432,466,471,475,479,480,482,979,1048,1094,1099],fix:43,fkt:1290,flag:[40,41,43,1078,1084],flat:[40,41,43,979,1048,1051],flat_list:[40,41],flatten:[40,41,850,852,979,1014,1048,1195,1197,1198,1199,1201,1203],flatten_key_chain:[40,41,1273,1274],flexibl:[1244,1287],flip:[40,41,100,224,410,531,659,853,979],float32:[43,432,448,955,959,967,968,979,982,986,1024,1044,1045,1077],float_dtyp:[955,963,973],float_img_to_uint8_img:1094,floor:[289,432,688,979,1013,1132],floor_divid:[394,515,643,837],floormod:[289,432,688,979],fluid:1290,fname:[1232,1234,1238,1273,1274],folder:[43,1244],follow:[40,41,43,833,835,850,852,905,949,979,1027,1028,1029,1061,1062,1078,1081,1083,1085,1086,1087,1132,1176,1180,1185,1213,1224,1225,1244,1261,1271,1277,1281],followng:[833,834],fomaml_step:1128,forget:[1078,1080,1081,1085,1277,1278,1279],fork:[979,1041,1244,1245],forkserv:[979,1041,1132],form:[15,16,17,18,19,40,41,979,986,1078,1081,1083,1085,1086,1087,1176,1178,1185,1213],format:[40,41,43,905,923,955,959,961,965,979,982,986,1024,1044,1045,1077,1132,1195,1196,1244,1286,1287],format_fn:[40,41],format_key_chain:[40,41],forward:[1273,1274,1277,1281,1286],found:[40,41,42],fourier:[979,1014],fourier_encod:979,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,405,408,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,525,526,529,530,532,536,539,540,548,553,554,555,556,557,558,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,598,599,600,601,603,604,605,607,608,609,610,614,615,616,617,619,620,621,622,623,624,625,629,630,631,636,637,639,640,641,644,645,646,647,648,649,650,651,652,653,654,657,658,660,664,667,668,676,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,757,758,759,760,761,763,764,765,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,800,801,802,803,804,805,806,809,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,831,832,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1231,1233,1234,1236,1237,1239,1243,1244,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1289,1290],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1132,framewrk:[979,1041],freeli:43,frequenc:[979,1014],from:[40,41,42,43,837,842,845,848,850,851,853,854,860,861,862,905,914,915,949,955,961,979,1004,1011,1016,1017,1024,1049,1060,1068,1075,1078,1081,1085,1094,1098,1101,1106,1128,1129,1130,1131,1132,1176,1178,1185,1188,1189,1190,1191,1192,1195,1200,1202,1213,1221,1224,1244,1250,1251,1261,1269,1272,1277,1281,1286,1287],from_cal:[1273,1274],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[127,289,432,559,688,833,834,979,1101,1106,1244],full_matric:[1101,1107],fulli:[43,1244,1261,1271,1272,1286],func:[40,41,432,438,466,467,903,904,905,949,979,991,1078,1082,1132],further:[43,1290],furthermor:1290,futur:1290,gain:1252,gamma:[1230,1231],gather:[40,41,127,289,432,559,688,979,1017],gather_nd:[40,41,127,289,432,559,688,979],gauss:[1112,1121],gaussian:[1205,1206],geglu:[1244,1247],gelu:[373,493,808,1205,1244,1247],gener:[23,40,41,43,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,482,903,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1084,1188,1190,1192,1193,1244,1277,1281],geometr:[979,1014],get:[40,41,43,833,834,835,905,914,915,923,938,939,944,948,951,954,955,965,966,979,983,1018,1019,1020,1047,1132,1242,1244,1261,1270,1290],get_all_arrays_in_memori:979,get_all_arrays_on_dev:905,get_framework:59,get_initial_st:[1261,1270],get_min_bas:979,get_min_denomin:979,get_mod_kei:[1273,1274],get_num_dim:[432,688,979],get_param:1238,get_param_recurs:1238,get_referrers_recurs:979,getfullargspec:1132,gist:1244,give:[43,857,858,979,1049,1287],given:[40,41,43,830,831,832,853,854,857,858,905,938,944,947,948,949,951,954,955,959,979,982,986,993,1001,1002,1011,1017,1034,1035,1044,1045,1048,1051,1052,1059,1066,1071,1073,1077,1078,1080,1081,1083,1085,1086,1087,1101,1103,1108,1112,1113,1132,1176,1181,1182,1188,1191,1192,1194,1195,1198,1200,1201,1202,1203,1213,1214,1215,1216,1217,1218,1219,1220,1250,1251,1290],global:[40,41,42,905,914,915,922,947,948,949,955,962,963,964,979,1003,1019,1020,1047,1053,1054,1055,1061,1062,1078,1093,1132,1230,1231,1236,1237,1244,1275,1276],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1244,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],got:[43,1244],gpu0:43,gpu2:43,gpu:[905,940,943,1132],gpu_is_avail:[430,905,1132],grad:[1244,1277,1281,1286],gradient:[25,40,41,467,468,469,470,905,949,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1097,1128,1129,1130,1131,1244,1277,1278,1279,1280,1281,1282,1286,1290],gradient_descent_upd:[1078,1128,1129,1130,1131],gradient_imag:[163,344,471,602,762,1094],gradienttrack:[1078,1079],graph:[1078,1081,1083,1085,1086,1087,1232,1233,1234,1239,1244,1273,1274],graph_compil:[1232,1233,1234,1235,1236,1237,1238,1242],greater:[40,41,979,982,1012,1060,1188,1192],green:[40,41,42,1288,1289],grid:[979,1039],group:[1094,1099],guid:[1244,1245,1290],gym:1244,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1290,half:[979,982,1132,1188,1192],hand:1244,handl:[40,41,42,43,903,904,905,921,923,932,933,944,951,954,1078,1081,1083,1085,1086,1087,1132,1277,1278,1279,1280,1281,1282],has:[40,41,43,979,1063,1101,1106,1112,1116],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,979],hasattr:1132,have:[40,41,43,833,834,837,838,839,842,843,845,848,850,852,853,854,860,861,862,864,883,889,979,996,1000,1005,1006,1007,1008,1015,1063,1078,1084,1092,1101,1107,1112,1120,1132,1244,1286,1287],haven:43,hdf5:[40,41,1273,1274],head:[1213,1224,1261,1272],head_dim:[1261,1272],height:[1094,1099],height_cutoff:[40,41],help:[59,389,430,431,905,917,918,919,920,955,1078,1238,1242,1244,1252,1254,1255,1257,1258,1260],helper:1244,here:[43,1244],hidden:[1213,1223,1261,1270],hierarch:[979,998],hierarchi:[40,41],high:[40,41,482,1188,1190,1192],higher:[1078,1081,1083,1085,1086,1087,1101,1107],highest:[1188,1190],highest_util:1132,highest_util_nod:1132,highli:1244,highlight:1290,highlight_subgraph:[1232,1234,1238],hint:43,hkt:1290,hold:[955,959,979,982,986,1051,1052],host:1244,hot:[979,1043],how:[1244,1261,1272,1273,1274,1287,1290],howev:[43,1287],http:1290,hyperbol:[837,838,841,1112,1114,1118,1119,1125,1127,1205,1212],hypothet:1290,icon:1244,idea:1244,ident:[40,41,43,127,289,432,559,688,979],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[829,833,834,837,848],if_exist:[40,41],ignor:[40,41,1277,1281],ignore_key_error:[40,41],ignore_miss:[1277,1281],ignore_non:[40,41],iinfo:[80,208,389,510,638,833],imag:[27,472,473,474,979,1033,1095,1096,1097,1098,1099,1100,1213,1214,1215,1216,1217,1219,1220,1244,1290],image_dim:[1094,1098],imkkhk:1290,immedi:[1244,1287,1290],implement:[43,837,838,846,864,889,1244,1287,1290],in_featur:[1213,1222],inadvert:43,includ:[40,41,43,850,852,860,861,862,979,982,1023,1061,1062,1074,1176,1177,1188,1192,1261,1271,1272,1275,1276,1286],include_deriv:[1176,1178,1185],include_empti:[40,41],include_gener:[1232,1233,1234,1238,1273,1274],include_inf:[40,41,979,1023,1074],include_nest:[1176,1177],include_self:[40,41],inclus:[1188,1190],incom:[1213,1222],increas:[905,927,931,937,979,997,1010,1076,1132,1176,1185],increasingli:1290,increment:[979,1028,1132],increment_param_count:1238,inde:1244,indent:[40,41,42],independ:[1188,1189],index:[40,41,432,482,979,984,985,1016,1017,1039,1060,1063,1176,1179,1181,1182,1183,1186],index_nest:1176,indic:[40,41,432,446,447,457,459,460,850,852,857,858,979,984,985,1016,1017,1025,1043,1051,1052,1176,1177,1179,1181,1182,1183,1184,1186,1187,1188,1189,1205,1210,1213,1214,1215,1216,1217,1218,1219,1220,1230,1231,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274],indices_wher:[127,289,432,688,979],indistinguish:[837,848],inevit:1290,inf:[40,41,850,852,979,1023,1032,1074,1112,1116],infer:[837,842,845,850,851,903,904,979,1011,1021,1024,1049,1057,1094,1098,1101,1106,1287,1290],infin:[837,838,843,848,850,852,979,1032],infinit:[837,848],inform:[833,834,835,1078,1089],init_c:[1213,1223],init_h:[1213,1223],init_on_first_step:[1277,1281],initi:[40,41,42,59,389,430,431,905,917,918,919,920,955,1078,1132,1213,1223,1238,1242,1244,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1277,1281],initialz:[1273,1274],inner:[1128,1129,1130,1131],inner_batch_fn:[1128,1129,1130],inner_batch_shap:[1213,1222],inner_cost_fn:[1128,1129,1130],inner_grad_step:[1128,1129,1130,1131],inner_learning_r:[1128,1129,1130,1131],inner_optimization_step:[1128,1129,1130,1131],inner_v:[1128,1129,1130],inp:1132,inplac:[40,41,979,989,1026,1030,1064,1078,1081,1083,1085,1086,1087,1250,1251,1277,1278,1279,1280,1281,1282],inplace_arrays_support:[432,979],inplace_decr:[127,289,432,559,688,979],inplace_incr:[127,289,432,559,688,979],inplace_oper:[0,11,12],inplace_upd:[40,41,127,289,432,559,688,979,1250,1251],inplace_variables_support:[432,979],input:[15,18,19,40,41,42,43,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,924,927,928,931,937,949,950,955,959,960,962,963,964,965,966,970,971,979,980,981,984,985,987,988,989,990,992,993,994,995,996,997,999,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1021,1023,1024,1025,1027,1028,1029,1031,1032,1033,1037,1038,1039,1040,1048,1050,1057,1058,1060,1063,1064,1065,1066,1068,1069,1070,1071,1073,1074,1076,1078,1082,1084,1089,1093,1094,1095,1096,1097,1098,1100,1101,1104,1106,1107,1109,1110,1111,1112,1114,1116,1118,1119,1120,1124,1125,1126,1127,1128,1129,1130,1131,1132,1188,1189,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1230,1231,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276,1287],input_ax:[905,949,1132],input_channel:[1261,1262,1263,1264,1265,1266,1267,1270,1271],input_queu:1132,inputs_split:1132,insert:[979,1010],insid:43,inspect:1132,inspir:1290,instal:1244,instanc:[15,16,17,18,19,40,41,43,482,864,883,889,905,914,1132,1250,1251,1283,1284],instead:[40,41,482,1195,1197,1198,1199,1200,1201,1202,1203,1290],int32:43,int64:[955,959,979,982,986,1024,1044,1045,1077],int_dtyp:[955,964,974],integ:[40,41,482,833,835,837,839,850,852,860,861,862,955,971,979,982,992,1012,1050,1059,1188,1190,1193],integr:1244,intend:43,inter:1244,interchang:[40,41,979,1065],interest:1244,interfac:[979,986,1287],intermedi:[40,41],intern:[40,41,905,1078,1092,1132,1176,1177,1184,1185,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1283,1284],interpol:[979,1033],intersect:[1112,1113],interv:[40,41,860,861,862,979,982,993,1034,1035,1112,1115,1188,1192],introduc:1290,inv:[766,1101,1290],invalid:[860,861,862],invalid_dtyp:955,invers:[837,838,1101,1103,1105,1112,1113,1114,1115,1116,1118,1290],invert:[1101,1103,1105],invest:1290,invoc:[903,904],irrespect:1244,is_al:1132,is_arrai:[127,289,432,559,688,979,1132],is_float_dtyp:955,is_int_dtyp:955,is_mean:1132,is_sum:1132,is_var:[1238,1242],is_vari:[160,339,466,597,756,1078],isfinit:[85,213,394,515,643,837],isinf:[289,559,688,979],isinst:1132,isnan:[85,213,394,515,643,837],isnumer:1132,issu:43,item:[15,19,40,41,864,876,877,905,914,915,917,924,926,928,930,936,955,962,979,998,1022,1061,1062,1132,1176,1180,1181,1182,1185,1186,1187,1244,1273,1274,1286],iter:[15,16,17,18,19,40,41,42,903,904,905,908,909,911,912,914,915,918,919,926,928,929,930,931,936,949,979,981,990,996,997,1011,1024,1039,1044,1048,1049,1052,1057,1059,1063,1066,1071,1076,1132,1176,1177,1178,1180,1184,1185],iterbal:[905,926,930,936,1132],its:[482,857,858,905,949,979,1024,1049,1065,1071,1132,1244],itself:[43,1176,1185],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1242,1244,1245,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1288,1289],ivy_backend:[40,41],ivy_bay:1290,ivy_test:43,ivyfcmodel:1286,ivyh:[40,41,42],ivymodul:[191,816],jame:1244,jax:[43,1078,1084,1244,1290],jax_concat:1244,jnp:1244,join:[40,41,979,996,1063,1132],journal:1244,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1244,1261,1270,1290],kaimingnorm:[1252,1256],kalman:1290,kalman_filt:1290,kalman_filter_step:1290,kalman_filter_upd:1290,keep:[40,41,905,950,979,1073,1132,1244,1245,1290],keep_inner_v:[1128,1129,1130],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1128,1129,1130],keepdim:[40,41,432,464,475,476,850,852,860,861,862,979,1073,1101,1104,1195,1197,1198,1199,1200,1201,1202,1203],kei:[15,16,17,40,41,42,43,864,869,905,917,979,998,1128,1129,1130,1132,1176,1179,1183,1213,1224,1225,1244,1250,1251,1261,1272,1277,1281],kept:[40,41,42,1128,1129,1130],kera:1290,kernel:[1213,1223],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,905,914,915,927,931,937,979,983,1005,1006,1007,1036,1132,1176,1180,1273,1274],keyword_color_dict:[40,41,42],kind:[833,834,835,1290],kwarg:[15,16,17,40,41,42,59,63,905,914,927,931,937,979,1036,1132,1232,1233,1234,1238,1250,1251,1273,1274],kwarg_stateful_idx:[1232,1233,1234,1238,1273,1274],kwargs_clon:1132,kwargs_dist:1132,kwargs_uni:1132,label:[43,1226,1227,1228,1229],lamb:[1078,1085,1244,1277],lamb_upd:1078,lambda:[1132,1277,1280,1282,1286],lar:[1078,1085,1086,1244,1277],larger:[833,834,979,993],largest:[40,41,833,834,835,979,984,1012],lars_upd:1078,last:[40,41,853,854,860,861,862,979,982,1000,1033,1059,1063,1101,1104,1107,1195,1200,1202,1205,1210,1213,1223,1261,1271],later:[40,41,979,991],latest:[1261,1270],layer:[1078,1081,1083,1085,1087,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1230,1231,1244,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1290],layer_norm:1230,layernorm:[1244,1275],layerwis:[1078,1086,1277,1280],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1176,1177,1184],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1205,1206,1207],leaky_relu:[808,1205],learn:[837,842,845,850,851,1078,1081,1083,1085,1086,1087,1101,1106,1128,1129,1130,1131,1188,1194,1244,1277,1278,1279,1280,1281,1282,1287,1290],learnabl:[1230,1231,1275,1276],leav:[15,18,19,40,41,1176,1177,1178,1184,1185],left:[40,41,43,1101,1104,1195,1197,1198,1199,1200,1201,1202,1203,1244],leftmost:[40,41],len:1132,length:[40,41,42,979,982,1049,1060,1071],lenton2021ivi:1244,lenton:1244,less:[40,41,43,85,213,394,515,643,837,850,852,979,992,1132,1188,1192],less_util_node_str:1132,let:[1287,1290],level:1244,librari:[1244,1286,1290],lightweight:1244,like:[43,1078,1084,1188,1192,1244,1286,1287,1290],limit:[40,41,42,833,834,835,979,993,994,995],linalg:[29,1102,1103,1104,1105,1106,1107,1108,1244],line:43,linear0:[1244,1286],linear1:1244,linear2:1286,linear:[979,1014,1033,1101,1205,1206,1207,1208,1213,1221,1244,1261,1262,1263,1264,1265,1266,1267,1268,1286],linear_algebra:[475,476,477,478,850,851,852],linear_resampl:[127,289,432,559,688,979],linearli:[979,1014],link:[43,1244],linspac:[127,289,432,559,688,979,982],list:[15,18,19,40,41,43,386,387,388,830,831,832,853,854,860,861,862,905,914,915,924,925,927,928,929,931,934,935,949,979,982,986,988,1039,1058,1059,1068,1073,1128,1129,1130,1132,1176,1177,1178,1180,1184,1185,1213,1214,1215,1216,1217,1218,1219,1220,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268],list_join:[40,41,42],list_stack:[40,41],liter:[850,852],littl:1287,load:[40,41],loaded_kwarg:1132,loader:1244,local:43,local_set:[979,1022],locat:[43,837,844,979,1032,1188,1189],log2:[85,394,515,643,837],log:[777,979,1035,1112,1132,1226,1227,1228,1229,1244],log_all_op:1238,log_global_inference_abs_tim:[1235,1244],log_global_inference_rel_tim:[1235,1244],logarithm:[837,846,1112,1123],logic:[31,837,847,860,861,862,1110,1111,1244],logical_and:[354,774,1109],logical_not:[85,213,394,515,643,837],logical_or:[354,774,1109],logit:[1226,1229],logspac:[127,289,432,559,688,979],look:[43,1287,1290],loop:[1128,1129,1130,1131],loss:[1227,1228,1229,1244,1286],loss_fn:[1244,1286],lot:1287,low:[40,41,482,1188,1190,1192],lower:[40,41,43,979,1038,1188,1192],lower_depth:[1273,1274],lowest:[15,18,19,40,41,1176,1185,1188,1190],lstm:[1213,1223,1244,1261],lstm_updat:[43,1213],machin:[833,834,835,837,842,845,850,851,1101,1106,1188,1194,1244,1287,1290],made:43,mai:[979,982,1004,1008,1244,1287,1290],main:[979,1024,1244],mainli:1244,maintain:43,make:[43,482,905,1132,1244,1287],maml:[1128,1129,1130],maml_step:1128,manag:[905,1132],manhattan:[850,852],mani:[40,41,43,979,1059,1244],manipulation_funct:[853,854],manner:[15,18,19,40,41,43,1176,1185],manual:[1176,1177,1184,1290],map:[40,41,42,837,844,905,914,979,1032,1132,1176,1181,1182,1185,1261,1272,1286],map_cont:[40,41],map_nest_at_index:1176,map_nest_at_indic:1176,map_sequ:[40,41],mapper:[905,914,915,1132],mask:[1213,1224,1225],master:43,match:[40,41,979,1036],match_kwarg:979,math:[33,481,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1132,1244],mathbb:[1101,1108],mathbf:[1101,1108],mathemat:[829,850,852],matmul:[43,289,432,559,688,979,1290],matplotlib:1287,matric:[1213,1222],matrix:[40,41,850,851,979,981,994,1037,1101,1102,1103,1104,1105,1106,1108,1213,1222,1261,1271],matrix_norm:[40,41,167,348,475,606,766,1101],matter:1244,max:[40,41,389,833,834,835,979,994,995,1006,1038,1051,1052,1132,1195,1197,1277,1279],max_batch_s:[40,41],max_chunk_s:[905,949,1132],max_depth:[40,41,905,909,912,919,927,931,937,979,1022,1132,1176,1185],max_dev_dim_step_ratio:905,max_freq:[979,1014],max_length:[40,41],max_node_dim_step_ratio:1132,max_norm:[40,41,979,994,995],max_split_factor_step_s:[905,1132],max_trust_ratio:[1078,1085,1277,1279],maxim:[1244,1287,1290],maximis:1244,maximum:[40,41,42,688,905,927,931,937,949,979,984,993,994,995,1014,1078,1085,1132,1176,1185,1195,1197],mayb:[15,18,19],mdi:1132,mean:[40,41,482,905,934,935,936,937,949,979,1006,1128,1129,1130,1131,1132,1176,1180,1188,1191,1195,1198,1201,1203,1252,1286,1290],measur:[1213,1224,1261,1272],mech:1244,mechan:[1244,1290],medic:1290,member:43,memori:[905,921,944,949,951,954,1132,1213,1223,1244],merg:43,merge_with_upstream:43,meshgrid:[289,432,688,979],messag:[1288,1289],meta:[35,1129,1130,1131,1244],method:[40,41,42,43,482,979,986,998,1039,1051,1052,1078,1085,1086,1132,1176,1177,1184,1185,1244,1261,1272,1273,1274,1287],might:[979,1004,1290],min:[40,41,389,833,834,835,850,852,979,1006,1040,1051,1052,1061,1101,1106,1132,1195,1199],min_bas:[979,1062],min_denomin:[979,1061],min_dev_dim_s:905,min_node_dim_s:1132,min_sf_tune_step:[905,1132],min_unit_dev_tune_step:905,min_unit_node_tune_step:1132,mind:1244,mini:[1230,1231,1275,1276],minimum:[40,41,688,905,955,959,979,982,985,986,993,1019,1020,1053,1054,1061,1062,1132,1195,1199],miss:[1277,1281],ml_framework:[837,842,845,850,851,979,982,1101,1106],mod:[979,1013],mod_depth:[1273,1274],mod_height:[1273,1274],mod_with_top_mod_key_chain:[1273,1274],mode:[40,41,475,477,903,904,905,934,935,936,937,949,1101,1106,1107,1132,1287],model:[1244,1286],modul:[40,41,42,59,979,1041,1132,1244,1245,1247,1248,1249,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276,1283,1284,1290],moment:[1078,1080,1081,1085,1277,1278,1279],more:[43,853,854,979,1063,1132,1244,1287,1290],more_util_node_str:1132,most:[40,41,43,1101,1106,1244,1290],move:[40,41,43,905,950,1132],much:[43,1244,1290],multi:[482,979,1041,1213,1224,1261,1272],multi_head_attent:1213,multi_index_nest:1176,multi_map:[40,41],multi_nod:1132,multidev:[905,916,917,918,937],multidevcontain:[40,41],multidevic:[905,914],multidevit:[905,908,911,914,915,919],multidevitem:[905,907,910],multidevnest:[905,909,912],multiheadattent:[1244,1261],multinod:[1132,1136],multinodecontain:1132,multinodeit:1132,multinodeitem:1132,multinodenest:1132,multinomi:[173,358,482,613,792,1188],multipl:[40,41,860,861,862,979,1036,1059,1101,1103,1195,1197,1198,1199,1200,1201,1203,1230,1231,1261,1271,1287],multipli:[40,41,979,1001,1195,1200],multiprocess:[40,41,42,432,688,905,914,979,1132],must:[40,41,42,43,830,831,832,837,838,839,842,843,845,848,850,852,853,854,860,861,862,864,883,889,905,934,935,936,937,949,979,982,996,998,1000,1008,1038,1040,1052,1063,1112,1117,1120,1132,1188,1193,1277,1281],mutabl:[1176,1178,1185],mutlidevic:[905,914],mutlinod:1132,mw_tm1:[1078,1081,1085],mx_concat:1244,mxnet:[43,1244,1290],my_func:43,mymodel:1244,name:[903,904,1232,1233,1234,1238,1286],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1287],nan:[40,41,829,837,838,843,844,979,1023,1074],nativ:[15,17,18,19,40,41,43,905,921,923,932,933,944,951,954,955,960,967,968,1132,1244,1245,1250,1251],native_modul:[1250,1251],native_module_class:[1250,1251],nativearrai:[15,18,19,43,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,852,853,854,857,858,860,861,862,864,883,889,905,923,949,950,955,959,965,970,971,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1016,1017,1021,1023,1024,1025,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1048,1049,1050,1051,1052,1057,1059,1060,1063,1065,1066,1068,1069,1070,1071,1073,1074,1075,1076,1077,1132,1176,1178,1185],natur:[1112,1123,1290],ncdhw:[1213,1218,1219,1261,1266,1267],nchw:[1213,1216,1217,1220,1261,1264,1265,1268],ncw:[1213,1214,1215,1261,1262,1263],ndarrai:[43,386,387,388,389,391,392,482,979,1069],ndhwc:[1213,1218,1219,1261,1266,1267],nearest:[979,1050],need:[43,979,994,995,1213,1215,1217,1219,1244,1261,1263,1265,1267,1290],neg:[40,41,837,843,850,852,853,854,860,861,862,1195,1200,1202,1205,1207],negative_slop:1252,neither:1132,nest:[15,16,17,18,19,40,41,42,905,927,931,937,979,986,1068,1128,1129,1130,1132,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1273,1274,1277,1278,1279,1280,1281,1282],nested_indices_wher:1176,nested_map:[1132,1176],network:[1213,1222,1244,1245,1247,1261,1273,1274,1290],neural:[1213,1244,1247,1261,1286],new_node_percent_mem:1132,new_node_util:1132,new_node_utils_kei:1132,new_std:[1230,1231,1275,1276],newli:[43,903,904,979,990,991],newlin:[40,41,42],newshap:[979,990,1049],next:[833,834,1132,1273,1274,1277,1278,1279,1280,1281,1282],nhwc:[1213,1216,1217,1220,1261,1264,1265,1268],node:[40,41,1176,1177,1184],node_clon:1132,node_dist:1132,node_dist_arrai:1132,node_dist_it:1132,node_in:1132,node_mapp:1132,node_str:1132,node_to_str:1132,node_util:1132,nodedistit:1132,nodedistitem:1132,nodedistnest:1132,nodemanag:[1132,1143],nodemapp:1132,nodemappermultiproc:1132,noinspect:[43,906,956,957,958,1079,1132,1239],non:[40,41,850,852,860,861,862,903,904,955,969,1273,1274,1277,1281,1287],none:[40,41,42,43,59,61,64,386,387,388,430,432,433,436,438,445,446,447,448,455,456,457,458,459,460,461,462,463,465,475,476,482,483,830,831,832,833,834,835,837,842,845,850,851,852,853,854,860,861,862,903,904,905,914,915,921,922,947,948,949,950,955,962,963,964,979,982,986,1003,1004,1009,1011,1015,1016,1017,1022,1024,1026,1027,1028,1029,1030,1034,1035,1041,1043,1044,1045,1048,1051,1052,1053,1054,1059,1060,1061,1062,1071,1072,1077,1078,1081,1083,1085,1086,1087,1093,1094,1098,1101,1104,1106,1128,1129,1130,1131,1132,1176,1177,1180,1184,1185,1188,1189,1190,1191,1192,1195,1197,1198,1199,1200,1201,1202,1203,1213,1215,1217,1219,1222,1223,1224,1225,1230,1231,1232,1233,1234,1238,1242,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],norm:[40,41,850,852,979,994,995,1101,1104,1231,1244,1276,1277,1279],normal:[1188,1191,1230,1231,1275,1276],normalized_idx:[1230,1231],normalized_shap:[1275,1276],notat:[40,41,1195,1196],note:[43,1101,1106],noth:[40,41,1287],notimplementederror:1132,now:[40,41,905,950,979,980,1132,1244,1261,1272,1273,1274,1286,1287,1290],np_concat:1244,np_finfo:389,ns_tune_step:1132,num:[432,455,456,979,1034,1035],num_arrai:[40,41],num_arrays_in_memori:979,num_arrays_on_dev:905,num_band:[979,1014],num_channel:[1261,1268],num_chunk:1132,num_chunks_floor:1132,num_class:[1188,1189],num_cpu_cor:905,num_gpu:[120,430,905,1132],num_head:[1213,1224,1261,1272],num_kei:[1213,1224,1225],num_lay:[1261,1270],num_or_size_split:[40,41,432,461,979,1059],num_output:1132,num_queri:[1213,1224,1225],num_sampl:[432,454,482,483,979,1033,1094,1095,1188,1189],num_task:[1128,1129,1130,1131],number:[40,41,42,829,833,834,835,837,844,860,861,862,903,904,905,941,942,943,955,966,970,971,979,982,993,997,1010,1014,1021,1024,1033,1034,1035,1038,1042,1048,1059,1066,1070,1074,1076,1101,1107,1128,1129,1130,1131,1132,1188,1189,1193,1195,1197,1198,1199,1201,1203,1213,1224,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1287,1290],numer:[43,837,843,864,883,889,979,1019,1020,1053,1054,1061,1062,1112,1120,1252],numhead:[1213,1224],numpi:[40,41,43,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,979,1069,1101,1106,1107,1195,1196,1244,1286,1287,1290],nwc:[1213,1214,1215,1261,1262,1263],obj:[40,41],object:[40,41,42,59,389,833,834,835,905,955,959,979,982,986,1078,1176,1179,1181,1182,1183,1186,1187,1188,1194,1238,1242,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274],object_in:[432,436,979,986],observ:1132,occupi:[833,834,835,979,1051,1052],off:[979,982],offer:1244,offset:[850,851,1230,1231],often:1287,old:[40,41],on_init:[1261,1272,1273,1274],onc:[43,905,949,1132,1188,1189,1244],one:[40,41,43,850,852,853,854,905,934,935,936,937,949,955,961,979,1024,1036,1043,1051,1052,1060,1063,1101,1104,1132,1195,1196,1197,1198,1199,1200,1201,1202,1203,1244,1287,1290],one_hot:[127,432,559,688,979],onearrai:[979,1010],ones:[40,41,77,205,386,507,635,830,979,1024,1043,1045,1244],ones_lik:[127,289,432,559,688,979],ongo:43,onli:[40,41,43,482,853,854,905,1101,1106,1132,1176,1177,1178,1184,1277,1278,1279,1280,1281,1282,1286,1287],onlin:1244,onto:[905,934,935,950,1132,1176,1180,1185],oom:[905,1132],open:[979,982,1188,1192,1244,1290],opencv:1287,oper:[40,41,837,847,979,989,1005,1006,1007,1034,1035,1064,1078,1081,1083,1085,1086,1087,1109,1110,1111,1213,1214,1215,1216,1217,1218,1219,1220,1222,1244,1245],operand:[40,41,837,838,1195,1196],oppos:[979,1014],optim:[905,1078,1081,1083,1085,1086,1087,1128,1129,1130,1131,1132,1244,1278,1279,1280,1282,1286,1290],optimizer_upd:1078,option:[15,18,19,40,41,42,43,386,387,388,830,831,832,837,842,845,850,851,852,853,854,860,861,862,903,904,905,914,915,923,927,928,929,930,931,934,935,936,937,944,947,948,949,950,954,955,960,965,969,978,979,981,982,984,985,986,994,995,996,1001,1003,1004,1011,1014,1015,1016,1017,1021,1023,1024,1031,1033,1034,1035,1036,1039,1041,1043,1044,1045,1048,1051,1052,1055,1057,1059,1060,1061,1062,1063,1071,1073,1074,1077,1078,1081,1083,1084,1085,1086,1087,1089,1094,1098,1101,1104,1106,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1188,1189,1195,1197,1198,1199,1200,1201,1202,1203,1205,1206,1210,1213,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287],ord:[850,852,979,1011,1101,1107],order:[40,41,42,43,850,852,853,854,857,858,1078,1081,1083,1085,1086,1087,1101,1104,1128,1129,1130,1283,1284],ordered_node_util_kei:1132,org:1290,organ:43,origin:[40,41,42,979,1045,1049,1077,1101,1104],other:[40,41,43,864,866,867,872,874,875,879,881,882,883,884,885,887,889,890,891,892,893,894,896,897,898,900,901,902,903,904,979,981,982,1024,1078,1082,1188,1192,1244,1286,1287,1290],other_i:[43,864,883,889],otherwis:[15,16,17,18,19,40,41,837,843,850,852,860,861,862,905,922,955,962,963,964,979,989,1071,1072,1075,1078,1084,1089,1093,1128,1129,1130,1132,1195,1197,1198,1199,1201,1203],our:[43,1244,1290],out:[482,864,883,979,982,1112,1116,1213,1221,1223,1244,1261,1269],out_feat_dim:[1213,1224],out_featur:[1213,1221,1222],out_i:[837,843],outdat:1290,outer:[1128,1129,1130,1131],outer_batch_fn:[1128,1129,1130],outer_batch_shap:[1213,1222],outer_cost_fn:[1128,1129,1130],outer_v:[1128,1129,1130],outlin:1287,output:[40,41,43,830,831,832,853,854,905,914,915,949,979,982,991,1015,1024,1048,1066,1078,1082,1112,1117,1132,1188,1190,1191,1192,1213,1215,1217,1219,1221,1223,1224,1225,1244,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272],output_ax:[905,949,1132],output_axi:1132,output_channel:[1261,1262,1263,1264,1265,1266,1267,1270,1271],output_connected_onli:[1232,1234,1238,1273,1274],output_queu:1132,output_shap:[1213,1215,1217,1219,1261,1263,1265,1267],outsid:[979,993],over:[40,41,850,852,860,861,862,979,1011,1101,1104,1188,1192,1195,1197,1198,1199,1201,1203,1230,1231,1275,1276],overal:1287,overflow:[979,982],overhead:1287,overrid:[979,1043,1045,1077],overriden:[1277,1281],overwrit:[40,41,905,949,1132],overwrite_at_key_chain:[40,41],own:[1244,1287,1290],packag:[43,1287],pad:[979,997,1014,1076,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],pad_width:[432,979,997,1076],page:1244,pair:[1213,1225],parallel:[905,914,915,1132],parallelis:[905,914,915,1132],param:[40,41,42,43,432,446,447,837,848,905,949,979,980,1016,1017,1043,1044,1132,1243,1244,1273,1274,1286],paramet:[15,16,17,18,19,40,41,42,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,965,966,967,968,969,970,971,978,979,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,997,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1044,1045,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1089,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],parameter:[1188,1191,1192],params_all_empti:1238,pardo:1244,pars:[979,998],part:[1078,1081,1083,1085,1086,1087,1112,1116,1244,1273,1274,1287],partial:[40,41,1273,1274],particl:1290,particular:[43,1290],pass:[40,41,42,43,905,914,949,955,960,979,991,1078,1092,1128,1129,1130,1132,1250,1251,1273,1274,1277,1281,1283,1284],pattern:[40,41,979,1005,1006,1007],per:[905,1132,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],percent_used_mem_on_dev:905,percent_used_mem_on_nod:1132,percentag:[905,944,1132],perf_count:1132,perform:[40,41,43,857,858,860,861,862,905,979,984,985,1001,1005,1006,1007,1027,1028,1029,1033,1034,1035,1078,1081,1083,1085,1086,1087,1094,1095,1128,1129,1130,1131,1132,1176,1181,1182,1195,1197,1198,1199,1200,1201,1202,1203,1205,1210,1213,1221,1223],permissable_step:1132,permit:43,permut:[482,979,1065,1071],perpendicular:[979,1000],person:1244,physci:1290,pickl:[40,41,1132],pickle_filepath:[40,41],pid:1238,pinv:[348,766,1101],pip:1244,pipelin:1286,pkk:1290,pkkm1:1290,pkm1km1:1290,place:[40,41,43,830,831,832,905,950,979,1010,1015,1027,1028,1029,1132,1277,1278,1279,1280,1281,1282],placehold:[1176,1185],pleas:[482,1101,1106],point:[43,829,830,831,832,833,834,837,838,848,850,852,955,970,979,982,1112,1120],popul:[40,41,1188,1189],popular:1290,population_s:[482,483,1188,1189],portabl:[1244,1245],posit:[15,16,17,833,834,837,843,905,927,931,937,979,980,982,1010,1014,1132,1188,1193,1250,1251],possibi:[40,41],possibl:[979,1036,1068,1094,1099,1290],post:[1230,1231],post_shap:[40,41],power:[43,864,889,895,979,1019,1053,1062,1252],practic:1244,pre:[905,1132,1244],pre_shap:[40,41],precis:[833,834,837,848],pred:[1226,1227,1228,1229],predict:[1226,1227,1228,1229,1290],preprint:1244,present:[40,41],preserv:[40,41,42,853,854,979,1011,1078,1089],preserve_typ:[40,41,466,469,1078,1089],press:1244,prevent:[43,1078,1080,1081,1085,1132,1277,1278,1279],previou:[1078,1081,1085],previous:[979,991],prime:1244,print:[40,41,42,905,945,979,1046,1244,1286],print_all_arrays_in_memori:979,print_all_arrays_on_dev:905,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1277,1281],prob:[482,483,1188,1189,1213,1221,1261,1269],probabl:[1188,1189,1213,1221,1261,1269],problem:[43,1290],process:[43,905,914,915,944,954,979,1041,1132],process_specif:[905,944,954,1132],prod:[40,41,979,1006],produc:[905,914,915,1132],product:[40,41,979,1000,1001,1037,1195,1196,1213,1224,1225,1261,1272],profil:[120,283,430,552,680,905,1132],project:[1244,1286,1287,1290],promot:[43,837,838,839,848,850,852,864,889,1112,1120],prompt:1244,properli:43,properti:[40,41,389,905,917,1132,1238,1242,1273,1274,1277,1278,1279,1280,1282],provid:[40,41,43,853,854,860,861,862,903,904,905,922,955,962,963,964,969,978,979,1004,1043,1045,1052,1077,1078,1081,1083,1085,1086,1087,1093,1132,1244,1261,1270,1277,1278,1279,1280,1281,1282,1287],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1101,1105],ptype:[1238,1242],pull:[1244,1245],pure:[40,41,1244,1290],purpos:1290,put:1132,pybroadexcept:1132,pyprotectedmemb:[1132,1239],pyshadowingbuiltin:43,pyshadowingnam:[906,956,957,958,1079,1132],python:[40,41,905,944,954,979,982,1132,1244],pytorch:[1078,1081,1083,1085,1086,1087,1101,1106,1244,1277,1278,1279,1280,1281,1282,1286,1287,1290],pyunresolvedrefer:1132,quadrant:[1112,1117],queri:[40,41,864,878,899,905,938,948,1132,1213,1224,1225,1261,1272],query_dim:[1261,1272],query_kei:[40,41],queue:[40,41,42,905,914,915,979,1047,1055,1132],queue_class:[905,914,915,1132],queue_load_s:[40,41,42],queue_timeout:[40,41,42,979,1132],quick:[482,1244],quickli:[43,1286],radian:[837,840,1112,1113,1115,1117,1124,1126],rai:[1112,1113],rais:[40,41,43,860,861,862,864,889,979,989,1019,1053,1060,1062,1072,1132,1273,1274,1277,1281],ram:[905,944,951,954,1132],randint:[173,358,482,613,792,1188],random:[37,40,41,483,1189,1190,1191,1192,1193,1194,1244],random_crop:1094,random_norm:[173,358,482,613,792,1188],random_uniform:[173,358,482,613,792,1188],randomli:[482,1094,1098,1213,1221,1261,1269],randomness_factor:[1232,1234,1238,1273,1274],rang:[482,979,982,1034,1035,1112,1117,1132,1244,1286,1290],rank:[850,852,860,861,862,979,997,1073,1076],rate:[1078,1081,1083,1085,1086,1087,1128,1129,1130,1131,1261,1272,1277,1278,1279,1280,1281,1282],rather:[40,41,905,949,979,982,1031,1078,1084,1132],ratio:[905,1078,1085,1094,1099,1132,1277,1279],raw:[40,41,1101,1106],raw_delta:1132,reach:[905,927,931,937,1132,1176,1185],read:[40,41],readi:[1132,1286],real:[1112,1113,1116],realiti:1287,rearrang:[40,41,979,1005,1007],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1128,1130],receiv:[905,914,915,979,983,1036,1132,1261,1271],receivess:[905,1132],receiving_fn:1238,receivng:[1128,1131],recev:[1128,1129,1130],recognit:1290,recommend:1244,rectifi:[1205,1207,1208],recurr:[1213,1223],recurrent_bia:[1213,1223],recurrent_kernel:[1213,1223],recurs:[40,41,1176,1177,1178,1184,1185],redefin:43,reduc:[40,41,860,861,862,905,949,979,1006,1101,1106,1132,1195,1197,1198,1199,1200,1201,1202,1203],reduce_max:[40,41,180,363,484,618,799,1195],reduce_mean:[40,41,180,363,484,618,799,1195,1244,1286],reduce_min:[40,41,180,363,484,618,799,1195],reduce_prod:[40,41,180,363,484,618,799,1195],reduce_std:[40,41,363,1195],reduce_sum:[40,41,180,363,484,618,799,1132,1195],reduce_var:[40,41,180,363,484,618,799,1195],reduct:[39,40,41,432,459,460,860,861,862,979,1006,1051,1052,1196,1197,1198,1199,1200,1201,1202,1203,1244],refactor:43,refer:[43,860,861,862,1078,1080,1081,1101,1108,1261,1271,1290],reflected_oper:[0,13,14],regard:[905,1132],regardless:[40,41,903,904],register_paramet:1286,reimplement:1290,rel:[853,854,1078,1081,1083,1085,1086,1087],rel_slice_obj:1132,relev:[1277,1278,1279,1280,1281,1282],relu:[808,1205,1206,1207,1244,1286],remain:[43,979,1049,1176,1180],remaind:[40,41,979,1013,1059],remov:[40,41,979,1060,1128,1129,1130],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,853,854,979,1011],rep:[979,1066],repeat:[40,41,43,289,688,979,1007,1066,1132,1287],repeated_config_check:[905,1132],repeatedli:[1176,1183],repetit:[40,41,979,1048,1066],replac:[40,41,43,482,483,979,993,1051,1052,1188,1189],repo:[43,1244],repres:[43,837,838,955,961,966,1213,1222],represent:[40,41,42,43,829,833,834,835,837,839,905,932,933,955,961,967,968,979,1058,1068,1132],reptil:[1128,1131],reptile_step:1128,request:[1244,1245],requir:[43,837,848,903,904,955,959,979,982,986,1250,1251],resampl:[979,1033],reserv:43,reshap:[40,41,43,482,688,979],reshape_lik:[40,41],respect:[837,839,842,845,864,883,979,1008,1078,1080,1081,1082,1083,1085,1086,1087,1101,1106,1112,1120,1128,1129,1130,1131],respond:43,respons:1132,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,837,838,839,842,843,845,847,848,850,852,860,861,862,864,883,889,905,914,979,982,1008,1051,1052,1063,1101,1104,1109,1110,1111,1112,1120,1132,1195,1197,1198,1199,1200,1201,1202,1203,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1244],ret:1132,ret_dict:1132,ret_fn:[905,914,915,1132],retain:[1078,1082],retain_grad:[466,467,1078,1082],retreiv:1132,retrn:[979,1058],return_cont:[40,41],return_dict:[40,41],return_graph:[1232,1233,1234],return_inner_v:[1128,1129,1130,1131],return_sequ:[1261,1270],return_st:[1261,1270],rev:[979,1004],revers:[40,41,853,854,979,1004,1011,1071],review:43,right:[40,41,43],rk_e:1290,robot:1244,ronald:1244,root:[43,837,848],round:[289,432,688,837,848,979,982,1132],row:[979,1024,1188,1189],rule:[43,837,839,848,864,889,979,982,1112,1120],run:[43,905,914,1078,1080,1081,1085,1128,1129,1130,1131,1132,1244,1245,1261,1272,1273,1274],safe:[837,842,905,914,1132],safety_factor:[905,1132],same:[15,16,17,40,41,43,853,854,905,914,915,949,950,955,959,979,980,992,996,1012,1013,1016,1017,1043,1045,1050,1051,1052,1063,1077,1078,1084,1089,1101,1107,1112,1116,1128,1129,1130,1132,1195,1196,1213,1214,1215,1216,1217,1218,1219,1220,1244,1261,1262,1263,1264,1265,1266,1267,1268,1286,1290],same_arrai:[40,41],sampl:[979,1033,1094,1095,1188,1189,1191,1192,1213,1221,1244,1261,1269],satisfi:[979,986,1101,1103,1108],save:[40,41,979,1056,1067,1094,1096,1273,1274],save_debug_info:1238,save_dir:[430,431,905,920,1132],save_to_disk:[1232,1234,1238,1273,1274],save_weight:[1273,1274],scalar:[850,852,979,993,1043,1070,1074],scale:[905,947,948,1078,1086,1132,1213,1221,1224,1225,1230,1231,1261,1269,1272,1277,1280],scaled_dot_product_attent:1213,scatter:[979,1043,1051,1052],scatter_flat:[127,289,432,559,688,979],scatter_nd:[127,289,432,559,688,979],scene:[1078,1081,1083,1085,1086,1087],schemat:1244,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,837,839,905,936,979,987,1000,1008,1047,1055,1065,1078,1080,1081,1085,1128,1130,1132,1277,1278,1279],secondli:1290,sector:[837,838],see:[43,59,389,430,431,482,837,839,850,852,860,861,862,864,883,889,905,917,918,919,920,955,979,982,1034,1035,1078,1112,1120,1238,1242,1244,1252,1254,1255,1257,1258,1260],seed:[40,41,173,482,792,1188],seed_valu:[40,41,482,1188,1193],seem:1244,seen_set:[979,1022],select:[979,986,1060,1287,1290],self:[40,41,43,59,389,430,431,864,883,889,905,917,918,919,920,955,1078,1132,1238,1242,1244,1252,1254,1255,1257,1258,1260,1277,1281,1286,1290],self_i:[864,883],sent:1132,seper:[43,979,1014],seq:[40,41,42,1195,1196,1273,1274],sequenc:[15,16,17,40,41,42,43,482,903,904,905,914,915,924,925,926,927,928,929,930,931,934,935,949,955,959,979,982,986,988,990,996,997,1011,1024,1036,1039,1044,1048,1049,1052,1059,1063,1066,1071,1076,1078,1082,1094,1098,1099,1101,1104,1132,1176,1187,1188,1190,1192,1195,1197,1198,1199,1200,1201,1202,1203,1213,1214,1215,1216,1217,1218,1219,1220,1230,1231,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1273,1274,1275,1276,1277,1281,1283,1284],sequenti:1244,seri:43,set:[15,18,19,40,41,905,934,935,947,948,949,979,981,1003,1024,1053,1054,1055,1056,1078,1081,1083,1084,1085,1086,1087,1101,1104,1132,1176,1177,1184,1186,1187,1188,1189,1193,1195,1197,1198,1199,1200,1201,1202,1203,1242,1244,1261,1270,1277,1278,1279,1280,1281,1282,1287,1290],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1242,set_debug_mod:44,set_default_devic:905,set_default_dtyp:955,set_default_float_dtyp:955,set_default_int_dtyp:955,set_default_nod:1132,set_exception_debug_mod:44,set_framework:[40,41,43,59,1132,1244,1286,1287,1290],set_ivy_backend:[40,41],set_min_bas:979,set_min_denomin:979,set_nest_at_index:1176,set_nest_at_indic:1176,set_param:1238,set_queue_timeout:979,set_split_factor:[905,1132],set_stat:[1277,1278,1279,1280,1281,1282],set_tmp_dir:979,set_with_grad:1078,setter:1132,sever:1290,sgd:[1244,1277],shape0:1132,shape:[40,41,43,386,387,388,432,445,460,482,688,830,831,832,853,854,905,917,955,959,979,980,990,992,996,997,1010,1011,1012,1013,1015,1017,1021,1024,1043,1044,1045,1048,1049,1050,1051,1052,1058,1060,1063,1076,1077,1094,1098,1101,1103,1106,1112,1116,1117,1132,1188,1190,1191,1192,1195,1196,1213,1215,1217,1219,1238,1242,1261,1263,1264,1265,1266,1267,1268,1275,1276],shape_slic:[40,41],shape_to_tupl:979,share:[40,41,1244,1287],shift:1132,should:[40,41,42,43,482,837,838,839,843,848,850,852,864,883,889,903,904,905,979,990,991,998,1043,1049,1078,1081,1083,1085,1086,1087,1112,1120,1132,1195,1196,1244],show:[40,41,1238,1244,1290],show_debug_info:1238,show_graph:[1232,1244,1273,1274,1277,1281],show_mod_in_top_mod:[1273,1274],show_structur:[1273,1274],show_sub_contain:[40,41],show_v:[1273,1274],show_v_in_top_v:[1273,1274],shown:[40,41],shp:1132,shuffl:[40,41,173,482,792,1188],shuffle_h5_fil:[40,41],sigmoid:[808,1205,1244,1286],signatur:[43,59,389,430,431,432,466,471,475,479,480,482,905,917,918,919,920,955,1078,1238,1242,1252,1254,1255,1257,1258,1260],signific:1290,similar:[43,1213,1224,1261,1272],similarli:[1101,1106],simpl:[43,979,1009,1244,1287,1290],simpler:43,simplest:1287,simpli:[40,41,43,1244,1287,1290],simultan:1244,sin:[777,979,1014,1112,1126,1287],sinco:1287,sine:[837,838,1112,1115,1124,1125],singl:[40,41,903,904,905,914,915,934,935,936,937,979,1060,1070,1074,1094,1099,1132,1188,1191,1192,1195,1197,1198,1199,1200,1201,1202,1203,1244,1287,1290],singleton:[850,852,860,861,862],singular:[1101,1107],sinh:[777,1112],siren:[1244,1252],size:[40,41,42,432,459,905,928,929,930,931,947,948,949,979,982,990,1034,1035,1051,1059,1094,1098,1101,1104,1107,1132,1188,1189,1191,1192,1195,1197,1198,1199,1200,1201,1202,1203,1261,1262,1263],size_ordered_arrai:[40,41],skew:[1101,1108],skinv:1290,skip:[40,41],slice:[40,41,857,858,979,1016,1017,1132,1176,1183],slice_kei:[40,41],slice_obj:[40,41,1132],slice_via_kei:[40,41],slide:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],slope:[1205,1207],small:[1226,1227,1228,1229,1230,1231,1244,1275,1276,1287],smaller:[979,993],smallest:[40,41,833,834,835,979,985,992],smallest_norm:[389,833,834],softmax:[189,493,808,1205,1213,1224,1225],softplu:[808,1205],solv:1290,some:[40,41,43,979,982,1078,1080,1081,1083,1085,1086,1087,1092,1213,1221,1244,1261,1269,1287,1290],some_backend:43,some_namespac:43,someth:[43,1290],something_cool:43,somewher:[40,41],sort:[40,41,42,858,1101,1107,1132],sort_by_kei:[40,41],sorting_funct:[857,858],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,386,387,388,389,391,392,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1242,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1288,1289,1290],space:[979,982,1014,1034,1035],spars:[1226,1229],sparse_cross_entropi:1226,spawn:[979,1041],special:[837,838],specif:[40,41,43,905,947,979,998,1005,1006,1007,1041,1128,1129,1130,1131,1132,1188,1194,1244,1273,1274,1286,1287],specifc:[1188,1189],specifi:[40,41,43,850,851,852,853,854,860,861,862,905,924,925,926,927,928,929,930,931,934,935,939,941,945,948,949,950,955,959,961,979,982,984,985,986,993,996,997,1015,1016,1017,1023,1034,1035,1063,1073,1076,1101,1104,1132,1176,1181,1182,1186,1187,1195,1196,1197,1198,1199,1200,1201,1202,1203],split:[40,41,127,289,432,559,688,905,914,928,929,930,931,947,948,949,979,1036,1132],split_arg:1132,split_factor:[905,914,1132],split_func_cal:[905,1132],split_siz:1132,spread:[905,937,1132],sqrt:[85,213,394,515,643,837,850,852],squar:[837,848,979,1024,1101,1103],squeez:[127,289,432,559,688,979],stabil:[857,858,979,1061,1062],stabl:[857,858,979,1019,1020,1053,1054,1061,1062],stable_divid:979,stable_pow:979,stack:[40,41,289,688,979,1094,1099,1176,1177,1184,1261,1270],stack_imag:[163,344,471,602,762,1094],stacked_dim_s:1132,stage:43,standard:[40,41,833,834,1188,1191,1195,1201,1230,1231,1244,1245,1275,1276],start:[40,41,43,430,431,432,433,455,456,482,905,920,979,982,1034,1035,1132,1244,1287],starting_index:[40,41],starting_split_factor:[905,1132],state:[1132,1213,1223,1232,1233,1234,1238,1244,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],statement:1287,static_argnam:[432,438,903,904],static_argnum:[432,438,903,904],std:[482,1188,1191],step:[40,41,432,433,905,979,982,1034,1035,1078,1080,1081,1083,1085,1086,1087,1128,1129,1130,1131,1132,1244,1277,1278,1279,1280,1281,1282,1286,1290],stephen:1244,stick:1244,still:[40,41,43],stochast:[1277,1282],stop:[40,41,430,431,432,433,455,456,905,920,949,979,982,1034,1035,1078,1081,1083,1085,1086,1087,1089,1128,1129,1130,1131,1132,1277,1278,1279,1280,1281,1282],stop_gradi:[40,41,339,466,597,756,905,949,1078,1081,1083,1085,1086,1087,1128,1129,1130,1131,1132,1277,1278,1279,1280,1281,1282],stopiter:1132,store:[40,41,979,1014,1059,1078,1092,1273,1274],store_var:[1273,1274],str:[15,16,17,40,41,42,43,386,387,388,389,391,392,833,834,835,903,904,905,914,915,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,949,955,960,961,966,967,968,969,970,971,978,979,986,1003,1005,1006,1007,1039,1041,1044,1051,1052,1101,1104,1106,1128,1129,1130,1131,1132,1176,1180,1195,1196,1250,1251,1261,1272,1273,1274],str_to_nod:1132,straight:1287,strength:[1244,1290],stride:[1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],string:[40,41,43,905,921,923,932,933,938,944,950,951,954,955,959,965,967,968,969,978,979,982,986,1003,1024,1044,1045,1077,1132,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274],structur:[40,41,42,43,979,998],structural_diff:[40,41],sub:[40,41,905,928,929,934,935,936,937,979,1059,1128,1129,1130,1131,1132],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1132,sub_mod:[1273,1274],sub_modul:[1283,1284],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1244,1245,1275,1276,1283,1284],subsequ:43,subset:43,substr:[40,41],suffici:[1101,1106],suggest:1244,suitabl:[1094,1099],sum:[40,41,432,459,460,850,852,905,934,935,936,937,949,979,1002,1006,1051,1052,1132,1195,1196,1202],summat:[40,41,1195,1196],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,355,356,359,360,361,362,364,365,366,367,368,369,370,371,374,376,377,378,379,380,381,382,387,388,390,391,392,395,396,397,398,399,400,401,402,403,404,405,408,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,525,526,529,530,532,536,539,540,548,553,554,555,556,557,558,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,598,599,600,601,603,604,605,607,608,609,610,614,615,616,617,619,620,621,622,623,624,625,629,630,631,636,637,639,640,641,644,645,646,647,648,649,650,651,652,653,654,657,658,660,664,667,668,676,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,757,758,759,760,761,763,764,765,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,800,801,802,803,804,805,806,809,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,831,832,834,835,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1231,1233,1234,1236,1237,1239,1243,1244,1248,1249,1251,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1289,1290],supports_inplac:979,suppos:1290,sure:43,svd:[348,606,766,1101],swap:[40,41,979,1065],swapax:[40,41,559,688,979,1290],symmetr:[1101,1108],syntax:[430,432,466,471,475,479,480,482],tab:1244,take:[43,979,1033],taken:[1195,1197,1198,1199,1201,1203],tan:[777,1112,1116],tangent:[1112,1116,1117,1118,1126,1127,1205,1212],tanh:[777,808,1112,1205],target:[40,41,905,921,924,925,926,927,928,929,930,931,934,935,936,937,950,1132,1244],target_dict:[40,41],task:[43,1128,1129,1130,1131],team:[43,1290],templat:1244,temporari:[979,1056,1067],tensor:[40,41,43,432,459,460,857,858,905,923,955,965,979,982,984,985,990,1034,1035,1038,1040,1043,1044,1045,1049,1051,1052,1059,1077,1132,1188,1189,1190,1213,1221,1223,1244,1261,1269,1271,1277,1278,1279,1280,1281,1282,1286,1287],tensorflow:[43,1101,1106,1213,1215,1217,1219,1244,1261,1263,1265,1267,1287,1290],term:[40,41,1213,1223,1244,1261,1271],termcolor:[40,41,42],termin:[40,41,42,1132],test:[43,837,843,860,861,862,955,970,971],test_array_api:43,tf_concat:1244,than:[40,41,833,834,850,852,853,854,905,949,979,982,992,993,1012,1031,1038,1060,1063,1078,1084,1132,1188,1192,1244,1287],thei:[40,41,43,1112,1117,1128,1129,1130,1188,1189,1244,1283,1284,1287],them:[1244,1290],themselv:[1176,1177],therefor:43,thi:[40,41,42,43,905,927,931,937,944,949,954,979,982,1014,1047,1049,1055,1078,1081,1083,1084,1085,1086,1087,1092,1101,1104,1132,1176,1180,1185,1195,1197,1198,1199,1200,1201,1202,1203,1213,1222,1244,1273,1274,1277,1278,1279,1280,1281,1282,1286,1287,1290],thing:[43,1244],those:[40,41,979,993,1078,1092,1101,1107,1132],though:43,threshold:[979,1038,1040],through:[40,41],tickbox:43,tile:[289,559,688,979],time:[979,1066,1078,1081,1085,1128,1129,1130,1131,1132,1188,1189,1213,1223,1261,1272,1273,1274,1290],time_chronolog:[1232,1233,1238],time_infer:[1232,1233],timeout:[40,41,42,905,914,915,979,1047,1055,1132],timestep:[1213,1223,1261,1270],timing_fnam:[1232,1233],titl:1244,tmp_dir:979,tmp_dr:[979,1056],to_appli:[40,41],to_clon:[905,1132],to_dev:[40,41,120,283,430,552,680,905],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[905,1132],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1244],to_ivy_modul:[191,816,1244,1250],to_json:[40,41],to_kv_fn:[1213,1224],to_kv_v:[1213,1224],to_list:[40,41,432,688,979],to_multi_dev:[40,41],to_mut:[1176,1178,1185],to_n:[15,40,41,1244],to_nod:1132,to_numpi:[40,41,432,688,979,1244,1286],to_out_fn:[1213,1224],to_out_v:[1213,1224],to_q_fn:[1213,1224],to_q_v:[1213,1224],to_raw:[40,41],to_scalar:[432,688,979],todo:[43,1132],togeth:[40,41,1283,1284],tool:[1244,1287],top_mod:[1273,1274],topic:1290,torch:[43,903,904,1244,1286,1287,1290],torch_concat:1244,torchfcmodel:1286,total:[40,41,42,905,951,1132],total_mem_on_dev:905,total_mem_on_nod:1132,tpu:[905,952,1132],tpu_is_avail:[430,552,680,905,1132],tpye:[955,966],trace:[40,41,979,1031],track:[43,905,1132,1176,1185,1273,1274],track_submod_call_ord:[1273,1274],track_submod_ret:[1273,1274],trail:[1275,1276],train:[1078,1080,1081,1085,1244,1245],trainabl:[1078,1084,1244,1245,1250,1251,1273,1274,1283],trainer:1244,tran:1290,transform:[1213,1221,1222],transpos:[40,41,127,289,432,688,905,936,979,1132,1213,1215,1217,1219,1261,1263,1265,1267],travers:[15,18,19,40,41,1176,1185],treat:[40,41,903,904],tree_depth:1242,tree_height:1238,tri:[40,41],trigonometr:[837,840,1112,1113,1116,1124],trim_kei:[40,41],trust:[1078,1085,1277,1279],truth:[837,842,845,847,864,883,979,1008,1109,1110,1111],try_else_non:979,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[905,1132],tune_dev_alloc:905,tune_dev_split:905,tune_node_alloc:1132,tune_node_split:1132,tune_step:[905,1132],tupl:[15,16,17,18,19,40,41,43,386,387,388,830,831,832,850,852,853,854,860,861,862,903,904,979,997,1014,1015,1058,1076,1132,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1190,1195,1197,1198,1199,1200,1201,1202,1203],tutori:43,two:[40,41,979,982,987,1000,1037,1065,1101,1104,1107],type:[15,18,40,41,42,43,59,391,392,430,431,830,831,832,834,835,837,838,839,842,843,845,848,850,852,853,854,860,861,862,864,883,889,905,917,918,919,920,932,933,937,949,955,959,960,961,965,966,967,968,969,970,971,978,979,980,982,986,992,996,998,1008,1012,1013,1015,1024,1031,1043,1044,1045,1050,1064,1074,1077,1078,1084,1089,1112,1120,1132,1238,1242,1244,1252,1254,1255,1257,1258,1260,1273,1274,1287],types_to_iteratively_nest:[40,41,42],uint8:[1094,1096,1100],uint8_img_to_float_img:1094,unchang:[15,16,17,18,19],uncom:43,underli:[837,839],underwai:43,unif:1132,unifi:[40,41,905,934,935,936,937,949,1132,1244],uniform:[40,41,1188,1189,1191,1192,1252,1254,1255,1258,1259],uniformli:[1188,1190,1192],unify_arrai:1132,unify_it:1132,unify_nest:1132,union:[15,18,19,40,41,43,386,387,388,389,391,392,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,852,853,854,857,858,860,861,862,864,883,889,903,904,905,923,928,929,930,931,949,950,955,959,960,961,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1048,1049,1050,1051,1052,1057,1058,1059,1060,1063,1065,1066,1068,1069,1070,1071,1073,1074,1075,1076,1077,1132,1176,1177,1178,1184,1185],uniqu:[905,914,915,1128,1129,1130,1131,1132,1176,1180],unique_kwarg:1132,unit:[43,905,1112,1113,1115,1132,1205,1206,1207,1208],unitari:[1101,1107],unless:[979,1043,1045,1077],unlik:[905,1132],unnorm:[1188,1189],unpack:[979,1073],unrol:[1213,1223],unset:1287,unset_debug_mod:44,unset_default_devic:905,unset_default_dtyp:955,unset_default_float_dtyp:955,unset_default_int_dtyp:955,unset_framework:[59,1287],unset_with_grad:1078,unstack:[40,41,127,289,432,559,688,979],until:43,unus:[903,904],updat:[40,41,432,459,460,905,914,979,1029,1051,1052,1078,1080,1081,1083,1085,1086,1087,1128,1129,1130,1132,1176,1181,1182,1186,1187,1213,1223,1244,1245,1250,1251,1277,1278,1279,1280,1281,1282,1287,1290],update_backend:[40,41],update_config:[40,41],update_inference_tim:1238,upper:[40,41,1188,1192],upper_depth:[1273,1274],upstream:43,usabl:[1244,1290],usag:[905,949,1132],use:[40,41,42,43,482,905,914,915,940,952,979,1048,1061,1062,1101,1106,1132,1213,1224,1230,1231,1244,1275,1276,1287,1290],used:[40,41,43,482,905,914,944,947,948,954,955,966,979,1019,1020,1036,1045,1051,1052,1053,1054,1077,1078,1085,1086,1101,1104,1128,1129,1130,1131,1132,1176,1185,1261,1272,1277,1279,1280,1286,1287],used_dev:[905,914],used_mem_on_dev:905,used_mem_on_nod:1132,used_node_str:1132,used_node_strs_dict:1132,useful:[40,41,905,949,1132,1213,1222,1244,1287],user:[1244,1261,1272,1273,1274,1287,1290],uses:1244,using:[40,41,1078,1080,1081,1176,1179,1183,1195,1196,1213,1221,1225,1244,1261,1269,1286,1287,1290],util:[905,938,1132],utility_funct:[860,861,862],v_with_top_v_key_chain:[1273,1274],val:[40,41,432,450,451,452,864,899,979,1027,1028,1029,1053,1054,1242],valid:[860,861,862,955,960,979,1061,1062,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],valid_dtyp:955,valu:[40,41,432,837,842,844,845,847,850,852,857,858,864,883,905,917,948,949,979,980,982,984,985,993,994,995,997,998,1004,1008,1014,1015,1016,1017,1032,1034,1035,1038,1040,1047,1048,1049,1050,1051,1052,1053,1054,1055,1071,1074,1075,1076,1078,1082,1085,1094,1100,1101,1107,1109,1110,1111,1112,1121,1122,1123,1128,1129,1130,1132,1176,1180,1181,1182,1186,1187,1188,1191,1192,1195,1197,1199,1213,1224,1225,1230,1231,1238,1261,1272,1275,1276,1277,1279],value_is_nan:979,vanilla:[1128,1130],var_shap:1252,variabl:[15,16,17,18,19,40,41,339,466,597,756,979,989,1027,1028,1029,1030,1031,1064,1078,1081,1082,1083,1084,1085,1086,1087,1089,1092,1128,1129,1130,1131,1213,1224,1230,1231,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],variable_data:[466,756,1078],varianc:[40,41,1195,1203,1290],varieti:1287,variou:[43,1244],vector:[40,41,475,478,850,852,979,995,1000,1101,1107,1108,1213,1222,1261,1271],vector_norm:[40,41,97,221,407,528,656,850],vector_to_skew_symmetric_matrix:[167,348,475,606,766,1101],verbos:1289,veri:[43,1244],verifi:43,version:43,via:[1176,1177,1184,1287],view:[1094,1099],vision:1244,visual:1287,volum:[1213,1218],vw_tm1:[1078,1081,1085],wai:[1287,1290],wait:[40,41,42],want:[1244,1287,1290],warn:[59,66,67,68,69,70],warp:[471,472,1094,1095],watch:1286,weight:[1078,1080,1081,1083,1085,1086,1087,1213,1222,1223,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1277,1279,1280],weight_initi:[1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],weights_path:[1273,1274],well:[40,41,979,1023],were:[40,41,1132],what:[43,1244],when:[40,41,42,43,905,979,991,1062,1075,1101,1107,1132,1244,1273,1274,1287,1290],where:[40,41,43,289,432,688,837,844,860,861,862,864,889,979,982,990,993,997,1010,1025,1032,1043,1076,1101,1107,1176,1177,1184,1188,1189],wherea:43,wherebi:[1176,1185],whether:[15,18,19,40,41,42,860,861,862,903,904,905,923,936,940,944,949,952,954,955,965,969,970,971,978,979,981,987,988,1001,1004,1009,1014,1021,1023,1026,1030,1031,1036,1057,1064,1073,1074,1078,1081,1082,1083,1084,1085,1086,1087,1089,1128,1129,1130,1131,1132,1176,1177,1178,1180,1184,1185,1188,1189,1205,1206,1213,1221,1244,1250,1251,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],which:[40,41,42,43,482,830,831,832,833,834,835,850,851,852,853,854,860,861,862,903,904,905,914,915,923,928,929,930,931,934,935,936,937,939,941,945,947,948,949,955,960,965,969,978,979,982,986,996,998,1000,1001,1002,1004,1011,1015,1016,1017,1018,1024,1025,1033,1034,1035,1042,1043,1044,1045,1046,1048,1051,1052,1059,1063,1073,1075,1077,1078,1081,1082,1083,1085,1086,1087,1089,1091,1092,1094,1096,1101,1104,1112,1117,1132,1176,1180,1181,1182,1186,1187,1188,1189,1190,1191,1192,1195,1197,1198,1199,1200,1201,1202,1203,1205,1210,1213,1224,1225,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1286,1287],whitespac:[40,41,42],whose:[43,837,838,853,854,864,889,979,986,991,1195,1196,1197,1198,1199,1201,1203],why:[1244,1245],width:[1094,1099],wiki:1290,wikipedia:1290,window:[1094,1099,1213,1214,1215,1216,1217,1218,1219,1220,1261,1262,1263,1264,1265,1266,1267,1268],wise:[40,41,43,837,839,840,842,845,847,864,883,889,979,992,993,1008,1012,1013,1038,1040,1050,1078,1081,1083,1085,1087,1109,1110,1111,1112,1113,1115,1116,1117,1120,1121,1122,1123,1124,1126,1205,1206,1207,1208,1209,1210,1211,1212],wish:1287,with_arg_label:[1232,1234,1238,1273,1274],with_array_cach:[1232,1233,1234,1238],with_bia:[1261,1271],with_cal:[979,1004],with_default_key_color:[40,41],with_edge_label:[1232,1234,1238,1273,1274],with_entries_as_list:[40,41],with_grad:[1078,1088,1273,1274],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1132,with_output_label:[1232,1234,1238,1273,1274],with_partial_v:[1273,1274],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,432,461,979,1059,1132],with_to_kv_fn:[1261,1272],with_to_out_fn:[1261,1272],with_to_q_fn:[1261,1272],within:[15,18,19,979,982,1101,1107,1188,1192],without:[40,41,43,979,1047,1049,1055,1176,1178,1287],wonder:1244,word:[15,16,17,979,982,1188,1192,1250,1251],work:[43,1286],worker:[905,914,915,1132],worker_class:[905,914,915,1132],worker_kwarg:1132,would:[43,857,858,1205,1210,1244,1287,1290],wrap:[15,40,41,42,43,430,432,466,471,475,479,480,482,979,991,1078,1092,1244],wrapper:43,write:[40,41,43,1244,1245,1290],written:[43,1244,1290],ws_new:[1078,1081,1083,1085,1086,1087],x1_i:[837,839,842,845,979,1008,1112,1120],x2_i:[837,839,842,845,979,1008,1112,1120],x_feat_dim:[1213,1224],x_i:[837,838,843,848],x_in:[1244,1286],x_inv:[1101,1103],x_max:[432,979,993],x_min:[432,979,993],x_sub:1132,xkk:1290,xkkm1:1290,xkm1km1:1290,xs0:1132,xs_t:1132,year:[1244,1290],yet:[1176,1185,1290],yield:[979,1075],you:[43,1244,1286,1287,1290],your:[1244,1245,1286,1287,1290],your_awesome_project:1287,yourself:[43,1244],yourslef:43,youtub:43,zero:[40,41,77,205,386,507,635,830,850,852,860,861,862,979,997,1043,1045,1051,1052,1076,1077,1078,1080,1081,1085,1086,1213,1221,1244,1252,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1277,1278,1279,1280],zero_pad:[289,432,559,688,979],zeros_lik:[127,289,432,559,688,979],zip:1132,zk_e:1290},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","floor_divide","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1004,"function":[77,80,85,96,100,102,103,104,106,107,205,208,213,220,224,226,227,228,230,231,386,389,394,406,410,412,413,414,416,417,507,510,515,527,531,533,534,535,537,538,635,638,643,655,659,661,662,663,665,666,830,833,837,849,853,855,856,857,859,860],Ones:1257,Using:1287,abs:[290,560,689,980],aco:[778,1113],acosh:[779,1114],activ:[189,373,493,627,808,1205,1247],adam:1278,adam_step:1080,adam_upd:1081,algebra:[97,167,221,348,407,475,528,606,656,766,850],all:[108,232,418,539,667,861],all_equ:981,all_nested_indic:1177,ani:[109,233,419,540,668,862],api:[0,43,75,111,203,235,384,421,505,542,633,670,828],arang:[128,291,433,561,690,982],arg_nam:983,argmax:[129,434,562,691,984],argmin:[130,435,563,692,985],args_to_ivi:16,args_to_n:17,argsort:[105,229,415,536,664,858],arithmet:[1,112,236,422,543,671],arrai:[0,3,43,75,110,111,113,131,203,234,235,237,244,292,384,420,421,423,436,505,541,542,544,564,633,669,670,672,693,828,864,986],array_equ:[293,694,987],arrays_equ:988,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[780,1115],asinh:[86,395,516,644,838],assert_supports_inplac:989,atan2:[782,1117],atan:[781,1116],atanh:[783,1118],attribut:[5,114,238,424,545,673],backend:[43,73],bilinear_resampl:[164,345,472,603,763,1095],binary_cross_entropi:1227,bitwis:[7,115,239,425,546,674],bitwise_and:[87,214,396,517,645,839],broadcast_to:[294,695,990],builder:51,builtin:[110,234,244,420,541,669,864],builtin_ab:[245,865],builtin_add:[246,866],builtin_and:[247,867],builtin_bool:[248,868],builtin_contain:[249,869],builtin_deepcopi:[250,870],builtin_dir:[251,871],builtin_eq:[252,872],builtin_float:[253,873],builtin_floordiv:[254,874],builtin_g:[255,875],builtin_getattr:[256,876],builtin_getattribut:[257,877],builtin_getitem:[258,878],builtin_gt:[259,879],builtin_int:[260,880],builtin_invert:[261,881],builtin_l:[262,882],builtin_lt:[263,548,676,883],builtin_mul:[264,884],builtin_n:[265,885],builtin_neg:[266,886],builtin_or:[267,887],builtin_po:[268,888],builtin_pow:[269,889],builtin_radd:[270,890],builtin_rand:[271,891],builtin_rfloordiv:[272,892],builtin_rmul:[273,893],builtin_ror:[274,894],builtin_rpow:[275,895],builtin_rsub:[276,896],builtin_rtruediv:[277,897],builtin_rxor:[278,898],builtin_setitem:[279,899],builtin_sub:[280,900],builtin_truediv:[281,901],builtin_xor:[282,902],cache_fn:991,cast:[132,295,437,565,696,959],ceil:[296,697,992],choleski:[767,1102],choose_random_framework:61,citat:1244,clear_framework_stack:62,clear_mem_on_dev:[682,921],clip:[297,698,993],clip_matrix_norm:994,clip_vector_norm:995,clone:1147,clone_arrai:1148,clone_it:1149,clone_nest:1150,clonedit:1134,cloneditem:1133,clonednest:1135,closest_valid_dtyp:960,code:1290,comparison:[9,116,240,426,547,675],compil:[298,438,699,903,904,1232],compile_graph:1233,concaten:[133,299,439,566,700,996],constant:[76,204,385,506,634,829],constant_pad:[300,567,701,997],contain:[40,41],container_typ:[702,998],content:1244,contribut:43,conv1d:[195,376,497,820,1214,1262],conv1d_transpos:[196,377,498,821,1215],conv1dtranspos:1263,conv2d:[197,378,499,629,822,1216,1264],conv2d_transpos:[198,379,500,823,1217],conv2dtranspos:1265,conv3d:[199,380,501,630,824,1218,1266],conv3d_transpos:[200,381,502,825,1219],conv3dtranspos:1267,convers:15,convert:[191,816,1250],convert_dtyp:961,copy_arrai:[703,999],copy_nest:1178,core:[119,243,429,551,679,863],cos:[88,397,518,646,840],cosh:[89,398,519,647,784,841,1119],cprint:1289,creat:43,creation:[77,205,386,507,635,830],cross:[301,704,1000],cross_entropi:1228,cumprod:[134,302,440,705,1001],cumsum:[706,1002],current_framework:63,current_framework_str:[707,1003],data:[80,84,208,212,389,393,510,514,638,642,833,836],debug_mod:45,debugg:44,default_devic:922,default_dtyp:962,default_float_dtyp:963,default_int_dtyp:964,default_nod:1151,depthwise_conv2d:[201,382,503,631,826,1220],depthwiseconv2d:1268,design:43,dev:[122,285,554,683,923],dev_clon:924,dev_clone_arrai:925,dev_clone_it:926,dev_clone_nest:927,dev_dist:928,dev_dist_arrai:929,dev_dist_it:930,dev_dist_nest:931,dev_from_str:[123,286,555,684,932],dev_to_str:[124,287,556,685,933],dev_unifi:934,dev_unify_arrai:935,dev_unify_it:936,dev_unify_nest:937,dev_util:938,devclonedit:908,devcloneditem:907,devclonednest:909,devdistit:911,devdistitem:910,devdistnest:912,devic:[20,120,283,430,552,680,905],devmapp:914,devmappermultiproc:915,diagon:[98,222,408,529,657,851],distribute_nest:1152,divid:1120,document:1244,dropout:[1221,1269],dtype:[135,303,441,568,708,955,965],dtype_bit:[136,304,442,569,709,966],dtype_from_str:[137,305,443,570,710,967],dtype_to_str:[138,306,444,571,711,968],ecosystem:52,einops_rearrang:1005,einops_reduc:1006,einops_repeat:1007,einsum:[181,364,485,619,800,1196],elementwis:[85,213,394,515,643,837],equal:[572,712,1008],erf:[481,785,1121],execute_with_gradi:[161,340,467,598,757,1082],exist:1009,exp:[786,1122],expand_dim:[307,713,1010],finfo:[82,210,391,512,640,834],firstlayersiren:1254,flip:[101,225,411,532,660,854,1011],float_img_to_uint8_img:1096,floor:[308,714,1012],floor_divid:[399,520,648,842],floormod:[309,715,1013],fomaml_step:1129,fork:43,fourier_encod:1014,framework:59,full:[139,310,445,573,716,1015],func:72,gather:[140,311,446,574,717,1016],gather_nd:[141,312,447,575,718,1017],geglu:1248,gelu:[374,494,809,1206,1249],gener:[22,127,289,432,559,688,979],get_all_arrays_in_memori:1018,get_all_arrays_on_dev:939,get_framework:64,get_min_bas:1019,get_min_denomin:1020,get_num_dim:[719,1021],get_referrers_recurs:1022,global:1235,glorotuniform:1255,gpu_is_avail:[940,1153],gradient:[24,160,339,466,597,756,1078],gradient_descent_upd:1083,gradient_imag:[165,346,473,604,764,1097],graph:1238,gym:53,handler:59,has_nan:1023,helper:1240,ident:[142,313,448,576,720,1024],iinfo:[83,211,392,513,641,835],imag:[26,163,344,471,602,762,1094],index_nest:1179,indices_wher:[143,314,449,721,1025],initi:1252,inplac:[11,117,241,427,549,677],inplace_arrays_support:1026,inplace_decr:[144,315,450,577,722,1027],inplace_incr:[145,316,451,578,723,1028],inplace_upd:[146,317,452,579,724,1029],inplace_variables_support:1030,inv:[768,1103],invalid_dtyp:969,is_arrai:[147,318,453,580,725,1031],is_float_dtyp:970,is_int_dtyp:971,is_vari:[162,341,468,599,758,1084],isfinit:[90,215,400,521,649,843],isinf:[319,581,726,1032],isnan:[91,216,401,522,650,844],ivi:[43,50,51,52,53,54,55,56,57,58,827,1286,1287,1290],ivymodul:[192,817],jax:74,keep:43,lamb:1279,lamb_upd:1085,lar:1280,lars_upd:1086,layer:[194,375,496,628,819,1213,1261],layer_norm:1231,layernorm:1276,leaky_relu:[810,1207],less:[92,217,402,523,651,845],linalg:[28,1101],linear:[97,167,221,348,407,475,528,606,656,766,850,1222,1271],linear_resampl:[148,320,454,582,727,1033],linspac:[149,321,455,583,728,1034],log2:[93,403,524,652,846],log:[787,1123,1241],log_global_inference_abs_tim:1236,log_global_inference_rel_tim:1237,logic:[30,171,354,479,611,774,1109],logical_and:[355,775,1110],logical_not:[94,218,404,525,653,847],logical_or:[356,776,1111],logspac:[150,322,456,584,729,1035],loss:1226,lstm:1270,lstm_updat:1223,maml_step:1130,manipul:[100,224,410,531,659,853],map:1180,map_nest_at_index:1181,map_nest_at_indic:1182,match_kwarg:1036,math:[32,172,357,480,612,777,1112],matmul:[323,585,730,1037],matrix_norm:[168,349,476,607,769,1104],maximum:[731,1038],mech:54,memori:55,meshgrid:[324,732,1039],meta:[34,1128],method:[96,220,406,527,655,849],minimum:[733,1040],model:56,modul:[1273,1274,1286],multi:1132,multi_head_attent:1224,multi_index_nest:1183,multidevcontain:42,multidevit:918,multidevitem:917,multidevnest:919,multiheadattent:1272,multinodeit:1138,multinodeitem:1137,multinodenest:1139,multinomi:[174,359,483,614,793,1189],multiprocess:[734,1041],mxnet:202,nativ:1286,nest:1176,nested_indices_wher:1184,nested_map:1185,network:1286,next:1244,node:[1132,1154],node_dist:1155,node_dist_arrai:1156,node_dist_it:1157,node_str:1158,node_to_str:1159,node_util:1160,nodedistit:1141,nodedistitem:1140,nodedistnest:1142,nodemapp:1144,nodemappermultiproc:1145,norm:[1230,1275],num_arrays_in_memori:1042,num_arrays_on_dev:941,num_cpu_cor:942,num_gpu:[125,943,1161],numpi:383,nutshel:1244,one_hot:[151,457,586,735,1043],ones:[78,206,387,508,636,831,1044],ones_lik:[152,325,458,587,736,1045],oper:[1,3,7,9,11,13,43,112,113,115,116,117,118,236,237,239,240,241,242,422,423,425,426,427,428,543,544,546,547,549,550,671,672,674,675,677,678],optim:[1277,1281],optimizer_upd:1087,overview:1244,param:1242,percent_used_mem_on_dev:944,percent_used_mem_on_nod:1162,pinv:[350,770,1105],portabl:1290,print_all_arrays_in_memori:1046,print_all_arrays_on_dev:945,profil:[121,284,431,553,681,920,1146],pull:43,queue_timeout:1047,randint:[175,360,615,794,1190],random:[36,173,358,482,613,792,1188],random_crop:1098,random_norm:[176,361,616,795,1191],random_uniform:[177,362,617,796,1192],reduce_max:[182,365,486,620,801,1197],reduce_mean:[183,366,487,621,802,1198],reduce_min:[184,367,488,622,803,1199],reduce_prod:[185,368,489,623,804,1200],reduce_std:[369,1201],reduce_sum:[186,370,490,624,805,1202],reduce_var:[187,371,491,625,806,1203],reduct:[38,180,363,484,618,799,1195],reflect:[13,118,242,428,550,678],relu:[811,1208],repeat:[326,737,1048],reptile_step:1131,request:43,reshap:[738,1049],robot:57,round:[327,739,1050],run:1287,scaled_dot_product_attent:1225,scatter_flat:[153,328,459,588,740,1051],scatter_nd:[154,329,460,589,741,1052],search:[102,226,412,533,661,855],seed:[178,797,1193],sequenti:[1283,1284],set:[103,227,413,534,662,856],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:946,set_default_dtyp:972,set_default_float_dtyp:973,set_default_int_dtyp:974,set_default_nod:1163,set_exception_debug_mod:48,set_framework:65,set_min_bas:1053,set_min_denomin:1054,set_nest_at_index:1186,set_nest_at_indic:1187,set_queue_timeout:1055,set_split_factor:[947,1164],set_tmp_dir:1056,set_with_grad:1088,sgd:1282,shape:[742,1057],shape_to_tupl:1058,show_graph:1234,shuffl:[179,798,1194],sigmoid:[812,1209],signatur:[96,220,406,527,655,849],sin:[788,1124],sinh:[789,1125],siren:1258,softmax:[190,495,813,1210],softplu:[814,1211],sort:[104,228,414,535,663,857],sparse_cross_entropi:1229,split:[155,330,461,590,743,1059],split_factor:[948,1165],split_func_cal:[949,1166],sqrt:[95,219,405,526,654,848],squeez:[156,331,462,591,744,1060],stable_divid:1061,stable_pow:1062,stack:[332,745,1063],stack_imag:[166,347,474,605,765,1099],standard:43,statist:[106,230,416,537,665,859],stop_gradi:[342,469,600,759,1089],str_to_nod:1167,submodul:43,supports_inplac:1064,svd:[352,609,772,1107],swapax:[592,746,1065],tan:[790,1126],tanh:[791,815,1127,1212],tensorflow:504,tile:[333,593,747,1066],tmp_dir:1067,to_dev:[126,288,557,686,950],to_ivi:18,to_ivy_modul:[193,818,1251],to_list:[748,1068],to_n:19,to_nod:1168,to_numpi:[749,1069],to_scalar:[750,1070],torch:632,total_mem_on_dev:951,total_mem_on_nod:1169,tpu_is_avail:[558,687,952,1170],train:1286,trainabl:1286,transpos:[157,334,463,751,1071],tree:1244,try_else_non:1072,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,208,212,389,393,510,514,638,642,833,836],uint8_img_to_float_img:1100,unifi:1171,unify_arrai:1172,unify_it:1173,unify_nest:1174,unset_debug_mod:49,unset_default_devic:953,unset_default_dtyp:975,unset_default_float_dtyp:976,unset_default_int_dtyp:977,unset_framework:71,unset_with_grad:1090,unstack:[158,335,464,594,752,1073],updat:43,used_mem_on_dev:954,used_mem_on_nod:1175,util:[107,231,417,538,666,860],valid_dtyp:978,value_is_nan:1074,variabl:[343,470,601,760,1091],variable_data:[761,1092],vector_norm:[99,223,409,530,658,852],vector_to_skew_symmetric_matrix:[170,353,478,610,773,1108],verbos:1288,vision:58,where:[336,753,1075,1244],why:1290,with_grad:1093,wrapper:72,write:1287,your:43,zero:[79,207,388,509,637,832,1260],zero_pad:[337,595,754,1076],zeros_lik:[159,338,465,596,755,1077]}})